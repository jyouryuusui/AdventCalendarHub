{
  "title": "houdini advent calendar hub",
  "summary": "houdini advent calendar articles",
  "lastUpdated": "2023-11-28T12:34:56+09:00",
  "categories": "Houdini",
  "tags": "Recommend SOP VOP ROP DOP COP CHOP VEX Wrangle HoudiniEngine HScript Python",
  "data": [
    {
      "thumbnailUrl": "2016120101.jpg",
      "creationDate": "2016-12-01",
      "author": {
          "name": "@jyouryuusui",
          "twitterIcon": "jyouryuusui.jpg",
          "qiitaUrl": "https://qiita.com/jyouryuusui",
          "twitterUrl": "https://twitter.com/jyouryuusui"
      },
      "title": {
          "ja": "Copy/Stampを卒業しよう！",
          "en": "Let's graduate to Copy/Stamp!"
      },
      "articleUrl": "https://qiita.com/jyouryuusui/items/d1fc4bc521f079ab6be6",
      "categories": "Houdini",
      "tags": "SOP VEX Wrangle",
      "articleId": 2016120101,
      "summary": {
          "ja": "この記事では、HoudiniのCopy/Stamp機能を使った3Dモデリング手法を紹介しています。特に、PointAttributeを利用した効率的なモデリング方法を詳細に説明しており、移動、スケール、回転などの基本操作をカバーしています。また、CopySOPのstamp機能の代わりにPointAttributeを利用することで、処理の効率化とノードの簡素化が可能であることを強調しています​",
          "en": "This article introduces 3D modeling techniques using Houdini's Copy/Stamp feature. In particular, it details an efficient modeling method using PointAttribute, covering basic operations such as translation, scale, and rotation. It also emphasizes that using PointAttribute instead of CopySOP's stamp function can streamline the process and simplify the nodes."
      }
  },
  {
      "thumbnailUrl": "2016120201.jpg",
      "creationDate": "2016-12-02",
      "author": {
          "name": "@jyouryuusui",
          "twitterIcon": "jyouryuusui.jpg",
          "qiitaUrl": "https://qiita.com/jyouryuusui",
          "twitterUrl": "https://twitter.com/jyouryuusui"
      },
      "title": {
          "ja": "パラメーターには何が入るのか？Edit String＆Expression",
          "en": "What goes in the parametersEdit String & Expression"
      },
      "articleUrl": "https://qiita.com/jyouryuusui/items/08090811fec7177afc45",
      "categories": "Houdini",
      "tags": "Python HScript",
      "articleId": 2016120201,
      "summary": {
          "ja": "この記事では、Houdini内のパラメーターへのExpression（式）の入力に関する詳細なガイドを提供しています。Expressionの基本から、Edit Stringを使った高度なテクニックまでを説明し、パラメーターのカスタマイズ方法に焦点を当てています。また、Expressionの関数やローカル変数の使い方についても詳しく解説しており、Houdiniのパラメーター管理の深い理解に役立つ内容となっています",
          "en": "This article provides a detailed guide to entering Expressions into parameters within Houdini, from the basics of Expression to advanced techniques using Edit String, focusing on how to customize parameters. It also details the use of Expression functions and local variables to help you gain a deeper understanding of parameter management in Houdini!"
      }
  },
  {
      "thumbnailUrl": "2016120301.jpg",
      "creationDate": "2016-12-03",
      "author": {
          "name": "@jyouryuusui",
          "twitterIcon": "jyouryuusui.jpg",
          "qiitaUrl": "https://qiita.com/jyouryuusui",
          "twitterUrl": "https://twitter.com/jyouryuusui"
      },
      "title": {
          "ja": "TraceとFind Shortest Pathで迷路の答えを導こう",
          "en": "Use Trace and Find Shortest Path to guide you to the answer to the maze!"
      },
      "articleUrl": "https://qiita.com/jyouryuusui/items/b5ea02dc3457c35416c9",
      "categories": "Houdini",
      "tags": "SOP COP",
      "articleId": 2016120301,
      "summary": {
          "ja": "この記事では、Houdiniを使用して迷路の画像から脱出経路を求める方法を説明しています。Trace SOP、Group SOP、Find Shortest Path SOPの使用方法に焦点を当て、迷路画像のトレース、スタートとゴール地点の設定、最短経路の検出などのステップを詳しく説明しています。記事はHoudiniのこれらのツールを使用して複雑な問題を解決する方法を示しています​",
          "en": "This article explains how to use Houdini to find escape routes from a maze image, focusing on the use of the Trace SOP, Group SOP, and Find Shortest Path SOP and detailing the steps involved in tracing a maze image, setting start and finish points, and finding the shortest path. The steps are explained in detail. The article shows how to use these tools in Houdini to solve complex problems."
      }
  },
  {
      "thumbnailUrl": "2016120401.jpg",
      "creationDate": "2016-12-04",
      "author": {
          "name": "@jyouryuusui",
          "twitterIcon": "jyouryuusui.jpg",
          "qiitaUrl": "https://qiita.com/jyouryuusui",
          "twitterUrl": "https://twitter.com/jyouryuusui"
      },
      "title": {
          "ja": "Wire SolverでなくFor-Eachを利用したワイヤー表現",
          "en": "Wire representation using For-Each instead of Wire Solver"
      },
      "articleUrl": "https://qiita.com/jyouryuusui/items/7d67a37031a090f7c9e2",
      "categories": "Houdini",
      "tags": "SOP Wrangle",
      "articleId": 2016120401,
      "summary": {
          "ja": "この記事では、HoudiniでWire Solverの代わりにFor-Eachを用いてワイヤーを表現する方法について説明しています。Stroke SOP、Ray SOP、PolyFrame SOPなどを組み合わせて、ワイヤーの形状を作成し、動きを表現する手順が詳細に説明されています。For-Eachを使用することで、より制御が容易で効率的なワイヤー表現が可能になることを示しています",
          "en": "This article explains how to use For-Each instead of Wire Solver to represent wires in Houdini, detailing how to combine Stroke SOPs, Ray SOPs, PolyFrame SOPs, etc. to create wire shapes and represent movement. It shows how For-Each can be used to create more controllable and efficient wire expressions."
      }
  },
  {
      "thumbnailUrl": "2016120501.jpg",
      "creationDate": "2016-12-05",
      "author": {
          "name": "@yone80@github",
          "twitterIcon": "yone80@github.jpg",
          "qiitaUrl": "https://qiita.com/yone80@github",
          "twitterUrl": ""
      },
      "title": {
          "ja": "Vex で Curve に沿って変形するやつ",
          "en": "The one that deforms along a Curve in Vex."
      },
      "articleUrl": "http://qiita.com/yone80@github/items/d0580bc71a6a47ec567f",
      "categories": "Houdini",
      "tags": "SOP VEX Wrangle",
      "articleId": 2016120501,
      "summary": {
          "ja": "[記事削除済み]この記事では、Houdiniを使用してCurveに沿ってジオメトリを変形させる方法を説明していました。Curveに方向を示すNとupベクトルを作成し、Sweep SOPを使うことを推奨しています。その後、Attribute Wrangle SOPを使用して変形させたいジオメトリをCurve上に配置し、primuv()関数を使ってプリミティブのUV座標で属性を取得します。CurveがPolylineまたはNurbsの場合のサイズ調整方法についても説明し、Curveを延長する方法を示しています。",
          "en": "[article deleted] This article explained how to deform geometry along a Curve using Houdini, recommending creating N and up vectors for the direction on the Curve and using the Sweep SOP. Then, the Attribute Wrangle SOP is used to place the geometry to be deformed on the Curve, and the primuv() function is used to get the attributes in the primitive's UV coordinates, shows how to extend the Curve."
      }
  },
  {
      "thumbnailUrl": "2016120601.jpg",
      "creationDate": "2016-12-06",
      "author": {
          "name": "@ikatnek",
          "twitterIcon": "ikatnek.jpg",
          "qiitaUrl": "https://qiita.com/ikatnek",
          "twitterUrl": "https://twitter.com/ikatnek"
      },
      "title": {
          "ja": "Pyro のレンダリング",
          "en": "Pyro Rendering"
      },
      "articleUrl": "https://ikatnek.blogspot.jp/p/pyro-rendering.html",
      "categories": "Houdini",
      "tags": "Pyro DOP ROP Mantra",
      "articleId": 2016120601,
      "summary": {
          "ja": "この記事は、HoudiniのPyro FXをMantraでレンダリングする際にノイズを低減する方法について説明しています。まず、Houdiniで元のシーンを作成し、カメラ位置を設定し、トーラス形状から炎をシミュレートします。レンダリング精度を向上させるために、Volume QualityとStochastic Samplesの値を調整し、RGBとアルファチャンネルの画質を比較します。結論として、Pyroボリュームのレンダリング品質はVolume QualityとStochastic Samplesに大きく依存し、これらのパラメータを高めに設定することでノイズを低減できることが示されています。",
          "en": "This article explains how to reduce noise when rendering Pyro FX in Houdini with Mantra. First, create the original scene in Houdini, set the camera position, and simulate a flame from a torus shape. To improve the rendering accuracy, we adjust the values of Volume Quality and Stochastic Samples and compare the image quality of the RGB and alpha channels. In conclusion, it is shown that the rendering quality of a Pyro volume is highly dependent on Volume Quality and Stochastic Samples, and that setting these parameters higher can reduce noise."
      }
  },
  {
      "thumbnailUrl": "2016120701.jpg",
      "creationDate": "2016-12-07",
      "author": {
          "name": "@fujitarium",
          "twitterIcon": "fujitarium.jpg",
          "qiitaUrl": "https://qiita.com/fujitarium",
          "twitterUrl": "https://twitter.com/fujitarium"
      },
      "title": {
          "ja": "火花などのライン化した擬似モーションブラーとレンダーのモーションブラーの共存",
          "en": "Coexistence of linealized pseudo-motion blur such as sparks and rendered motion blur"
      },
      "articleUrl": "https://qiita.com/fujitarium/items/041e42af884bf32a7619",
      "categories": "Houdini",
      "tags": "SOP NDC ROP",
      "articleId": 2016120701,
      "summary": {
          "ja": "この記事では、Houdiniを使用して動いているカメラから見たモーションラインを作成する方法について説明しています。特に、動いているポイントに対するカメラのモーションラインの作成や、レンダリング時のモーションブラーの打ち消しについて詳しく説明しています​",
          "en": "This article describes how to use Houdini to create motion lines as seen from a moving camera. In particular, it details the creation of motion lines for a camera relative to a moving point and how to cancel motion blur during rendering."
      }
  },
  {
      "thumbnailUrl": "2016120801.jpg",
      "creationDate": "2016-12-08",
      "author": {
          "name": "@it_ks",
          "twitterIcon": "it_ks.jpg",
          "qiitaUrl": "https://qiita.com/it_ks",
          "twitterUrl": "https://twitter.com/it_ks"
      },
      "title": {
          "ja": "Houdiniの文字モジしたUIたち",
          "en": "Houdini's Lettered UIs"
      },
      "articleUrl": "https://qiita.com/it_ks/items/be1e646e8ecec10ba154",
      "categories": "Houdini",
      "tags": "Hscript Python",
      "articleId": 2016120801,
      "summary": {
          "ja": "この記事では、HoudiniのTextport、Python Shell、Python Source Editor、Python Panel EditorといったUIコンポーネントについて詳しく解説しています。これらのUIはHoudiniとのやり取りに使われ、Pythonを含む様々なスクリプト言語のサポートが提供されています。また、HoudiniのPython環境で利用可能なライブラリについても触れています",
          "en": "This article details Houdini's UI components such as Textport, Python Shell, Python Source Editor, and Python Panel Editor. These UIs are used to interact with Houdini and provide support for a variety of scripting languages, including Python. It also discusses the libraries available in Houdini's Python environment."
      }
  },
  {
      "thumbnailUrl": "2016120901.jpg",
      "creationDate": "2016-12-09",
      "author": {
          "name": "@takavfx",
          "twitterIcon": "takavfx.jpg",
          "qiitaUrl": "https://qiita.com/takavfx",
          "twitterUrl": "https://twitter.com/takavfx"
      },
      "title": {
          "ja": "Bento Toolsetを紹介してみる。",
          "en": "Let me introduce Bento Toolset."
      },
      "articleUrl": "https://qiita.com/takavfx/items/a3e92bb2edd3f7d30f0f",
      "categories": "Houdini",
      "tags": "Python Git GitHub gitkraken",
      "articleId": 2016120901,
      "summary": {
          "ja": "この記事は、GitHubで公開されているHoudini Toolset「Bento」を紹介しています。Bentoは、Cache Dependency、Create Delayed Load Procedural、Cache Managerなどのツールを含むオープンソースのツールセットです。各ツールの機能やインストール方法についても説明しています​",
          "en": "This article introduces the Houdini Toolset \"Bento\" available on GitHub, Bento is an open source Cache Dependency, Create Delayed Load Procedural, Cache Manager, and more. It also explains the function of each tool and how to install them."
      }
  },
  {
      "thumbnailUrl": "2016121001.jpg",
      "creationDate": "2016-12-10",
      "author": {
          "name": "@_ShoHey_",
          "twitterIcon": "_ShoHey_.jpg",
          "qiitaUrl": "https://qiita.com/_ShoHey_",
          "twitterUrl": "https://twitter.com/_ShoHey_"
      },
      "title": {
          "ja": "Wrangleを使おう3 「Replace \"For Loop Sop\"」",
          "en": "Using Wrangle 3 - Replace ForLoop"
      },
      "articleUrl": "http://fxnomemo.blogspot.jp/2016/12/wrangle-3-replace-forloop.html",
      "categories": "Houdini",
      "tags": "SOP Wrangle",
      "articleId": 2016121001,
      "summary": {
          "ja": "この記事では、Houdini内でのWrangleの使用方法とその効率化について説明しています。特に、For LoopとAttribute Promoteノードの代わりにWrangleを使用することで、処理速度を向上させる方法を解説しています。Voronoiで分割された各ピースの面積計算を例に、nuniqueval()、uniqueval()、findattribvalcount()、findattribval()などの関数を用いてWrangleで処理を実行する方法を紹介し、その速度の向上を具体的なデータで示しています。記事は、Wrangleの有効利用と処理の最適化に重点を置いています。",
          "en": "This article describes how to use Wrangle within Houdini and how to make it more efficient. In particular, it explains how to increase processing speed by using Wrangle instead of the For Loop and Attribute Promote nodes, using the calculation of the area of each piece divided in Voronoi as an example, nuniqueval(), uniqueval(), findattribvalcount(), findattribval(), and other functions to perform the process in Wrangle, and shows the improvement in speed with concrete data. The article focuses on the effective use of Wrangle and optimizing processing."
      }
  },
  {
      "thumbnailUrl": "2016121101.jpg",
      "creationDate": "2016-12-11",
      "author": {
          "name": "@satoruhiga",
          "twitterIcon": "satoruhiga.jpg",
          "qiitaUrl": "https://qiita.com/satoruhiga",
          "twitterUrl": "https://twitter.com/satoruhiga"
      },
      "title": {
          "ja": "HDKについて",
          "en": "About HDK"
      },
      "articleUrl": "https://qiita.com/satoruhiga/items/49f8fa93307350e3c662",
      "categories": "Houdini",
      "tags": "HDK C++ Python",
      "articleId": 2016121101,
      "summary": {
          "ja": "HDKはHoudiniのC++ベースのプログラミング環境で、ノードプラグインの作成に利用される。記事では、開発環境のセットアップ方法、サンプルプロジェクトのビルド手順、Visual Studioを使ったプロジェクトの作成とカスタムプラグインのビルド方法を詳細に説明。HDKのポテンシャルとして、C++のライブラリ活用や他のアプリケーションとの高速連携が挙げられる​",
          "en": "An in-depth guide on HDK, a C++ based programming environment in Houdini for creating node plugins. Covers setting up development environment, building sample projects, and creating custom plugins using Visual Studio. Highlights the potential of HDK in utilizing C++ libraries and fast integration with other applications​​."
      }
  },
  {
      "thumbnailUrl": "2016121201.jpg",
      "creationDate": "2016-12-12",
      "author": {
          "name": "@sugiggy",
          "twitterIcon": "sugiggy.jpg",
          "qiitaUrl": "https://qiita.com/sugiggy",
          "twitterUrl": "https://twitter.com/sugiggy"
      },
      "title": {
          "ja": "触ったものから動きだすキッカケを作る２つの方法。",
          "en": "Two Methods to Make Objects Move When Touched "
      },
      "articleUrl": "http://sugi-iggy.blogspot.ca/2016/12/blog-post.html",
      "categories": "Houdini",
      "tags": "SOP CHOP",
      "articleId": 2016121201,
      "summary": {
          "ja": "Houdiniでオブジェクトが触れられた順に動き出すアニメーションを作る2つの手法を紹介。1つ目はsolver sopを使った方法、2つ目はchopを利用した方法。それぞれの手順と必要なノードの設定方法が詳しく解説されている​",
          "en": "Presents two methods in Houdini for creating animations where objects move when touched. The first method uses solver sop, and the second utilizes chop, with detailed steps and node configuration for each​​."
      }
  },
  {
      "thumbnailUrl": "2016121301.jpg",
      "creationDate": "2016-12-13",
      "author": {
          "name": "@kit2cuz",
          "twitterIcon": "kit2cuz.jpg",
          "qiitaUrl": "https://qiita.com/kit2cuz",
          "twitterUrl": "https://twitter.com/kit2cuz"
      },
      "title": {
          "ja": "PythonによるAlembicの情報取得",
          "en": "Retrieving Alembic Information with Python"
      },
      "articleUrl": "https://qiita.com/kit2cuz/items/f1704b3c9205dbb47775",
      "categories": "Houdini",
      "tags": "Alembic Python",
      "articleId": 2016121301,
      "summary": {
          "ja": "HoudiniのPythonを使ってAlembicファイルのデータを取得する方法。_alembic_hom_extensionsモジュールを利用し、オブジェクトの階層構造、アニメーション範囲、トランスフォーム情報を抽出する手法を解説。さらに、カスタム関数をシーンファイルに登録し、Alembicオブジェクトのアニメーションカーブを操作する方法が紹介されている​",
          "en": "Describes using Python in Houdini to extract data from Alembic files, focusing on _alembic_hom_extensions module. Explains extracting object hierarchy, animation ranges, and transform information. Additionally, shows how to register custom functions in scene files for manipulating animation curves of Alembic objects​​."
      }
  },
  {
      "thumbnailUrl": "2016121401.jpg",
      "creationDate": "2016-12-14",
      "author": {
          "name": "@yuya_torii",
          "twitterIcon": "yuya_torii.jpg",
          "qiitaUrl": "https://qiita.com/yuya_torii",
          "twitterUrl": "https://twitter.com/yuya_torii"
      },
      "title": {
          "ja": "Wrangle + SolverSOPでツタを這わせる",
          "en": "Creating Climbing Ivy Animation with Wrangle + SolverSOP"
      },
      "articleUrl": "https://qiita.com/yuya_torii/items/fd34f265e8d4a3887eee",
      "categories": "Houdini",
      "tags": "SOP Wrangle",
      "articleId": 2016121401,
      "summary": {
        "ja": "Houdiniでツタが成長するアニメーションを作るプロセスを解説。SolverSOPとwrangleを用いて、ツタの成長方向の制御、分岐の作成、動きのブレを加える手法などが紹介されている。ツタの自然な成長をシミュレートするためのさまざまなステップが説明されている",
        "en": "Explains creating ivy growth animations in Houdini using SolverSOP and wrangle. Discusses controlling growth direction, creating branches, and adding movement variation. Various steps to simulate natural ivy growth are detailed​​."
    }
  },
  {
      "thumbnailUrl": "2016121501.jpg",
      "creationDate": "2016-12-15",
      "author": {
          "name": "@shige_ktgw",
          "twitterIcon": "shige_ktgw.jpg",
          "qiitaUrl": "https://qiita.com/shige_ktgw",
          "twitterUrl": "https://twitter.com/shige_ktgw"
      },
      "title": {
          "ja": "L-system概要と作例01",
          "en": "L-system Overview and Example 01"
      },
      "articleUrl": "http://nomoreretake.net/2016/12/15/houdini_l-system_intro/",
      "categories": "Houdini",
      "tags": "Lsystem SOP",
      "articleId": 2016121501,
      "summary": {
        "ja": "記事では、HoudiniのL-Systemノードについて解説しています。L-Systemは、特定のルールに基づいて反復処理を行い、枝分かれする現象を表現できるツールです。この記事では、L-Systemの作成に必要な3つの工程、ルールの設定、数値の設定、反復回数の決定について詳しく説明しています。また、標準プリセットにない様々なL-Systemの例を紹介しています。",
        "en": "The article discusses Houdini's L-System node, a tool that allows you to iterate based on specific rules to represent branching phenomena. This article details the three steps required to create an L-System: setting the rules, setting the values, and determining the number of iterations. It also provides examples of various L-Systems that are not in the standard presets."
      }
  },
  {
      "thumbnailUrl": "2016121601.jpg",
      "creationDate": "2016-12-16",
      "author": {
          "name": "@shige_ktgw",
          "twitterIcon": "shige_ktgw.jpg",
          "qiitaUrl": "https://qiita.com/shige_ktgw",
          "twitterUrl": "https://twitter.com/shige_ktgw"
      },
      "title": {
          "ja": "L-system 作例02",
          "en": "L-system Overview and Example 02"
      },
      "articleUrl": "http://nomoreretake.net/2016/12/16/houdinil_system_sample02/",
      "categories": "Houdini",
      "tags": "Lsystem SOP",
      "articleId": 2016121601,
      "summary": {
          "ja": "この記事では、HoudiniのL-Systemを使用した様々な作例を紹介しています。例えば、2次元および3次元のヒルベルト曲線、複数のコッホ曲線バリエーション、シェルピンスキーのギャレットなどがあります。また、雪の結晶のような図形を作成する方法や、Copy(SOP)を使ったパターンの回転と増加についても説明しています。各サンプルでは、Premise、Rule、Angle、Generationsなどのパラメータが設定されています。これらの作例は、L-Systemの柔軟性と多様性を示しています。",
          "en": "This article presents various examples of work using Houdini's L-System. Examples include 2D and 3D Hilbert curves, multiple Koch curve variations, and Sierpinski's Garrett. It also explains how to create snowflake-like shapes and how to rotate and increase patterns using Copy(SOP). Each sample has parameters such as Premise, Rule, Angle, and Generations. These examples demonstrate the flexibility and versatility of the L-System."
      }
  },
  {
      "thumbnailUrl": "2016121701.jpg",
      "creationDate": "2016-12-17",
      "author": {
          "name": "@kit2cuz",
          "twitterIcon": "kit2cuz.jpg",
          "qiitaUrl": "https://qiita.com/kit2cuz",
          "twitterUrl": "https://twitter.com/kit2cuz"
      },
      "title": {
          "ja": "VEXスニペットの登録の方法と内積について",
          "en": "Registering VEX Snippets and Understanding Dot Products"
      },
      "articleUrl": "https://qiita.com/kit2cuz/items/ba67b8dee3fd5d0de479",
      "categories": "Houdini",
      "tags": "SOP VEX Wrangle",
      "articleId": 2016121701,
      "summary": {
          "ja": "VEXスニペットの登録方法について解説。VEXスニペットは、WrangleノードのVEXpressionパラメータ横のリストに表示されるコードで、ユーザー設定フォルダにあるVEXpressions.txtファイルにコードを記述して独自のスニペットを作成できる。また、内積の使い方を説明し、ベクトルの方向や距離に基づいてポイントの捻りを表現する方法を紹介",
          "en": " Explains how to register VEX snippets in Houdini. VEX snippets are code listed next to the VEXpression parameter in Wrangle nodes, and users can create their snippets by writing code in the VEXpressions.txt file located in the user settings folder. The article also explains the use of dot products to represent twists in points based on vector direction and distance."
      }
  },
  {
      "thumbnailUrl": "2016121801.jpg",
      "creationDate": "2016-12-18",
      "author": {
          "name": "@Yamabe_Michiyoshi",
          "twitterIcon": "Yamabe_Michiyoshi.jpg",
          "qiitaUrl": "https://qiita.com/Yamabe_Michiyoshi",
          "twitterUrl": "https://twitter.com/Yamabe_Michiyoshi"
      },
      "title": {
          "ja": "Interactive Houdini",
          "en": "Interactive Houdini"
      },
      "articleUrl": "http://www.technical-artist.net/?p=1217",
      "categories": "Houdini",
      "tags": "SOP CHOP",
      "articleId": 2016121801,
      "summary": {
          "ja": "Houdiniで外部デバイスからのデータをインタラクティブに取り込む方法を解説。マウス、ペンタブレット、キーボード、MIDIコントローラを使用してHoudiniにデータを入力する例を提示。CHOP（Channel Operator）を用いてデータを記録し、再生するプロセスを説明し、これを応用して様々なインタラクティブなビジュアルを作成することが可能であることを示している",
          "en": "Explains how to interactively import data from external devices in Houdini. Provides examples of using a mouse, pen tablet, keyboard, and MIDI controller to input data into Houdini; describes the process of recording and playing back data using CHOP (Channel Operator), and shows how this can be applied to create a variety of interactive visuals. The presentation shows how this can be applied to create a variety of interactive visuals."
      }
  },
  {
      "thumbnailUrl": "2016121901.jpg",
      "creationDate": "2016-12-19",
      "author": {
          "name": "@it_ks",
          "twitterIcon": "it_ks.jpg",
          "qiitaUrl": "https://qiita.com/it_ks",
          "twitterUrl": "https://twitter.com/it_ks"
      },
      "title": {
          "ja": "ノードっていくつあるんですか？",
          "en": "How many nodes are there?"
      },
      "articleUrl": "https://qiita.com/it_ks/items/08f6027ffd0aa9fab079",
      "categories": "Houdini",
      "tags": "Python",
      "articleId": 2016121901,
      "summary": {
          "ja": "Houdiniのノード数をカウントする方法について解説。houモジュールとNodeTypeを用いて、各ノードカテゴリ内のノード数を確認し、その結果を数値で示している。具体的には、CHOPノードカテゴリ内のノード数が103であることを例に挙げ、プログラミングを通してHoudini内のノード構成を分析している",
          "en": "Describes a method to count the number of nodes in Houdini. Using the hou module and NodeType, it checks the number of nodes in each node category and presents the results numerically. For example, it identifies 103 nodes within the CHOP node category, analyzing Houdini's node structure through programming."
      }
  },
  {
      "thumbnailUrl": "2016122001.jpg",
      "creationDate": "2016-12-20",
      "author": {
          "name": "@yone80@github",
          "twitterIcon": "yone80@github.jpg",
          "qiitaUrl": "https://qiita.com/yone80@github",
          "twitterUrl": ""
      },
      "title": {
          "ja": "四角ポリゴンに合わせて変形",
          "en": "Transform to fit square polygons"
      },
      "articleUrl": "http://qiita.com/yone80@github/items/e373c104520c38bd9610",
      "categories": "Houdini",
      "tags": "SOP Wrangle",
      "articleId": 2016122001,
      "summary": {
          "ja": "[記事削除済み]この記事では、Houdiniを使用してジオメトリの複製と変形を行う方法を紹介していました。基本構成はシンプルで、GEO、REST、REFERENCEというNull SOPが使用されています。変形にはMatch Size SOPでサイズ調整、Attribute Wrangle SOPで必要な属性を設定し、Normal SOPでポイントのNを生成します。その後、Match Topology SOPと「deform」Attribute Wrangle SOPによってジオメトリを変形し、「check_geo」Attribute Wrangle SOPとSwitch SOPで形状の一致をチェックしています。",
          "en": "[article deleted] This article showed how to duplicate and deform geometry using Houdini. The basic structure is simple: the Null SOPs GEO, REST, and REFERENCE are used. For deformation, the Match Size SOP is used to adjust the size, the Attribute Wrangle SOP is used to set the necessary attributes, and the Normal SOP generates the N for the points. The geometry is then deformed by the Match Topology SOP and \"deform\" Attribute Wrangle SOP, and the shape match is checked by the \"check_geo\" Attribute Wrangle SOP and Switch SOP."
      }
  },
  {
      "thumbnailUrl": "2016122101.jpg",
      "creationDate": "2016-12-21",
      "author": {
          "name": "@jyouryuusui",
          "twitterIcon": "jyouryuusui.jpg",
          "qiitaUrl": "https://qiita.com/jyouryuusui",
          "twitterUrl": "https://twitter.com/jyouryuusui"
      },
      "title": {
          "ja": "隣の面をハーフエッジやバーテックスから求める",
          "en": "Finding Adjacent Faces Using Half-Edges and Vertices"
      },
      "articleUrl": "https://qiita.com/jyouryuusui/items/bddbb3e249f37c2a3cab",
      "categories": "Houdini",
      "tags": "SOP Wrangle",
      "articleId": 2016122101,
      "summary": {
          "ja": "Houdiniにおいて、隣接する面を特定する方法を解説。groupSOPを利用した方法やハーフエッジ、バーテックスを用いた方法を通じて、ポリゴンの隣接関係を解析する。四角形ポリゴンに限定されるが、ポイントとバーテックスの関係を用いて隣接するプリミティブを特定する手法を提供している",
          "en": "Explains how to identify adjacent faces in Houdini. Discusses methods using groupSOP, half-edges, and vertices to analyze polygon adjacency. Although limited to quadrilateral polygons, the article offers methods to identify neighboring primitives using relationships between points and vertices."
      }
  },
  {
      "thumbnailUrl": "2016122201.jpg",
      "creationDate": "2016-12-22",
      "author": {
          "name": "@hiroakit",
          "twitterIcon": "hiroakit.jpg",
          "qiitaUrl": "https://qiita.com/hiroakit",
          "twitterUrl": "https://twitter.com/hiroakit"
      },
      "title": {
          "ja": "HoudiniをAzure NV仮想マシンで動かす",
          "en": "Running Houdini in an Azure NV virtual machine"
      },
      "articleUrl": "https://qiita.com/hiroakit/items/54f7eeb43cb232f8cbde",
      "categories": "Houdini",
      "tags": "Azure",
      "articleId": 2016122201,
      "summary": {
          "ja": "この記事では、エフェクト作成時の待機時間を高性能なマシンで短縮する方法について説明しています。MicrosoftのAzure NV仮想マシンを使用し、NVIDIA Tesla M60 GPUを搭載した仮想マシンでHoudiniを動かします。料金は従量課金制で、具体的な料金表も提示されています。Houdiniの処理時間をNV6とNV24で比較し、コア数が増えると所要時間が短縮されることを実証しています。最後には、Azure NV仮想マシンのセットアップ方法を簡単に説明しています。",
          "en": "The article discusses reducing the waiting time during effect creation using high-performance machines. It explains using Microsoft's Azure NV virtual machines, equipped with NVIDIA Tesla M60 GPUs, to run Houdini. The pricing is pay-as-you-go, with detailed rates provided. A comparison between Houdini's processing times on NV6 and NV24 shows reduced times with increased core numbers. The article also briefly describes how to set up an Azure NV virtual machine."
      }
  },
  {
      "thumbnailUrl": "2016122301.jpg",
      "creationDate": "2016-12-23",
      "author": {
          "name": "@yone80@github",
          "twitterIcon": "yone80@github.jpg",
          "qiitaUrl": "https://qiita.com/yone80@github",
          "twitterUrl": ""
      },
      "title": {
          "ja": "アトリビュートの型修飾子 (Type qualifire) について",
          "en": "About Attribute Type Qualifiers (Type qualifire)"
      },
      "articleUrl": "http://qiita.com/yone80@github/items/65e0104e80519ca55c4b",
      "categories": "Houdini",
      "tags": "SOP VEX",
      "articleId": 2016122301,
      "summary": {
          "ja": "[記事削除済み]この記事では、Houdiniでの型修飾子(Type qualifier)の役割と使用方法について解説していました。型修飾子は、変形時のアトリビュートの扱い方を決定する情報で、Attribute Create SOPのTypeパラメータやVEXのsetattribtypeinfo()関数で設定可能です。変形の影響を受けるかどうかに応じて、Position、Vector、Normal、Color、Quaternion、Transform Matrixなどの型修飾子があります。ただし、Wrangle SOPやVOP SOPで変形する際は型修飾子が付いているアトリビュートを変形しない場合があるため、Normal SOPやAttribute Reorient SOP、Deformation Wrangle SOPを適切に使用することが推奨されています。",
          "en": "[article deleted] This article explained the role and use of type qualifiers (Type qualifier) in Houdini. Type qualifiers are information that determines how attributes are handled during deformation, and can be set using the Type parameter of the Attribute Create SOP or the VEX setattribtypeinfo() function. Depending on whether or not the transformation is affected, there are several type modifiers, including Position, Vector, Normal, Color, Quaternion, and Transform Matrix. However, it is recommended to use the Normal SOP, Attribute Reorient SOP, and Deformation Wrangle SOP appropriately, as the Wrangle SOP and VOP SOP may not deform attributes with type modifiers when deforming with them The Normal SOP, Attribute Reorient SOP and Deformation Wrangle SOP are recommended to be used properly."
      }
  },
  {
      "thumbnailUrl": "2016122401.jpg",
      "creationDate": "2016-12-24",
      "author": {
          "name": "@flatwellrichsum",
          "twitterIcon": "flatwellrichsum.jpg",
          "qiitaUrl": "https://qiita.com/flatwellrichsum",
          "twitterUrl": "https://twitter.com/hiraitoyokazu"
      },
      "title": {
          "ja": "SOP作例の一例",
          "en": "An example of a SOP"
      },
      "articleUrl": "http://graberry.blog70.fc2.com/blog-entry-196.html",
      "categories": "Houdini",
      "tags": "SOP",
      "articleId": 2016122401,
      "summary": {
          "ja": "[記事削除済み]著者は数ヶ月前からSOPの作例集を作成し、新入社員にSOPの感覚を鍛えさせている。例として「粘着式クリーナー（コロコロ）」の作成方法を紹介。これはxyzdist()とprimuv()関数を用いて実装されており、他の方法も可能とのこと。",
          "en": "[article deleted] The author has been creating a collection of SOP examples for several months to train new employees in the sense of SOP. As an example, he shows how to create an \"adhesive cleaner (korokoro)\". This is implemented using the xyzdist() and primuv() functions, and he says other methods are possible."
      }
  },
  {
      "thumbnailUrl": "2016122501.jpg",
      "creationDate": "2016-12-25",
      "author": {
          "name": "@ikatnek",
          "twitterIcon": "ikatnek.jpg",
          "qiitaUrl": "https://qiita.com/ikatnek",
          "twitterUrl": "https://twitter.com/ikatnek"
      },
      "title": {
          "ja": "二つのシミュレーションを作成、片方をもう一方でコントロールする方法",
          "en": "Create two simulations, one controlled by the other"
      },
      "articleUrl": "https://ikatnek.blogspot.ca/p/setting-2-sims.html",
      "categories": "Houdini",
      "tags": "DOP Pyro",
      "articleId": 2016122501,
      "summary": {
          "ja": "この記事では、Pyro（流体）による煙のシミュレーションと独立したパーティクルシミュレーションを作成し、煙がパーティクルをコントロールする方法を紹介しています。まず、Pyro Smokeを使って煙を生成し、独立したパーティクルシミュレーションを別途追加します。パーティクルは最初重力の影響を受けますが、後に重力の効果を無効にして全方向に放射されるようにします。最終的に、POP Advect by Volumesノードを使用してパーティクルが煙の動きに従うように設定します。記事の最後にはシーンファイルへのリンクが含まれています。",
          "en": "This article shows how to create a Pyro (fluid) smoke simulation and an independent particle simulation, where the smoke controls the particles. First, smoke is generated using Pyro Smoke and an independent particle simulation is added separately. The particles are initially affected by gravity, but later the effect of gravity is disabled so that they radiate in all directions. Finally, use the POP Advect by Volumes node to set the particles to follow the motion of the smoke. A link to the scene file is included at the end of the article."
      }
  }






  ,{
    "thumbnailUrl": "2017120101.jpg",
    "creationDate": "2017-12-01",
    "author": {
        "name": "@jyouryuusui",
        "twitterIcon": "jyouryuusui.jpg",
        "qiitaUrl": "https://qiita.com/jyouryuusui",
        "twitterUrl": "https://twitter.com/jyouryuusui"
    },
    "title": {
        "ja": "Step Up Houdini！階段をつくろう",
        "en": "Step Up Houdini! Let's make a staircase!"
    },
    "articleUrl": "https://qiita.com/jyouryuusui/items/ae0e45b6f6acec0bf5c5",
    "categories": "Houdini",
    "tags": "SOP Wrangle",
    "articleId": 2017120101,
    "summary": {
        "ja": "この記事では、Houdiniを使って様々な種類の階段を作成する方法を紹介しています。具体的には、「普通の階段」、「らせん階段」、「ぐにゃぐにゃ階段」、「岩の階段」、「エスカレーター」という5つの異なるタイプの階段の作り方を解説しています。それぞれの階段の作成には、特定のSOPが使用されており、その利用方法についても触れています。この記事は、Houdiniの機能を探求する過程での発見として共有されています。",
        "en": "The article introduces methods to create various types of stairs using Houdini. It covers five different types: Normal Stairs, Spiral Stairs, Wavy Stairs,Rock Stairs, and Escalators. Each type of stair creation uses SOPs, and the article discusses how to use them. The article shares these methods as discoveries made while exploring Houdini's capabilities."
    }
},
{
    "thumbnailUrl": "2017120201.jpg",
    "creationDate": "2017-12-02",
    "author": {
        "name": "@satoruhiga",
        "twitterIcon": "satoruhiga.jpg",
        "qiitaUrl": "https://qiita.com/satoruhiga",
        "twitterUrl": "https://twitter.com/satoruhiga"
    },
    "title": {
        "ja": "HoudiniをOSCタイムラインとして使う",
        "en": "Using Houdini as an OSC Timeline"
    },
    "articleUrl": "https://qiita.com/satoruhiga/items/63fea9616d5135a328d3",
    "categories": "Houdini",
    "tags": "CHOP OSC",
    "articleId": 2017120201,
    "summary": {
        "ja": "この記事では、HoudiniをOSC（OpenSound Control）タイムラインとして使う方法について説明しています。作者はHoudiniのカーブエディタの操作感が好きで、それをリアルタイム系のタイムライン操作に応用したいと考えていました。作成したHDA（Houdini Digital Asset）をObjレベルに設置し、OSCメッセージを送信する設定を行います。TouchDesignerにOSCメッセージを送る例が示されており、インストール方法やOSCの基本的な説明も含まれています。HoudiniのタイムラインをOSCタイムラインとして使うメリットとして、無料であり、カーブエディタの使い勝手が良い点が挙げられています。",
        "en": "The article explains how to use Houdini as an OSC (OpenSound Control) timeline. The author, fond of Houdini's curve editor, wanted to apply it to real-time timeline manipulation. They created an HDA (Houdini Digital Asset) for OSC message transmission, demonstrated with an example of sending OSC messages to TouchDesigner. The article includes the installation process and a basic explanation of OSC. Benefits of using Houdini's timeline as an OSC timeline include it being free and the user-friendly curve editor."
    }
},
{
    "thumbnailUrl": "2017120301.jpg",
    "creationDate": "2017-12-03",
    "author": {
        "name": "@daxanya1",
        "twitterIcon": "daxanya1.jpg",
        "qiitaUrl": "https://qiita.com/daxanya1",
        "twitterUrl": "https://twitter.com/daxanya1"
    },
    "title": {
        "ja": "NetworkEditorをPythonで操作する",
        "en": "Working with NetworkEditor in Python"
    },
    "articleUrl": "https://qiita.com/daxanya1/items/2c3e23cd3cd0eb69eb17",
    "categories": "Houdini",
    "tags": "NetworkEditor Python",
    "articleId": 2017120301,
    "summary": {
        "ja": "この記事では、HoudiniのNetworkEditorをPythonで操作する方法について説明しています。ノードを手動で配置する際のレイアウトの問題を解決するために、Pythonを使用してNetworkEditorを制御する方法を紹介しています。記事では、階層の移動、フラッシュメッセージの表示、背景画像の表示、座標系の確認とノードの配置操作など、NetworkEditorのさまざまな機能をPythonで操作する方法を示しています。これには、特定のPythonスクリプトを実行することで、ノードを自動的に配置し、繋げて動かす方法も含まれています。",
        "en": "The article explains how to operate Houdini's NetworkEditor using Python. It introduces a method to control the NetworkEditor with Python to solve layout issues when manually placing nodes. The article shows how to use Python to perform various functions in the NetworkEditor, including moving hierarchies, displaying flash messages, showing background images, and managing coordinates and node placement. It includes methods to automatically place, connect, and move nodes by executing specific Python scripts."
    }
},
{
    "thumbnailUrl": "2017120401.jpg",
    "creationDate": "2017-12-04",
    "author": {
        "name": "@fujitarium",
        "twitterIcon": "fujitarium.jpg",
        "qiitaUrl": "https://qiita.com/fujitarium",
        "twitterUrl": "https://twitter.com/fujitarium"
    },
    "title": {
        "ja": "動くオブジェクトへのSDFスティッキーコリジョン",
        "en": "SDF sticky collision to moving objects"
    },
    "articleUrl": "http://blog.livedoor.jp/fujitarium/archives/52440138.html",
    "categories": "Houdini",
    "tags": "SOP DOP SDF",
    "articleId": 2017120401,
    "summary": {
        "ja": "この記事では、非常に速い動きのアニメーションにパーティクルを付与する方法について説明されています。使用される技術にはSDFコリジョンが含まれます。著者は標準コリジョンの使い方を知らないため、既存の知識で望ましい結果を得る方法を好んでいます。加速を考慮した摩擦を含むスティッキーコリジョンの実践経験はなく、一定の速度でオブジェクトに沿わせる方法がコントロールしやすいと述べています。最後に、Solver内の要素の順序を意識することの重要性について強調しています。",
        "en": "This article describes how to add particles to a very fast-moving animation. Techniques used include SDF collisions. The author does not know how to use standard collisions and prefers to use existing knowledge to achieve the desired results. He has no practical experience with sticky collisions that include friction to account for acceleration and states that the method of following an object at a constant speed is easier to control. Finally, he stresses the importance of being aware of the order of elements within Solver."
    }
},
{
    "thumbnailUrl": "2017120501.jpg",
    "creationDate": "2017-12-05",
    "author": {
        "name": "@eiji_s",
        "twitterIcon": "eiji_s.jpg",
        "qiitaUrl": "https://qiita.com/eiji_s",
        "twitterUrl": "https://twitter.com/eiji_s"
    },
    "title": {
        "ja": "前回IFDワークフローで説明できなかったスタイルシートとCVEXを使ったランダマイズの仕方について説明します",
        "en": "This section explains how to use style sheets and CVEX for randomization, which was not explained in the previous IFD workflow."
    },
    "articleUrl": "http://houdini.indyzone.jp/blog/stylesheet_cvex/",
    "categories": "Houdini",
    "tags": "MAT SHOP CVEX",
    "articleId": 2017120501,
    "summary": {
        "ja": "この記事では、Houdiniのスタイルシートを使用してCVEXシェーダーを用いてパラメータをランダマイズする方法について説明されています。まず、オブジェクトをコピーし、スタイルシートでシェーダーを割り当てます。次に、CVEXシェーダーを作成し、指定したパラメータに基づいてランダムな色を生成します。スタイルシートでは、オーバーライドスクリプトを使って基本色を変更し、CVEXシェーダーを指定します。さらに、CVEXシェーダーの出力を２つ作成し、レンダリングプロパティもランダムに変更しています。この方法で、シェーディング品質をランダマイズし、ディスプレイスメントの解像度を変更することができます。記事の最後には、スタイルシートとCVEXのデータフローを示す図が掲載されています。著者は、この手法が実用的でないかもしれないが、スタイルシートの使い方を覚えるのに役立つと述べています。",
        "en": "This article describes how to use a Houdini stylesheet to randomize parameters using CVEX shaders. First, copy the object and assign shaders in the stylesheet. Next, a CVEX shader is created to generate random colors based on the specified parameters. In the style sheet, use an override script to change the base color and specify the CVEX shader. It also creates two outputs of the CVEX shader and randomly changes the rendering properties. In this way, we can randomize the shading quality and change the resolution of the displacement. The article ends with a diagram showing the data flow of the stylesheet and CVEX. The author states that this technique may not be practical, but it is helpful to learn how to use style sheets."
    }
},
{
    "thumbnailUrl": "2017120601.jpg",
    "creationDate": "2017-12-06",
    "author": {
        "name": "@sugiggy",
        "twitterIcon": "sugiggy.jpg",
        "qiitaUrl": "https://qiita.com/sugiggy",
        "twitterUrl": "https://twitter.com/sugiggy"
    },
    "title": {
        "ja": "好きな方向にグラデーションを。",
        "en": "Gradient in any direction."
    },
    "articleUrl": "http://sugi-iggy.blogspot.ca/2017/12/blog-post.html",
    "categories": "Houdini",
    "tags": "SOP Wrangle",
    "articleId": 2017120601,
    "summary": {
        "ja": "この記事では、動くオブジェクトに対して特定の方向にグラデーションを適用する方法を紹介しています。例として、自転しながら動くオブジェクトに0から1.0の値のグラデーションを作る方法を説明します。このプロセスには、オブジェクトの中心座標から各ポイントの位置を引いて、得られたローカルポジションとある方向のベクトル（'dir'）を内積することで、ポイント毎にその方向の成分を計算します。内積の結果は正規化されておらず、全体の最大値と最小値を用いて適切なグラデーションの範囲に調整します。この方法により、どんな複雑な形状や動きをしているオブジェクトにも、望む方向にグラデーションを適用できます。",
        "en": "This article shows how to apply a gradient to a moving object in a specific direction. As an example, we will show how to create a gradient with a value from 0 to 1.0 on a moving object as it spins. The process involves subtracting the position of each point from the object's center coordinates and then inner-producting the resulting local position with a vector in a certain direction ('dir') to compute a component in that direction for each point. The result of the inner product is not normalized and is adjusted to the appropriate gradient range using the overall maximum and minimum values. This method allows you to apply a gradient in any desired direction to any object of any complex shape or motion."
    }
},
{
    "thumbnailUrl": "2017120701.jpg",
    "creationDate": "2017-12-07",
    "author": {
        "name": "@kit2cuz",
        "twitterIcon": "kit2cuz.jpg",
        "qiitaUrl": "https://qiita.com/kit2cuz",
        "twitterUrl": "https://twitter.com/kit2cuz"
    },
    "title": {
        "ja": "Wren ROPの使い方とSOHOによる外部アプリとのパイプ",
        "en": "How to use Wren ROP and pipe with external apps by SOHO"
    },
    "articleUrl": "https://qiita.com/kit2cuz/items/0acc5b6352129db587cb",
    "categories": "Houdini",
    "tags": "SOP ROP Python SOHO",
    "articleId": 2017120701,
    "summary": {
        "ja": "この記事では、HoudiniのベクトルレンダラーWren ROPの使用法とSOHOによる外部アプリとの連携について解説しています。主要な手順には、Houdiniの3Dシーンからベクトルデータを生成し、他のソフトウェアで読み込む方法、ポリゴンカーブをNURBSカーブに変換するプロセス、そしてHoudiniからFreeCADへのパイプを組み込んでSVGに変換する方法が含まれます。また、HoudiniとMaya間の接続方法や、Wren ROPの特徴、Postscriptファイルの扱いに関する技術的詳細も提供されています。",
        "en": "This article describes the use of Houdini's vector renderer Wren ROP and its integration with external applications through SOHO. Key steps include how to generate vector data from a Houdini 3D scene and load it into other software, the process of converting polygon curves to NURBS curves, and how to incorporate a pipe from Houdini to FreeCAD to convert to SVG. Also provided are technical details on how to connect between Houdini and Maya, Wren ROP features, and postscript file handling."
    }
},
{
    "thumbnailUrl": "2017120801.jpg",
    "creationDate": "2017-12-08",
    "author": {
        "name": "@yone80@github",
        "twitterIcon": "yone80@github.jpg",
        "qiitaUrl": "https://qiita.com/yone80@github",
        "twitterUrl": ""
    },
    "title": {
        "ja": "Group の作り方いろいろ",
        "en": "Various ways to create groups"
    },
    "articleUrl": "https://qiita.com/yone80@github/items/4f77b20e17fa63390e40",
    "categories": "Houdini",
    "tags": "SOP VEX",
    "articleId": 2017120801,
    "summary": {
        "ja": "[記事削除済み]この記事ではHoudiniでのGroupの作り方についてVEXも交えながら解説されていました。",
        "en": "[article deleted] This article explained how to create a Group in Houdini, including VEX."
    }
},
{
    "thumbnailUrl": "2017120901.jpg",
    "creationDate": "2017-12-09",
    "author": {
        "name": "@hasegawa_t",
        "twitterIcon": "hasegawa_t.jpg",
        "qiitaUrl": "https://qiita.com/hasegawa_t",
        "twitterUrl": "https://twitter.com/hasegawa_t"
    },
    "title": {
        "ja": "HoudiniでData Visualization",
        "en": "Data Visualization in Houdini"
    },
    "articleUrl": "https://qiita.com/hasegawa_t/items/ad7fa5d67bdd9f7b864a",
    "categories": "Houdini",
    "tags": "SOP Python Wrangle",
    "articleId": 2017120901,
    "summary": {
        "ja": "この記事は、Houdiniを使用してデータ可視化を行う方法について解説しています。特に地球上の異なる地点間の移動軌跡をアニメーション化する手法が紹介されています。このプロセスには、HoudiniにCSVデータを読み込み、緯度経度を球面座標に変換し、始点から終点に向かって弧を描く尾を持つポイントをアニメーションする手順が含まれます。",
        "en": "This article describes how to use Houdini to perform data visualization. In particular, a method for animating the trajectory of movement between different points on the earth is presented. The process involves loading CSV data into Houdini, converting latitude and longitude to spherical coordinates, and then animating the points with an arc tail from the start point to the end point."
    }
},
{
    "thumbnailUrl": "2017121001.jpg",
    "creationDate": "2017-12-10",
    "author": {
        "name": "@jhorikawa_err",
        "twitterIcon": "jhorikawa_err.jpg",
        "qiitaUrl": "https://qiita.com/jhorikawa_err",
        "twitterUrl": "https://twitter.com/jhorikawa_err"
    },
    "title": {
        "ja": "Houdiniでアルゴリズミック・デザイン～Isosurface編",
        "en": "Algorithmic Design with Houdini - Isosurface Edition"
    },
    "articleUrl": "https://qiita.com/jhorikawa_err/items/66289d6c0ce3f7d5a338",
    "categories": "Houdini",
    "tags": "algorithm VEX isosurface",
    "articleId": 2017121001,
    "summary": {
        "ja": "この記事では、Houdiniを使用してIsosurfaceを作成するプロセスについて詳述されています。Isosurfaceは、空間に分布する点群の数値に基づいて作成される面で、特に建築分野でよく用いられます。この方法では、ボクセル空間に数値を割り当て、Marching Cubeアルゴリズムを用いてメッシュを作成します。手順には、ボクセル空間の作成、数値の割り当て、Houdiniのノードのセットアップ、関数の入力、そして色付けが含まれています。最終的に、数理的に操作されたボクセル空間から興味深い造形を作成できることが強調されています",
        "en": "This article details the process of creating an Isosurface using Houdini; an Isosurface is a surface created based on numerical values of a group of points distributed in space, often used especially in architecture. The method involves assigning numerical values to voxel space and creating a mesh using the Marching Cube algorithm. The procedure includes creating the voxel space, assigning numerical values, setting up the Houdini nodes, entering functions, and coloring. Finally, it is emphasized that interesting shapes can be created from mathematically manipulated voxel space!"
    }
},
{
    "thumbnailUrl": "2017121101.jpg",
    "creationDate": "2017-12-11",
    "author": {
        "name": "@core_aoi",
        "twitterIcon": "core_aoi.jpg",
        "qiitaUrl": "https://qiita.com/core_aoi",
        "twitterUrl": "https://twitter.com/core_aoi"
    },
    "title": {
        "ja": "Houdini入門 チュートリアル集(おまけ付き)",
        "en": "Introduction to Houdini Tutorial Collection (with extras)"
    },
    "articleUrl": "http://design-ambience.com/blog/?p=1108",
    "categories": "Houdini",
    "tags": "bookmark",
    "articleId": 2017121101,
    "summary": {
        "ja": "[記事削除済み]この記事では、Houdiniに関する初心者向けに役立ったチュートリアルをまとめています。紹介されているチュートリアルは、サッカーボール、ツタの成長、皮膚が剥がれるエフェクト、凍結、抽象的なデザイン、雲、パーティクル、物体の破壊など様々です。また、3DCGのチュートリアルが多く動画形式であること、YouTubeのショートカットキーの利便性、そしてVimeoでYouTubeのようなショートカットを使用できるブックマークレットの作成についても触れています。",
        "en": "[article deleted] This article is a collection of helpful tutorials for beginners on Houdini. The tutorials featured vary from soccer balls, ivy growth, skin peeling effects, freezing, abstract designs, clouds, particles, object destruction, and more. It also discusses the video format of many of the 3DCG tutorials, the convenience of YouTube's shortcut keys, and the creation of bookmarklets that allow you to use YouTube-like shortcuts on Vimeo."
    }
},
{
    "thumbnailUrl": "2017121201.jpg",
    "creationDate": "2017-12-12",
    "author": {
        "name": "@takavfx",
        "twitterIcon": "takavfx.jpg",
        "qiitaUrl": "https://qiita.com/takavfx",
        "twitterUrl": "https://twitter.com/takavfx"
    },
    "title": {
        "ja": "Maya -> Houdini -> Maya",
        "en": "Maya -> Houdini -> Maya"
    },
    "articleUrl": "https://qiita.com/takavfx/items/8665c9c394db7e5b9f95",
    "categories": "Houdini",
    "tags": "SOP Alembic Python",
    "articleId": 2017121201,
    "summary": {
        "ja": "この記事では、HoudiniとMayaを連携させるプロセスについて紹介されています。具体的には、MayaからエクスポートしたAlembicファイルをHoudiniで読み込み、処理後に再びMayaにインポートする方法が説明されています。このプロセスには、Python SOPを使用してプリミティブのパス属性を追加し、ROP Alembic Outputを使って設定を行う手順が含まれています。最終的に、Mayaで元のモデルシーンにAlembicファイルをインポートし、マテリアルを再アサインするスクリプトが提供されています​​​​​​​​​​​​。",
        "en": "This article describes the process of linking Houdini and Maya. Specifically, it explains how to import Alembic files exported from Maya into Houdini and then import them back into Maya after processing. The process includes steps for adding path attributes to primitives using Python SOPs and configuring them using ROP Alembic Output. Finally, a script is provided to import the Alembic file into the original model scene in Maya and reassign the material ."
    }
},
{
    "thumbnailUrl": "2017121301.jpg",
    "creationDate": "2017-12-13",
    "author": {
        "name": "@it_ks",
        "twitterIcon": "it_ks.jpg",
        "qiitaUrl": "https://qiita.com/it_ks",
        "twitterUrl": "https://twitter.com/it_ks"
    },
    "title": {
        "ja": "（きっとそっちじゃない）スワップとフリップについて",
        "en": "(I'm sure it's not that one.) Swaps and Flips"
    },
    "articleUrl": "https://qiita.com/it_ks/items/17e85024e45685de7c24",
    "categories": "Houdini",
    "tags": "layout Python",
    "articleId": 2017121301,
    "summary": {
        "ja": "この記事は、Houdiniのユーザーインターフェイスにおける「スワップ」と「フリップ」の機能に焦点を当てています。スワップはペインの入れ替え、フリップは仕切りの向きを入れ替える機能を指します。記事では、Pythonを用いてHoudiniのデスクトップ環境を操作し、ペインの配置を動的に変更する方法を詳細に説明しています。さらに、splitSwapメソッドを使用してペインのスワップを行う方法や、階層的なsplitの管理についても掘り下げています。また、様々なHoudiniデスクトップ構成（Build、Animate、Games、Groomingなど）の特徴と使い勝手についても解説されています",
        "en": "This article focuses on the \"swap\" and \"flip\" features in the Houdini user interface. Swap refers to the ability to swap panes and flip refers to the ability to swap the orientation of dividers. The article details how to use Python to manipulate the Houdini desktop environment and dynamically change the placement of panes. It also delves into how to swap panes using the splitSwap method and managing hierarchical splits. The features and usability of the various Houdini desktop configurations (Build, Animate, Games, Grooming, etc.) are also described"
    }
},
{
    "thumbnailUrl": "2017121401.jpg",
    "creationDate": "2017-12-14",
    "author": {
        "name": "@yuya_torii",
        "twitterIcon": "yuya_torii.jpg",
        "qiitaUrl": "https://qiita.com/yuya_torii",
        "twitterUrl": "https://twitter.com/yuya_torii"
    },
    "title": {
        "ja": "Houdini Engine For Maya を調べてみる",
        "en": "Check out Houdini Engine For Maya"
    },
    "articleUrl": "https://qiita.com/yuya_torii/items/001642040a5354cd9f89",
    "categories": "Houdini",
    "tags": "MAYA HoudiniEngine HDA",
    "articleId": 2017121401,
    "summary": {
        "ja": "この記事では、Houdini Engine for Mayaについて詳細に解説されています。インストール場所や使えるコマンド、Pythonでの操作方法、データ構造、HoudiniのデータがMayaでどう扱われるか、ObjectとSOPの違い、VolumeとParticleの扱い、Expressionの利用、MayaのノードをHDAに渡す際の挙動、内部アトリビュートについての詳細が説明されています​",
        "en": "This article describes the Houdini Engine for Maya in detail. It details the installation location, available commands, Python operations, data structures, how Houdini data is handled by Maya, the difference between Objects and SOPs, handling volumes and particles, using Expression, behavior when passing Maya nodes to HDA, and internal Attributes are explained in detail."
    }
},
{
    "thumbnailUrl": "2017121501.jpg",
    "creationDate": "2017-12-15",
    "author": {
        "name": "@sho7noka",
        "twitterIcon": "sho7noka.jpg",
        "qiitaUrl": "https://qiita.com/sho7noka",
        "twitterUrl": "https://twitter.com/sho7noka"
    },
    "title": {
        "ja": "hou で覚える Houdini",
        "en": "Learning Houdini with hou"
    },
    "articleUrl": "https://qiita.com/sho7noka/items/17b7963d31ae1fb66f3f",
    "categories": "Houdini",
    "tags": "Python",
    "articleId": 2017121501,
    "summary": {
        "ja": "この記事では、Houdiniのhouモジュールについて、Pythonを使った操作方法が紹介されています。Pythonが使える場所、houモジュールの概要、ノード操作、プロパティの変更、パラメータ操作、エクスプレッション、キーフレーム、ジオメトリ(SOP)、VEX & Wrangleの使い方について説明されており、PythonからHoudiniを操作するアプローチが示されています",
        "en": "This article shows how to manipulate Houdini's hou module using Python: where Python can be used, an overview of the hou module, node manipulation, property modification, parameter manipulation, expression, keyframes, and geometry (SOP),VEX & Wrangle are explained and the approach to manipulate Houdini from Python is shown."
    }
},
{
    "thumbnailUrl": "2017121601.jpg",
    "creationDate": "2017-12-16",
    "author": {
        "name": "@AokTky_dori",
        "twitterIcon": "AokTky_dori.jpg",
        "qiitaUrl": "https://qiita.com/AokTky_dori",
        "twitterUrl": "https://twitter.com/AokTky_dori"
    },
    "title": {
        "ja": "Intrinsicを使おう",
        "en": "Use Intrinsic!"
    },
    "articleUrl": "https://qiita.com/AokTky_dori/items/de2007716a6a19f26668",
    "categories": "Houdini",
    "tags": "Intrinsic Wrangle",
    "articleId": 2017121601,
    "summary": {
        "ja": "この記事は、HoudiniのIntrinsicアトリビュートについての解説です。Intrinsicアトリビュートの概念、Primitive IntrinsicやDetail Intrinsicの使用方法、測定値やトランスフォーム、Boundsの扱いなどが紹介されています。また、Intrinsicアトリビュートを使うことによる利点、既存情報の利用方法、ノード数の削減やカスタムアトリビュートの整理への影響についても言及されています​​​​​​​​​",
        "en": "This article is an introduction to Intrinsic attributes in Houdini, including the concept of Intrinsic attributes, the use of Primitive Intrinsic and Detail Intrinsic, and the handling of measurements, transforms, and bounces.Intrinsic Attributes. It also discusses the benefits of using Intrinsic attributes, how to use existing information, and the impact on reducing the number of nodes and organizing custom attributes. "
    }
},
{
    "thumbnailUrl": "2017121701.jpg",
    "creationDate": "2017-12-17",
    "author": {
        "name": "@kickbase",
        "twitterIcon": "kickbase.jpg",
        "qiitaUrl": "https://qiita.com/kickbase",
        "twitterUrl": "https://twitter.com/kickbase"
    },
    "title": {
        "ja": "この1年をHoudiniと共に振り返る",
        "en": "Reflecting on the past year with Houdini "
    },
    "articleUrl": "https://kickbase.net/entry/houdini-study-1st-year",
    "categories": "Houdini",
    "tags": "bookmark study",
    "articleId": 2017121701,
    "summary": {
        "ja": "著者はHoudiniを学び始めて1年が経過したことを振り返り、学習過程での経験を共有しています。公式ビデオチュートリアル、書籍、オンラインワークショップ、セミナーなど多岐にわたる学習資源を利用した経験が語られています。また、独自に主催したもくもく会やHoudini関連のセミナーへの参加経験も紹介されており、Houdini学習における豊富な資源と実践的なアプローチについての洞察が得られます",
        "en": "The author reflects on his first year of learning Houdini and shares his experiences in the learning process. He talks about his experiences using a wide variety of learning resources, including official video tutorials, books, online workshops, and seminars.He also shares his experiences attending independently organized mokumoku-kai and Houdini related seminars, providing insight into the wealth of resources and practical approaches to Houdini learning!"
    }
},
{
    "thumbnailUrl": "2017121801.jpg",
    "creationDate": "2017-12-18",
    "author": {
        "name": "@renkiku",
        "twitterIcon": "renkiku.jpg",
        "qiitaUrl": "https://qiita.com/renkiku",
        "twitterUrl": "https://twitter.com/renkiku"
    },
    "title": {
        "ja": "VDBデータの最適化とレンダリングを効率化するためのデータフロー",
        "en": "Data flow for efficient optimization and rendering of VDB data"
    },
    "articleUrl": "https://qiita.com/renkiku/items/0df37294080ee75486b0",
    "categories": "Houdini",
    "tags": "SOP DOP ROP VDB",
    "articleId": 2017121801,
    "summary": {
        "ja": "この記事では、Houdini内でのVDBデータの最適化とレンダリングの効率化に焦点を当てています。VDBの基本的な概念から始まり、VDBへの変換、不要なデータの削除、データサンプリングの整理、ベクターデータのマージ、データの16bit Floatへの変換、レンダリング時のPacked Primitiveの使用など、VDBを最適化して効率的に扱うための具体的な手順が解説されています",
        "en": "This article focuses on optimizing VDB data and rendering efficiency within Houdini, starting with the basic concepts of VDBs, converting to VDBs, removing unnecessary data, organizing data sampling, merging vector data, and converting data to 16-bit Float, Specific procedures for optimizing and efficiently handling VDBs are explained, including the use of Packed Primitive during rendering"
    }
},
{
    "thumbnailUrl": "2017121901.jpg",
    "creationDate": "2017-12-19",
    "author": {
        "name": "@ikatnek",
        "twitterIcon": "ikatnek.jpg",
        "qiitaUrl": "https://qiita.com/ikatnek",
        "twitterUrl": "https://twitter.com/ikatnek"
    },
    "title": {
        "ja": "GameDev Impostor Tool",
        "en": "GameDev Impostor Tool"
    },
    "articleUrl": "https://ikatnek.blogspot.com/2017/12/game-dev-impostor-tool.html",
    "categories": "Houdini",
    "tags": "SOP ROP",
    "articleId": 2017121901,
    "summary": {
        "ja": "この記事では、HoudiniのGame Dev Impostor Toolを使用してアニメーションテクスチャを作成する方法を説明しています。使用されたビルドは16.5.323、Game Development Toolは1.8です。ImpostorツールのAnimation機能を使うには、2017年11月7日以降のGame Development ToolのDevelopment Branchが必要です。記事では、キャラクターを作成し、アニメーションを8フレームに変更する手順を紹介しています。さらに、Impostorの設定として、カメラの作成とROPノードの設定が必要であり、最終的に72枚の画像が出力されます​",
        "en": "This article explains how to create animated textures using the Game Dev Impostor Tool in Houdini. The build used is 16.5.323 and the Game Development Tool is 1.8.To use the Animation feature of the Impostor Tool, you will need the Development Branch of the Game Development Tool after November 7, 2017. The article provides instructions for creating a character and changing the animation to 8 frames. In addition, you will need to create a camera and set up a ROP node as part of the Impostor setup, which will result in a final output of 72 images!"
    }
},
{
    "thumbnailUrl": "2017122001.jpg",
    "creationDate": "2017-12-20",
    "author": {
        "name": "@taikomatsu",
        "twitterIcon": "taikomatsu.jpg",
        "qiitaUrl": "https://qiita.com/taikomatsu",
        "twitterUrl": "https://twitter.com/taikomatsu"
    },
    "title": {
        "ja": "targetvを活用する",
        "en": "Utilize targetv"
    },
    "articleUrl": "https://qiita.com/taikomatsu/items/71d475541eb540705552",
    "categories": "Houdini",
    "tags": "POP DOP",
    "articleId": 2017122001,
    "summary": {
        "ja": "この記事では、HoudiniでPOPを使用してパーティクルシミュレーションを行う際のtargetvとairresistの使い方を解説しています。targetvは、最終的にパーティクルの速度（v）が到達する目標値を指定するもので、airresistはその速度に到達するための抵抗や速度を表します。targetvとairresistは、POP Dragを使用すると自動で設定されます。この機能を風のシミュレーションやカーブフォローなどで応用する方法を紹介しています​",
        "en": "This article explains how to use targetv and airresist when using POP in Houdini for particle simulation. targetv specifies the target value that the particles' velocity (v) will eventually reach, and airresist is the resistance or velocity to reach that velocity. targetv and airresist are set automatically when using POP Drag. Here is how to apply this feature in wind simulation, curve following, etc."
    }
},
{
    "thumbnailUrl": "2017122101.jpg",
    "creationDate": "2017-12-21",
    "author": {
        "name": "@ts_bros",
        "twitterIcon": "ts_bros.jpg",
        "qiitaUrl": "https://qiita.com/ts_bros",
        "twitterUrl": "https://twitter.com/ts_bros"
    },
    "title": {
        "ja": "Mantis_Volume_Simulatorで遊ぼう",
        "en": "Let's play with Mantis_Volume_Simulator!"
    },
    "articleUrl": "https://qiita.com/ts_bros/items/f46a9638226cc23c0d34",
    "categories": "Houdini",
    "tags": "DOP HDA",
    "articleId": 2017122101,
    "summary": {
        "ja": "この記事では、Houdini用のMantis_Volume_Simulator1.0のβ版リリースについて紹介しています。シミュレーションの設定例や、パフォーマンス比較、使用方法に関する詳細が提供されています。特に、シミュレータのOpenCLベースでの最適化や、煙シミュレーションの例が示されています。記事は、このシミュレータを使用して、Grid ControlやTurbulence Flowなどの様々なシミュレーションの学習に役立つことを示しています​",
        "en": "This article describes the beta release of Mantis_Volume_Simulator 1.0 for Houdini. It provides example simulation setups, performance comparisons, and details on how to use it. In particular, the simulator's OpenCL-based optimization and smoke simulation examples are shown. The article shows how the simulator can be used to help learn various simulations such as Grid Control and Turbulence Flow"
    }
},
{
    "thumbnailUrl": "2017122201.jpg",
    "creationDate": "2017-12-22",
    "author": {
        "name": "@K240",
        "twitterIcon": "K240.jpg",
        "qiitaUrl": "https://qiita.com/K240",
        "twitterUrl": "https://twitter.com/K240"
    },
    "title": {
        "ja": "ポリゴン面積を考慮したテクスチャアトラスに関して",
        "en": "Regarding texture atlas considering polygon area"
    },
    "articleUrl": "https://qiita.com/K240/items/3803d3fc1184e1e0e948",
    "categories": "Houdini",
    "tags": "COP Python Wrangle",
    "articleId": 2017122201,
    "summary": {
        "ja": "この記事では、Houdiniを使用してポリゴン面積に基づいたテクスチャアトラスを作成する方法について説明されています。テクスチャアトラスとは、複数の画像を1枚にまとめたもので、ドローコールの軽減に使われます。特に、モデルの大きさを考慮してアトラスを作成する方法が解説されており、シンプルなコードで実装することが目指されています。完成版のノードネットワークやアトラステクスチャ生成の手順が紹介されています​",
        "en": "The article discusses how to create a texture atlas based on polygon area using Houdini. A texture atlas is a single image composed of multiple images, mainly used to reduce draw calls. It particularly focuses on creating atlases considering the size of the model, aiming for implementation with minimal coding. The article includes the final node network and steps for generating the atlas texture​​​​​​​​​​."
    }
},
{
    "thumbnailUrl": "2017122301.jpg",
    "creationDate": "2017-12-23",
    "author": {
        "name": "@YoshiakiHiga",
        "twitterIcon": "YoshiakiHiga.jpg",
        "qiitaUrl": "https://qiita.com/YoshiakiHiga",
        "twitterUrl": "https://twitter.com/YoshiakiHiga"
    },
    "title": {
        "ja": "vopで双曲線関数を組んでみる",
        "en": "vopで双曲線関数を組んでみる"
    },
    "articleUrl": "https://qiita.com/YoshiakiHiga/items/5412e57ae503f7fcc19e",
    "categories": "Houdini",
    "tags": "VOP SOP",
    "articleId": 2017122301,
    "summary": {
        "ja": "この記事では、HoudiniのVOP（Visual Operators）を使って双曲線関数を組み立てる方法を紹介しています。VEXにはcosh関数があるが、VOPノードにはないことがこの試みの大きな理由です。基本的には直線のカーブを作成し、VOPを適用して双曲線関数を形成します。カーブのセグメントを懸垂化し、最終的にケーブルのような形状を作り出しています。このプロセスは、天井にあるフックに似たイメージを作成することを目的としています​",
        "en": "The article presents a method of constructing hyperbolic functions using Houdini's VOP (Visual Operators). The initiative was largely because the cosh function exists in VEX but not as a VOP node. The approach involves creating a linear curve and applying VOP to form the hyperbolic function. The segments of the curve are suspended to ultimately create a cable-like shape. This process aims to create an image resembling hooks on the ceiling​"
    }
},
{
    "thumbnailUrl": "2017122401.jpg",
    "creationDate": "2017-12-24",
    "author": {
        "name": "@yoong",
        "twitterIcon": "yoong.jpg",
        "qiitaUrl": "https://qiita.com/yoong",
        "twitterUrl": "https://twitter.com/yoong"
    },
    "title": {
        "ja": "Houdini Redshift Rendring Work Flow",
        "en": "Houdini Redshift Rendring Work Flow"
    },
    "articleUrl": "http://yoong-cut-and.blogspot.jp/2017/12/houdini-redshift-rendering-work-flow.html",
    "categories": "Houdini",
    "tags": "SOP ROP Redshift",
    "articleId": 2017122401,
    "summary": {
        "ja": "この記事では、HoudiniでのRedshiftレンダリングの実践的な手法とセッティングについて説明しています。インストールから始め、ライセンスの管理、実写合成用のリファレンス撮影、シーン作成、マテリアル設定、ライティング、サンプリングの最適化、レンダリングまでの工程が詳細に記述されています。特に、Redshiftのサンプリング設定とライトの設定が重要で、これらを調整することでノイズを減らし、より滑らかなレンダリング結果を得ることができます。",
        "en": "The article discusses practical methods and settings for Redshift rendering in Houdini. It covers everything from installation to license management, reference photography for live-action compositing, scene creation, material setup, lighting, optimization of sampling, and rendering. Emphasis is placed on the importance of configuring Redshift's sampling and light settings, highlighting how these adjustments can reduce noise and yield smoother rendering results."
    }
},
{
    "thumbnailUrl": "2017122501.jpg",
    "creationDate": "2017-12-25",
    "author": {
        "name": "@Gold_of_maid",
        "twitterIcon": "Gold_of_maid.jpg",
        "qiitaUrl": "https://qiita.com/Gold_of_maid",
        "twitterUrl": "https://twitter.com/Gold_of_maid"
    },
    "title": {
        "ja": "Houdiniの強み~大量配置編~",
        "en": "Strengths of Houdini ~Massive Placement"
    },
    "articleUrl": "https://qiita.com/Gold_of_maid/items/5dd43789303f6828fc21",
    "categories": "Houdini",
    "tags": "SOP",
    "articleId": 2017122501,
    "summary": {
        "ja": "この記事は、Houdiniでの「copy stamp」機能を使用したオブジェクトの大量配置について説明しています。複雑な地形上にオブジェクトを配置する例を用いて、Houdiniの強力な配置機能の使い方を紹介しています。この機能を使用することで、地形に沿ったオブジェクトの配置が簡単かつ効率的に行えることが強調されています。他のソフトウェアでは複雑な作業が必要な場面でも、Houdiniでは簡単に実現できる点が示されています。",
        "en": " The article explains the use of Houdini's 'copy stamp' feature for mass placement of objects. It demonstrates how to efficiently position objects on complex terrains, highlighting Houdini's powerful arrangement capabilities. The feature allows for easy and efficient placement of objects in accordance with the terrain, a task that would be more complex in other software. The article showcases Houdini's ability to simplify processes that are typically complicated in other applications."
    }
}





,{
  "thumbnailUrl": "2018120101.jpg",
  "creationDate": "2018-12-01",
  "author": {
      "name": "@K240",
      "twitterIcon": "K240.jpg",
      "qiitaUrl": "https://qiita.com/K240",
      "twitterUrl": "https://twitter.com/K240"
  },
  "title": {
      "ja": "アトラステクスチャから軽量なポリゴンを生成するツールの作成",
      "en": "Create a tool to generate lightweight polygons from atlas textures"
  },
  "articleUrl": "https://qiita.com/K240/items/2c159d275a580967d13d",
  "categories": "Houdini",
  "tags": "SOP COP HDA Python",
  "articleId": 2018120101,
  "summary": {
      "ja": "この記事では、アトラステクスチャからカードポリゴンを生成し、描画に優しい形に変換するツールについて紹介しています。Houdini 17の新機能「Python Viewer States」を活用しています。プロセスは、テクスチャの読み込み、境界の調整、テクスチャのトレース、ポリゴンへの変換、矩形化、UVの生成、Pivotの位置調整に分かれています。特に、DilateErodeノードを使った輪郭の調整やPython Viewer Statesの活用が重要です",
      "en": "The article discusses a tool that generates card polygons from atlas textures and converts them into renderer-friendly shapes using Houdini 17's new feature, Python Viewer States. The process involves loading textures, adjusting boundaries, tracing textures to polygons, rectangle conversion, UV generation, and adjusting the pivot position. Key aspects include using the DilateErode node for contour adjustment and leveraging Python Viewer States"
  }
},
{
  "thumbnailUrl": "2018120201.jpg",
  "creationDate": "2018-12-02",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "Houdini Engine API入門",
      "en": "Introduction to Houdini Engine API"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/3d86ab8e69652d5f951c",
  "categories": "Houdini",
  "tags": "HoudiniEngine C++ Qt",
  "articleId": 2018120201,
  "summary": {
      "ja": "この記事では、Houdini Engine APIの基本的な使い方と概要を紹介しています。Houdini Engineは、他のアプリケーションからHoudiniのデジタルアセットにアクセスするための機能であり、C ABI（Application Binary Interface）を用いたC言語の関数セットです。基本的な作業手順としては、Houdini Engineの初期化、アセットノードのインスタンス化とパラメータの設定、オブジェクトノードの問い合わせ、ノードのCook、更新されたノード情報の取得などが含まれます。HAPI_CreateNode関数を使用してノードを作成し、HAPI_ConnectNodeInput関数でノードを接続する方法も説明しています",
      "en": "The article provides an introduction to the basics and overview of Houdini Engine API. Houdini Engine is a feature for accessing Houdini's digital assets from other applications and is a set of C language functions using C ABI. The basic workflow includes initializing Houdini Engine, instantiating asset nodes and setting parameters, querying object nodes, cooking nodes, and retrieving updated node information. The article also explains creating nodes using the HAPI_CreateNode function and connecting nodes with the HAPI_ConnectNodeInput function"
  }
},
{
  "thumbnailUrl": "2018120301.jpg",
  "creationDate": "2018-12-03",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "分布の種類をコントロールする。",
      "en": "Control the type of distribution."
  },
  "articleUrl": "https://sugi-iggy.blogspot.com/2018/12/blog-post.html",
  "categories": "Houdini",
  "tags": "SOP Wrangle",
  "articleId": 2018120301,
  "summary": {
      "ja": "この記事では、Houdiniを使用して、スキャッターされる複数のジオメトリの配置に重みをつける方法を紹介しています。具体的には、半径10の円にscatterし、各ポイントにweight属性を割り当てる方法が説明されています。原点からの距離に基づいてweightを決定し、rampで重みを制御します。さらに、0-1の範囲でweight属性をfitし、id属性を作成します。最終的に、idにマッチしたジオメトリが配置されるようにします",
      "en": "The article presents a method to weight the placement of multiple geometries scattered using Houdini. It explains how to scatter across a circle with a radius of 10 and assign a weight attribute to each point. The weight is based on the distance from the origin and controlled via a ramp. The weight attribute is fitted within a 0-1 range, and an id attribute is created. Finally, geometries matching the ids are placed accordingly"
  }
},
{
  "thumbnailUrl": "2018120401.jpg",
  "creationDate": "2018-12-04",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "交点を求める",
      "en": "seek an intersection"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/ef93aeb558f353ab479c",
  "categories": "Houdini",
  "tags": "SOP Wrangle",
  "articleId": 2018120401,
  "summary": {
      "ja": "Houdiniを使って、平面上の直線ABとCDの交点を求める方法について解説しています。内積を用いたベクトル数学と連立方程式を組み合わせる方法が紹介されており、具体的には、点AからB、点CからDへの距離をd1、d2とし、ABとCDのベクトルをそれぞれn1、n2として計算します。線と線の交点、線と線の延長線上の交点、線が平行の場合の処理など、様々なシナリオに対応するための計算方法が示されています。サブルーチンとして定義された関数を用い、PrimitiveWrangleとVertexWrangleのコードも示されています​​​​​​​​​​​​​​。",
      "en": "This article explains how to use Houdini to find the intersection of lines AB and CD on a plane. It introduces a method that combines vector mathematics and simultaneous equations using inner products. Specifically, the distance from point A to B and from point C to D are d1 and d2, and the vectors of AB and CD are calculated as n1 and n2, respectively. Calculation methods are presented to handle various scenarios, such as intersections between lines, intersections on extensions of lines, and when lines are parallel. Using functions defined as subroutines, the PrimitiveWrangle and VertexWrangle codes are also shown The code for PrimitiveWrangle and VertexWrangle is also shown."
  }
},
{
  "thumbnailUrl": "2018120501.jpg",
  "creationDate": "2018-12-05",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "僕なりのHoudini勉強法",
      "en": "My own way of studying Houdini"
  },
  "articleUrl": "https://kickbase.net/entry/houdini-how-to-study",
  "categories": "Houdini",
  "tags": "SOP",
  "articleId": 2018120501,
  "summary": {
      "ja": "Houdiniの初心者向け学習法が紹介されています。学習者はまず、分かるノードと分からないノードを区別し、最小のネットワークを組んでみることから始めます。次に、新しく学んだノードを使って、少し複雑なネットワークを組んでみるというステップを踏みます。この方法は、ノードの理解、記憶、実際の使用を含むイテレーションとして機能し、効率的な学習を促進します。また、hipファイルを使用して実践的な学習を行うことが強調されています​​​​​​​​​​​​​​。",
      "en": "A beginner's approach to learning Houdini is presented. The learner begins by trying to build a minimal network, distinguishing the nodes that are known from those that are not known. The next step is to build a slightly more complex network using the newly learned nodes. This method serves as an iteration that includes understanding, memorizing, and actually using the nodes, facilitating efficient learning. It also emphasizes hands-on learning with the use of HIP files ."
  }
},
{
  "thumbnailUrl": "2018120601.jpg",
  "creationDate": "2018-12-06",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "H17 での Houdini Engine の変更点",
      "en": "Houdini Engine changes in H17"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2018/12/houdini-engine-change-in-h17.html",
  "categories": "Houdini",
  "tags": "HoudiniEngine HARS",
  "articleId": 2018120601,
  "summary": {
      "ja": "Houdini 17でのHoudini Engine for Mayaプラグインの変更点について説明されています。以前のデフォルト設定「Within Maya Process」がサポートされなくなり、Named PipeやTCP Socket方式が新たに採用されました。この変更は、以前の方法がライブラリのコンフリクトを引き起こす可能性があったためです。TCP Socketは、サーバー・クライアント方式を採用し、Houdini Engineの計算をサーバーで行い、Mayaプラグインはその結果を受け取る形になります。この変更により、Mayaが動作しているPCとは別の高性能PCでの演算結果を簡単にMayaで確認できるようになりました​​​​​​​​​​。",
      "en": "The changes to the Houdini Engine for Maya plug-in in Houdini 17 are described. The previous default setting \"Within Maya Process\" is no longer supported, and the Named Pipe and TCP Socket methods are new. This change was made because the previous method could cause library conflicts, and TCP Socket uses a server-client approach, where the Houdini Engine calculations are done on the server and the Maya plug-in receives the results. This change makes it easier for Maya to check the results of calculations on a high-performance PC other than the one on which Maya is running. The Houdini Engine is a new plug-in for the Houdini Engine."
  }
},
{
  "thumbnailUrl": "2018120701.jpg",
  "creationDate": "2018-12-07",
  "author": {
      "name": "@takavfx",
      "twitterIcon": "takavfx.jpg",
      "qiitaUrl": "https://qiita.com/takavfx",
      "twitterUrl": "https://twitter.com/takavfx"
  },
  "title": {
      "ja": "Pixar USD Houdiniプラグインのビルド",
      "en": "Building Pixar USD Houdini Plug-ins"
  },
  "articleUrl": "https://qiita.com/takavfx/items/2b536f2fff583cc47a80",
  "categories": "Houdini",
  "tags": "CMake VisualStudio USD",
  "articleId": 2018120701,
  "summary": {
      "ja": "この記事では、Houdini 17.0.352または17.0.395とWindows 10 (またはWindows 7)、Visual Studio 2017を使用して、Pixar USD Houdiniプラグインのビルド方法について説明しています。ビルド時の問題点として、インストールパスやアイコンファイルの欠如が挙げられ、それらを解決する方法が示されています。また、CMakeでの設定方法や、ビルドする際のベストプラクティスも紹介されており、清潔な環境でのビルドや、後の管理のための手順が詳細に説明されています​​​​​​​​​​。",
      "en": "This article describes how to build the Pixar USD Houdini plugin using Houdini 17.0.352 or 17.0.395, Windows 10 (or Windows 7) and Visual Studio 2017. Problems with the build include missing installation paths and icon files, and how to resolve them is shown. It also shows how to set it up in CMake and best practices for building it, detailing procedures for building in a clean environment and managing it afterwards! ."
  }
},
{
  "thumbnailUrl": "2018120801.jpg",
  "creationDate": "2018-12-08",
  "author": {
      "name": "@Yamabe_Michiyoshi",
      "twitterIcon": "Yamabe_Michiyoshi.jpg",
      "qiitaUrl": "https://qiita.com/Yamabe_Michiyoshi",
      "twitterUrl": "https://twitter.com/Yamabe_Michiyoshi"
  },
  "title": {
      "ja": "Refactoring Node Network - メンテナンス性の高いノードネットワーク構築のために",
      "en": "Refactoring Node Network - For building a highly maintainable node network"
  },
  "articleUrl": "http://www.technical-artist.net/?p=1737",
  "categories": "Houdini",
  "tags": "SOP HDA",
  "articleId": 2018120801,
  "summary": {
      "ja": "Houdiniのノードネットワークのリファクタリングに関する記事です。リファクタリングは、プログラムの外部動作を変えずに内部構造を整理するプロセスで、Houdiniの作業においてもプログラミングと同様の概念が適用されます。リファクタリングのメリットとして、ネットワークの理解が容易になり、修正や拡張が簡単になることが挙げられます。この記事では、名前の変更、アルゴリズムの更新とテスト、関心の分離、処理の集約、処理の再利用などの具体的なリファクタリングの手法が紹介されています​​​​​​​​​​​​​​​​​​​​。",
      "en": "This article is about refactoring the Houdini node network. Refactoring is the process of organizing the internal structure of a program without changing its external behavior, and the same concept applies to Houdini work as to programming. One of the benefits of refactoring is that it makes networks easier to understand, modify, and extend. This article presents specific refactoring techniques such as renaming, updating and testing algorithms, isolating interests, consolidating processes, and reusing processes ."
  }
},
{
  "thumbnailUrl": "2018120901.jpg",
  "creationDate": "2018-12-09",
  "author": {
      "name": "@towazumi",
      "twitterIcon": "towazumi.jpg",
      "qiitaUrl": "https://qiita.com/towazumi",
      "twitterUrl": "https://twitter.com/towazumi"
  },
  "title": {
      "ja": "Houdini Python PanelでカスタムUIを作る",
      "en": "Creating a custom UI with Houdini Python Panel"
  },
  "articleUrl": "https://qiita.com/towazumi/items/cb7e5ae0fa609d4294c2",
  "categories": "Houdini",
  "tags": "Python PySide Qt",
  "articleId": 2018120901,
  "summary": {
      "ja": "HoudiniでカスタムUIを作成する方法についての記事です。Python Panelを使ってGUIからHoudini操作を呼び出せるようにする方法が紹介されています。基本的なUIの作成から始め、PySide2によるpythonコードの変更、コードの外部ファイル化、ネットワークエディタからのノードのドラッグ&ドロップ機能の実装について詳細が説明されています。この方法により、より複雑な操作や多くのパラメータを持つ操作を容易に行えるようになります​​​​​​​​​​。",
      "en": "This article on how to create a custom UI in Houdini shows how to use Python Panel to call Houdini operations from the GUI. Starting with the creation of a basic UI, the article details the modification of python code with PySide2, the creation of external files of code, and the implementation of drag-and-drop functionality for nodes from the network editor. This method allows you to easily perform more complex operations and operations with many parameters The following is a list of the most common examples of the new code"
  }
},
{
  "thumbnailUrl": "2018121001.jpg",
  "creationDate": "2018-12-10",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "失ったTransformを取り戻す。",
      "en": "Reclaim lost Transform."
  },
  "articleUrl": "http://sugi-iggy.blogspot.com/2018/12/transform.html",
  "categories": "Houdini",
  "tags": "SOP Wrangle",
  "articleId": 2018121001,
  "summary": {
      "ja": "この記事は、ジオメトリの形状からTransform（位置、回転、スケール）を作成し、別のジオメトリに適用する方法について解説しています。ポジションはジオメトリの中心座標を使用し、回転とスケールは特定のポリゴンからN、up、pscaleを計算しています。この方法は、Transformデータが失われたジオメトリに対して有効です。例として、アニメーションされたドーナツ（Torus）ジオメトリにぬいぐるみ（rubbertoy）ジオメトリが追従する様子が示されています。ただし、元のジオメトリの大きさや向きの調整が必要な点に注意が必要です。",
      "en": "This article explains how to create a Transform (position, rotation, scale) from a geometry shape and apply it to another geometry. Position uses the center coordinates of the geometry, while rotation and scale are calculated N, up, and pscale from specific polygons. This method is useful for geometry where Transform data has been lost. As an example, a plush (rubbertoy) geometry is shown following an animated donut (torus) geometry. Note, however, that the size and orientation of the original geometry must be adjusted."
  }
},
{
  "thumbnailUrl": "2018121101.jpg",
  "creationDate": "2018-12-11",
  "author": {
      "name": "@KTK_kumamoto",
      "twitterIcon": "KTK_kumamoto.jpg",
      "qiitaUrl": "https://qiita.com/KTK_kumamoto",
      "twitterUrl": "https://twitter.com/KTK_kumamoto"
  },
  "title": {
      "ja": "ゲームエフェクト Houdiniを使って私がやりたいこと（Houdini歴１年未満）",
      "en": "Game Effects What I want to do with Houdini (less than 1 year of Houdini experience)"
  },
  "articleUrl": "https://qiita.com/KTK_kumamoto/items/15d63d1db65785fde79a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121101,
  "summary": {
      "ja": "この記事では、ゲームエフェクトの制作において、Substance Designerの使用とHoudiniの学習について説明されています。著者は、様々なゲームエフェクトモデルの作成、リアル調やセル調の連番テクスチャー作成にHoudiniを用いることを目指しています。また、炎や煙のシミュレーションのリアルさや、VEX、Wrangleノードのコントロールの重要性についても触れています。著者は、Houdiniのプロシージャルなモデリングの効率的な使い方を将来的に紹介することを目標としています​​​​​​​​​​​​。",
      "en": "This article describes the use of Substance Designer and learning Houdini in the creation of game effects. The author aims to use Houdini for creating various game effects models and creating realistic and cel-like sequential number textures. He also discusses the realism of flame and smoke simulation and the importance of VEX and Wrangle node control. The author aims to show how to use Houdini efficiently for procedural modeling in the future! The author also discusses the use of the Houdini software in the future."
  }
},
{
  "thumbnailUrl": "2018121201.jpg",
  "creationDate": "2018-12-12",
  "author": {
      "name": "@shige_ktgw",
      "twitterIcon": "shige_ktgw.jpg",
      "qiitaUrl": "https://qiita.com/shige_ktgw",
      "twitterUrl": "https://twitter.com/shige_ktgw"
  },
  "title": {
      "ja": "Inherit velocity RBD Packed Object",
      "en": "Inherit velocity RBD Packed Object"
  },
  "articleUrl": "http://nomoreretake.net/2018/12/24/houdini-inherit-velocity-rbd-packed-object/",
  "categories": "Houdini",
  "tags": "SOP DOP",
  "articleId": 2018121201,
  "summary": {
      "ja": "この記事では、RBD Packed ObjectのActive制御と初速度の継承についての方法を紹介しています。具体的には、各破片がActiveになった瞬間に初速度を受け継いで動くシミュレーションに焦点を当てています。初速度は元ジオメトリに設定された速度vを継承します。破片がActive状態になる際に初速の継承を行うための3つの方法が示されており、それぞれの方法についての詳細な説明とサンプルファイルが提供されています。これらの方法は、シミュレーションの多様なニーズに応じて適用されることが示唆されています。",
      "en": "This article shows how to control Active and inherit the initial velocity of an RBD Packed Object. Specifically, it focuses on a simulation in which each piece moves by inheriting its initial velocity at the moment it becomes Active. The initial velocity inherits the velocity v set on the original geometry. Three methods for inheriting the initial velocity when the debris becomes Active are shown, with detailed descriptions and sample files provided for each method. It is suggested that these methods may be applied to meet a variety of simulation needs."
  }
},
{
  "thumbnailUrl": "2018121301.jpg",
  "creationDate": "2018-12-13",
  "author": {
      "name": "@55hertz",
      "twitterIcon": "55hertz.jpg",
      "qiitaUrl": "https://qiita.com/55hertz",
      "twitterUrl": "https://twitter.com/55hertz"
  },
  "title": {
      "ja": "NVIDIA OptiXが静止画とアニメーションで活用できる場面",
      "en": "NVIDIA OptiXが静止画とアニメーションで活用できる場面"
  },
  "articleUrl": "https://qiita.com/55hertz/items/188a7e083baff1dd8fe4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121301,
  "summary": {
      "ja": "この記事では、NVIDIAのOptiX denoiserを使用してレンダリング時間を短縮する方法について説明されています。静止画とアニメーションでの比較、レンダリング時間の短縮、画質のトレードオフに焦点を当てています。作者は、OptiXがレンダリング時間の短縮に効果的であるが、品質面での課題も指摘しています​​​",
      "en": "This article describes how to reduce rendering time using NVIDIA's OptiX denoiser. It focuses on comparisons between still and animated images, rendering time reduction, and image quality tradeoffs. The author notes that OptiX is effective in reducing rendering time, but also points out quality challenges"
  }
},
{
  "thumbnailUrl": "2018121401.jpg",
  "creationDate": "2018-12-14",
  "author": {
      "name": "@sho7noka",
      "twitterIcon": "sho7noka.jpg",
      "qiitaUrl": "https://qiita.com/sho7noka",
      "twitterUrl": "https://twitter.com/sho7noka"
  },
  "title": {
      "ja": "怖くないVEX",
      "en": "怖くないVEX"
  },
  "articleUrl": "https://qiita.com/sho7noka/items/f2394d53b8b12f889caa",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121401,
  "summary": {
      "ja": "この記事は、HoudiniのVEX言語についての入門ガイドです。VEXの基本的な特徴や、他のシェーダ言語との比較、ノードベースのプログラミングに関する考察が含まれています。記事は、VEXの学習に対する抵抗を減らすために書かれています​​​​​​​",
      "en": "This article is an introductory guide to the VEX language in Houdini, including a discussion of the basic features of VEX, a comparison to other shader languages, and node-based programming. The article is written to reduce resistance to learning VEX"
  }
},
{
  "thumbnailUrl": "2018121501.jpg",
  "creationDate": "2018-12-15",
  "author": {
      "name": "@yuya_torii",
      "twitterIcon": "yuya_torii.jpg",
      "qiitaUrl": "https://qiita.com/yuya_torii",
      "twitterUrl": "https://twitter.com/yuya_torii"
  },
  "title": {
      "ja": "HoudiniのParameter Interfaceで使えるPython ①",
      "en": "HoudiniのParameter Interfaceで使えるPython ①"
  },
  "articleUrl": "https://qiita.com/yuya_torii/items/9ae1248380c47b79efa3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121501,
  "summary": {
      "ja": "この記事では、HoudiniのParameter Interfaceで使用可能なPythonの使い方について解説しています。Menu Scriptの使用方法、Action Button Script、HDAでのPythonの使用方法に焦点を当てています。具体的なPythonコードの例も提供されています​​​​​​​​​​。",
      "en": "This article describes the use of Python available in Houdini's Parameter Interface, focusing on how to use Menu Script, Action Button Script, and Python in HDA. Specific Python code examples are also provided. The book is available in English, French, German, Italian, French, Spanish, Italian and Japanese."
  }
},
{
  "thumbnailUrl": "2018121601.jpg",
  "creationDate": "2018-12-16",
  "author": {
      "name": "@m__a__",
      "twitterIcon": "m__a__.jpg",
      "qiitaUrl": "https://qiita.com/m__a__",
      "twitterUrl": "https://twitter.com/m__a__"
  },
  "title": {
      "ja": "popの小技",
      "en": "popの小技"
  },
  "articleUrl": "https://qiita.com/m__a__/items/324c117d7c11e1d459fc",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121601,
  "summary": {
      "ja": "こちらの記事では、Houdiniでpopノードを使用したパーティクルの技術について説明しています。特定の領域のパーティクルを操作する方法や、選択範囲をぼかすための技術が紹介されています​​​​​​​​​​​​​​​​​​。",
      "en": "This article explains particle techniques using pop nodes in Houdini. It shows how to manipulate particles in specific areas and techniques for blurring selections The article explains how to manipulate particles in specific areas and how to blur a selection."
  }
},
{
  "thumbnailUrl": "2018121701.jpg",
  "creationDate": "2018-12-17",
  "author": {
      "name": "@ts_bros",
      "twitterIcon": "ts_bros.jpg",
      "qiitaUrl": "https://qiita.com/ts_bros",
      "twitterUrl": "https://twitter.com/ts_bros"
  },
  "title": {
      "ja": "流体表現に磨きをかける",
      "en": "流体表現に磨きをかける"
  },
  "articleUrl": "https://qiita.com/ts_bros/items/7f0dfa6dd63bc697a48e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121701,
  "summary": {
      "ja": "この記事では、Houdiniを用いた流体表現の技術について説明しています。Animationの基本式、Fluid Dynamics Systemの理解、Volume Displacement、Wavelet TurbulenceとGridRessAdvectionの概念が解説されています​​​​​​​​​​​​。",
      "en": "This article describes the techniques of fluid representation using Houdini, including the basic formulas of Animation, understanding the Fluid Dynamics System, Volume Displacement, Wavelet Turbulence and GridRessAdvection. Wavelet Turbulence and GridRessAdvection are explained. The course is designed to be used by students who are interested in the concept of \"fluid dynamics\"."
  }
},
{
  "thumbnailUrl": "2018121801.jpg",
  "creationDate": "2018-12-18",
  "author": {
      "name": "@sa-k0",
      "twitterIcon": "sa-k0.jpg",
      "qiitaUrl": "https://qiita.com/sa-k0",
      "twitterUrl": "https://twitter.com/sa-k0"
  },
  "title": {
      "ja": "Houdiniで書き出したAlembicファイルをUnityで使うときのTips",
      "en": "Houdiniで書き出したAlembicファイルをUnityで使うときのTips"
  },
  "articleUrl": "https://qiita.com/sa-k0/items/6d51e490b4ead1cecb4c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121801,
  "summary": {
      "ja": "この記事では、Houdiniで作成したAlembicファイルをUnityにインポートする際のヒントについて説明しています。Alembicファイルの出力方法、Unityでのインポート方法、色情報やカスタムアトリビュートの扱い方に焦点を当てています​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​。",
      "en": "This article discusses tips for importing Alembic files created in Houdini into Unity, focusing on how to output Alembic files, import them into Unity, and handle color information and custom attributes!  The following tips and tricks are provided for importing Alembic files into Unity."
  }
},
{
  "thumbnailUrl": "2018121901.jpg",
  "creationDate": "2018-12-19",
  "author": {
      "name": "@AokTky_dori",
      "twitterIcon": "AokTky_dori.jpg",
      "qiitaUrl": "https://qiita.com/AokTky_dori",
      "twitterUrl": "https://twitter.com/AokTky_dori"
  },
  "title": {
      "ja": "addprimでインスタンス",
      "en": "Instance with addprim"
  },
  "articleUrl": "https://qiita.com/AokTky_dori/items/53057591a2c52b7cf15d",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121901,
  "summary": {
      "ja": "この記事では、Houdiniでのインスタンスコピーの方法として、Instance SOP NodeとWrangleを用いた方法が紹介されています。著者は100万ポイントに対して、Instance SOPとWrangleでのパフォーマンスを比較し、Wrangleの方が約8倍速いことを示しています。インスタンス化のためにWrangleでaddprimを使用する方法が、簡単ではないが、HDAにしてしまえば問題ないと述べています​​​​​​​​。",
      "en": "This article shows how to copy instances in Houdini using Instance SOP Node and Wrangle. The author compares performance with Instance SOP and Wrangle for 1 million points and shows that Wrangle is about 8 times faster. He states that the method of using addprim in Wrangle for instantiation is not easy, but once it is HDA, it is not a problem! ."
  }
},
{
  "thumbnailUrl": "2018122001.jpg",
  "creationDate": "2018-12-20",
  "author": {
      "name": "@shige_ktgw",
      "twitterIcon": "shige_ktgw.jpg",
      "qiitaUrl": "https://qiita.com/shige_ktgw",
      "twitterUrl": "https://twitter.com/shige_ktgw"
  },
  "title": {
      "ja": "水を貯める",
      "en": "store water"
  },
  "articleUrl": "http://nomoreretake.net/2018/12/24/houdini_flip_reseed/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122001,
  "summary": {
      "ja": "この記事では、Houdiniを使用して「水を貯める」シミュレーションにおける問題点とその対策について説明されています。FLIPシミュレーションでは、水をビンに溜めると水位が減少する現象が発生しました。この原因は、パーティクルの密度が増加して圧縮されることによるもので、実際のパーティクル数は減っていないことが判明しました。問題を解決するために、FLIP Solver(DOP)のReseedingパラメータを調整しました。このパラメータはパーティクルを追加・削除し、水の量を制御します。Surface OversamplingとBirth Thresholdを変更することで、水位の減少を解消できましたが、この方法が全てのケースに適用できるわけではないとも述べています。",
      "en": "This article describes a problem and its remedy in a \"storing water\" simulation using Houdini: In a FLIP simulation, the water level decreased when water was stored in a bin. It was found that this was caused by an increase in particle density and compression, not a decrease in the actual number of particles. To solve the problem, we adjusted the Reseeding parameter in FLIP Solver (DOP). This parameter adds and removes particles and controls the amount of water; by changing Surface Oversampling and Birth Threshold, we were able to eliminate the reduction in water level, but we also noted that this approach may not be applicable in all cases."
  }
},
{
  "thumbnailUrl": "2018122101.jpg",
  "creationDate": "2018-12-21",
  "author": {
      "name": "@shun-tsumori",
      "twitterIcon": "shun-tsumori.jpg",
      "qiitaUrl": "https://qiita.com/shun-tsumori",
      "twitterUrl": "https://twitter.com/shun-tsumori"
  },
  "title": {
      "ja": "ノード作成時に独自パラメーターを追加する方法",
      "en": "How to add your own parameters when creating a node"
  },
  "articleUrl": "https://qiita.com/shun-tsumori/items/f8d566864feee987ccae",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122101,
  "summary": {
      "ja": "この記事では、Houdiniのノード生成時に独自のパラメーターを追加する方法について説明されています。具体的には、geometryノードに「Backburner」という名前の新たなタブを追加する例が示されています。Houdiniのノードは、parmTemplateGroupという入れ物を持ち、それにパラメーターを追加する方法が紹介されています。この方法を使えば、様々なノードに同じパラメーターを追加することが可能です​​​​​​​​​​​​。",
      "en": "This article explains how to add your own parameters during Houdini node generation. Specifically, it shows an example of adding a new tab named \"Backburner\" to a geometry node, and how Houdini nodes have a container called parmTemplateGroup to which you can add parameters. Using this method, it is possible to add the same parameters to various nodes parmTemplateGroup."
  }
},
{
  "thumbnailUrl": "2018122201.jpg",
  "creationDate": "2018-12-22",
  "author": {
      "name": "@y_yamada",
      "twitterIcon": "y_yamada.jpg",
      "qiitaUrl": "https://qiita.com/y_yamada",
      "twitterUrl": "https://twitter.com/y_yamada"
  },
  "title": {
      "ja": "OpenVDBを使ったリメッシュワーク",
      "en": "Remesh work with OpenVDB"
  },
  "articleUrl": "http://site.cgslab.info/archives/319",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122201,
  "summary": {
      "ja": "この記事では、OpenVDBについて、その基本的な使い方と応用例に焦点を当てて説明しています。OpenVDBは雲や炎、水などのボリュームメトリックシミュレーションに使用され、ジオメトリのボリュームとしての扱いやブーリアン処理にも適しています。記事では、Houdini内のOpenVDBノードの使用方法を紹介し、高解像度メッシュの特定部分を抽出する過程を解説しています。VDB from Polygonsノード、VDB Combineノード、Convert VDBノードの使い方が具体的に説明され、OpenVDBの効率的な利用方法が示されています。また、記事の最後では、実際の使用例の動画も紹介されています。",
      "en": "This article discusses OpenVDB, focusing on its basic usage and applications.OpenVDB is used for volumetric simulations of clouds, flames, water, etc., and is also suitable for treating geometry as volumes and for boolean processing. The article introduces the use of OpenVDB nodes within Houdini and explains the process of extracting specific parts of a high-resolution mesh. is shown in detail and how to use OpenVDB efficiently. At the end of the article, a video of an actual use case is also presented."
  }
},
{
  "thumbnailUrl": "2018122301.jpg",
  "creationDate": "2018-12-23",
  "author": {
      "name": "@jhorikawa_err",
      "twitterIcon": "jhorikawa_err.jpg",
      "qiitaUrl": "https://qiita.com/jhorikawa_err",
      "twitterUrl": "https://twitter.com/jhorikawa_err"
  },
  "title": {
      "ja": "Houdini+ローカルDB〜Qt+SQLiteを使った簡易システム構築〜",
      "en": "Houdini+Local DB - Simple system construction using Qt+SQLite"
  },
  "articleUrl": "https://qiita.com/jhorikawa_err/items/528c188b95707cbe6a54",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122301,
  "summary": {
      "ja": "この記事では、HoudiniとSQLiteを使用したデータベースシステムの構築について説明しています。著者はHoudiniでデータベースを視覚的に処理することの可能性に興味を持ち、ローカルに保存するSQLiteを扱う方法を採用しています。記事では、Houdiniのデータをデータベースに保存し、そのデータを用いてノードネットワークを再構成する方法が示されています​​​​​​​​​​​​​​​​​​​​。",
      "en": "This article describes the construction of a database system using Houdini and SQLite. The author is interested in the possibilities of visually processing databases in Houdini and adopts a method of dealing with SQLite that stores locally. The article shows how to store Houdini data in a database and reconstruct a node network using that data ."
  }
},
{
  "thumbnailUrl": "2018122401.jpg",
  "creationDate": "2018-12-24",
  "author": {
      "name": "@yuya_torii",
      "twitterIcon": "yuya_torii.jpg",
      "qiitaUrl": "https://qiita.com/yuya_torii",
      "twitterUrl": "https://twitter.com/yuya_torii"
  },
  "title": {
      "ja": "HoudiniのParameter Interfaceで使えるPython②",
      "en": "Python (2) for use with Houdini's Parameter Interface"
  },
  "articleUrl": "https://qiita.com/yuya_torii/items/6f07a5708c3f45ad632c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122401,
  "summary": {
      "ja": "この記事では、HoudiniのParameter Interfaceで利用できるPythonに関する技術が紹介されています。具体的には、OrderedMenuとCallbackScriptの組み合わせ、+-ボタンの作り方、ParameterのDefaultValueの設定方法が説明されています。これらの技術は、より効率的で直感的なユーザーインターフェイスの作成に役立ちます",
      "en": "This article introduces techniques related to Python that can be used with Houdini's Parameter Interface. Specifically, it explains how to combine OrderedMenu and CallbackScript, how to create +- buttons, and how to set the DefaultValue of a Parameter. These techniques will help you create a more efficient and intuitive user interface"
  }
},
{
  "thumbnailUrl": "2018122501.jpg",
  "creationDate": "2018-12-25",
  "author": {
      "name": "@ARTsak",
      "twitterIcon": "ARTsak.jpg",
      "qiitaUrl": "https://qiita.com/ARTsak",
      "twitterUrl": "https://twitter.com/ARTsak"
  },
  "title": {
      "ja": "HoudiniのShelfktips",
      "en": "HoudiniのShelfktips"
  },
  "articleUrl": "http://artsak666.hatenablog.com/entry/2018/12/13/184258",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}







,
{
  "thumbnailUrl": "2018120202.jpg",
  "creationDate": "2018-12-02",
  "author": {
      "name": "@peajxs",
      "twitterIcon": "peajxs.jpg",
      "qiitaUrl": "https://qiita.com/peajxs",
      "twitterUrl": "https://twitter.com/peajxs"
  },
  "title": {
      "ja": "自分なりのHoudini勉強方法とSNSの有効的な使い方",
      "en": "My own way of studying Houdini and effective use of SNS"
  },
  "articleUrl": "https://qiita.com/peajxs/items/64b0d2993a2c15b52fbd",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120202,
  "summary": {
      "ja": "この記事は、Houdini Apprentice Advent Calendar 2018の2日目の記事で、著者がHoudiniを学ぶ方法とSNSの活用方法を共有しています。約1年半前に専門学校入学と同時にHoudiniを始めた著者は、当初は独学で進め、最初は教科書やチュートリアル動画を見ながら勉強しました。その後、メモ取り、リファレンスの活用、勉強会への参加、オンラインフォーラム利用など、効率的な学習方法に変更しました。また、Twitterを使ってプロのアドバイスを得たり、勉強会に参加するなど、SNSを有効活用しています",
      "en": "This article is the second day of the Houdini Apprentice Advent Calendar 2018 and shares how the author learned Houdini and how he uses social networking sites. The author, who started working with Houdini about 18 months ago upon entering technical school, was initially self-taught and studied by watching textbooks and tutorial videos at first. Later, he changed to a more efficient learning method by taking notes, using references, participating in study groups, and using online forums. I also make effective use of social networking services, such as using Twitter to get professional advice and participating in study groups!"
  }
},
{
  "thumbnailUrl": "2018120302.jpg",
  "creationDate": "2018-12-03",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "HDA Submenu",
      "en": "HDA Submenu"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2018/12/hda-submenu.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018120402.jpg",
  "creationDate": "2018-12-04",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "SOPのみで作る慣性方程式を利用した溶岩噴出のエフェクト(遠景用)",
      "en": "SOPのみで作る慣性方程式を利用した溶岩噴出のエフェクト(遠景用)"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/9c6257184f70745e2e94",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120402,
  "summary": {
      "ja": "著者は、Fujtiaさんのチュートリアルを勉強し、その知識を利用してマグマ噴出のエフェクトを作成します。このプロセスでは、初速度自由落下方程式を用いて点に動きを付け、クリッピングとカラーアトリビュートを設定し、アニメーションをサイクルさせて継続的な噴出を実現しています。最終的なコードと結果は記事に掲載されています",
      "en": "The author studies Fujtia's tutorial and uses his knowledge to create a magma eruption effect. The process involves adding motion to a point using the initial velocity freefall equation, setting clipping and color attributes, and cycling the animation to create a continuous eruption. The final code and results can be found in the article"
  }
},
{
  "thumbnailUrl": "2018120502.jpg",
  "creationDate": "2018-12-05",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "TwistとBendデフォーメーションの重ね掛け",
      "en": "Overlapping Twist and Bend deformation"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/79e1b3f191b737777aa4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120502,
  "summary": {
      "ja": "この記事では、著者がTwistとBendデフォーメーションを組み合わせたアニメーションを作成しています。まず、必要な関数を準備し、Twist関数とBend関数を定義します。For Loopを使ってこれらのデフォーメーションを重ねていき、pivot、aim、crossという変数を用いて基点と方向を更新します。最終的には、様々な値を掛け合わせてアニメーションさせ、パーティクルに適用することも可能です",
      "en": "In this article, the author creates an animation that combines Twist and Bend deformations. First, the necessary functions are prepared and the Twist and Bend functions are defined; these deformations are layered using For Loop, and the variables pivot, aim, and cross are used to update the base point and direction. Finally, the various values can be multiplied and animated and applied to the particles!"
  }
},
{
  "thumbnailUrl": "2018120602.jpg",
  "creationDate": "2018-12-06",
  "author": {
      "name": "@hina2vi",
      "twitterIcon": "hina2vi.jpg",
      "qiitaUrl": "https://qiita.com/hina2vi",
      "twitterUrl": "https://twitter.com/hina2vi"
  },
  "title": {
      "ja": "壊したものは元に戻したい",
      "en": "I want to put back what I broke."
  },
  "articleUrl": "https://qiita.com/hina2vi/items/6b6b4b2aa3b8755fd0ae",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120602,
  "summary": {
      "ja": "この記事では、破壊されたものを元に戻すエフェクトの作成方法について紹介されています。最初にレンガの準備を行い、シミュレーションの下準備として、ジオメトリと制御用のポイントを設定します。シミュレーションでは、位置や回転の動きを調整し、最終的には元の状態に戻す過程を紹介しています。著者は、この方法がカーブを使って軌道を容易にコントロールできると述べています",
      "en": "This article shows how to create an effect that restores something that has been destroyed. First, the brick is prepared and geometry and control points are set up to prep the simulation. The simulation shows the process of adjusting the position and rotational movements and eventually undoing them. The author states that this method allows for easy control of the trajectory using curves"
  }
},
{
  "thumbnailUrl": "2018120702.jpg",
  "creationDate": "2018-12-07",
  "author": {
      "name": "@saty",
      "twitterIcon": "saty.jpg",
      "qiitaUrl": "https://qiita.com/saty",
      "twitterUrl": "https://twitter.com/saty"
  },
  "title": {
      "ja": "switchで作るUIいろいろ",
      "en": "Various UI to be created with switch"
  },
  "articleUrl": "https://qiita.com/saty/items/41620eb9f6184a594456",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120702,
  "summary": {
      "ja": "この記事では、Switchノードを用いたUIの作成方法について紹介されています。Switchノードは入力ノードを切り替えることができ、チェックボックス、ラジオボタン、入力の有無の判定などのUIコンポーネントを作成するのに使用されます。著者はこれらのコンポーネントの作成方法を具体的に解説し、最終的にはSwitchノードが完成します",
      "en": "This article shows how to create a UI using Switch nodes, which can switch input nodes and are used to create UI components such as checkboxes, radio buttons, and whether or not an input is present. The author explains exactly how to create these components, and the end result is a Switch node!"
  }
},
{
  "thumbnailUrl": "2018120902.jpg",
  "creationDate": "2018-12-09",
  "author": {
      "name": "@takavfx",
      "twitterIcon": "takavfx.jpg",
      "qiitaUrl": "https://qiita.com/takavfx",
      "twitterUrl": "https://twitter.com/takavfx"
  },
  "title": {
      "ja": "Windows 10でHoudiniのライセンス更新に失敗する時の対処法",
      "en": "What to do when Houdini license renewal fails on Windows 10"
  },
  "articleUrl": "https://qiita.com/takavfx/items/85fb86f9bbf49356fa43",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018120902,
  "summary": {
      "ja": "Windows 10でHoudini Apprenticeを使用する際、ライセンス更新に失敗する問題が発生します。この問題の原因は、ライセンスファイルの更新に管理者権限が必要だが、通常起動では権限がないためです。解決策は、任意のバージョンのHoudini Apprenticeを「管理者として実行」で起動し、表示される指示に従ってライセンスを更新することです​​。",
      "en": "When using Houdini Apprentice on Windows 10, there is an issue with license updates failing. The reason for this problem is that updating the license file requires administrator privileges, but normal startup does not. The solution is to start any version of Houdini Apprentice with \"Run as administrator\" and follow the instructions displayed to update the license."
  }
},
{
  "thumbnailUrl": "2018121002.jpg",
  "creationDate": "2018-12-10",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "拡散していくボックス",
      "en": "Diffusion box"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/179bf28eddef91e55269",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121002,
  "summary": {
      "ja": "この記事では、Solverを使用してボックスが拡散し、特定の形を作る方法を紹介します。まず、ボックスが隣のボックスに拡散する設定を行い、拡散制限を設定します。拡散時にボックスを移動させるためには、いくつかのアトリビュートを追加します。この技法は立体にも適用可能で、ポイントクラウドを使用して隣接ポイントを判定し、アトリビュートを変更します​​​​​​​​​​。",
      "en": "This article shows how to use Solver to make a box diffuse and create a specific shape. First, set up the box to diffuse to a neighboring box and set the diffusion limit. To move the box when diffusing, add some attributes. This technique can also be applied to solids, using a point cloud to determine adjacent points and change the attributes ."
  }
},
{
  "thumbnailUrl": "2018121102.jpg",
  "creationDate": "2018-12-11",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "CopyのStampを使わずに花が咲広がるアニメーション",
      "en": "Animation of flowers blooming and spreading without Stamp of Copy"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/7368cd2062341bc49b30",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121102,
  "summary": {
      "ja": "この記事では、CopyのStamp機能を使わずに花が咲き広がるアニメーションを作成する方法を紹介しています。まず、単体の花びらのアニメーションを作成し、その後、それを複数の花びらに適用します。さらに、Scatterを使って花のポイントを作成し、それらにアトリビュートを用いてより複雑なアニメーションを作成します​​​​​​​​​​。",
      "en": "This article shows how to create an animation of a flower blooming and spreading without using Copy's Stamp feature. First, create an animation of a single petal, then apply it to multiple petals. Then, use Scatter to create the points of the flower and use attributes on them to create a more complex animation The first step is to create a single petal animation and then apply it to multiple petals."
  }
},
{
  "thumbnailUrl": "2018121202.jpg",
  "creationDate": "2018-12-12",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "トランスフォーマーロゴアニメーション",
      "en": "Transformers Logo Animation"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/74216e830b86b825ed0c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121202,
  "summary": {
      "ja": "著者はトランスフォーマー風のロゴアニメーションを作成し、そのプロセスを説明しています。このアニメーションでは、まずピースを設定し、Solverを使用して隣接オブジェクトをアクティブにしながら階層化します。階層トランスフォームでは、子から親へとマトリックスを適用し、基本コードを使ってアニメーションのタイミングを調整します​​​​​​​​​​​​。",
      "en": "The author has created a Transformers-style logo animation to illustrate the process. In this animation, the pieces are first set up and then hierarchically transformed while activating adjacent objects using Solver. The hierarchical transform applies the matrix from child to parent and adjusts the timing of the animation using basic code ."
  }
},
{
  "thumbnailUrl": "2018121402.jpg",
  "creationDate": "2018-12-14",
  "author": {
      "name": "@saty",
      "twitterIcon": "saty.jpg",
      "qiitaUrl": "https://qiita.com/saty",
      "twitterUrl": "https://twitter.com/saty"
  },
  "title": {
      "ja": "カスタムノードシェイプを作る",
      "en": "Create Custom Node Shapes"
  },
  "articleUrl": "https://qiita.com/saty/items/c573fd4bb6ba7f55b995",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121402,
  "summary": {
      "ja": "Houdiniでは、ノードの形状を自作し、JSON形式のファイルでカスタムノードシェイプを追加することができます。このプロセスでは、まずCurve SOPでアウトラインを描き、必要に応じてAdobe Illustratorのepsファイルも使用します。その後、Detailに格納された座標情報をJSONファイルの書式で結合し、カスタムノードシェイプを作成します​​​​​​​​​​​​​​​​。",
      "en": "Houdini allows you to create your own node shapes and add custom node shapes in JSON format files. The process involves first drawing an outline in Curve SOP, and if necessary also using an Adobe Illustrator eps file. Then, coordinate information stored in Detail is combined in the format of a JSON file to create a custom node shape The node shape is then created by combining the coordinate information stored in Detail with the JSON file format."
  }
},
{
  "thumbnailUrl": "2018121502.jpg",
  "creationDate": "2018-12-15",
  "author": {
      "name": "@TaroOzaki",
      "twitterIcon": "TaroOzaki.jpg",
      "qiitaUrl": "https://qiita.com/TaroOzaki",
      "twitterUrl": "https://twitter.com/TaroOzaki"
  },
  "title": {
      "ja": "【第二版】Houdiniで建築(入門編: ジオメトリ間のデータやり取り)",
      "en": "【第二版】Houdiniで建築(入門編: ジオメトリ間のデータやり取り)"
  },
  "articleUrl": "https://qiita.com/TaroOzaki/items/2e0727c3daccb9158e7e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018121602.jpg",
  "creationDate": "2018-12-16",
  "author": {
      "name": "@yosemite",
      "twitterIcon": "yosemite.jpg",
      "qiitaUrl": "https://qiita.com/yosemite",
      "twitterUrl": "https://twitter.com/yosemite"
  },
  "title": {
      "ja": "有料チュートリアルの感想",
      "en": "有料チュートリアルの感想"
  },
  "articleUrl": "https://qiita.com/yosemite/items/ef7539157ef16391cb3e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018121802.jpg",
  "creationDate": "2018-12-18",
  "author": {
      "name": "@fes_0131",
      "twitterIcon": "fes_0131.jpg",
      "qiitaUrl": "https://qiita.com/fes_0131",
      "twitterUrl": "https://twitter.com/fes_0131"
  },
  "title": {
      "ja": "3DCG初心者がHoudiniでCGを始めて。＋簡単に作れる紙タバコのタイムラプス",
      "en": "3DCG初心者がHoudiniでCGを始めて。＋簡単に作れる紙タバコのタイムラプス"
  },
  "articleUrl": "https://qiita.com/fes_0131/items/efbbd6d5ee6d515ff741",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018121802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018122102.jpg",
  "creationDate": "2018-12-21",
  "author": {
      "name": "@tsuka0245",
      "twitterIcon": "tsuka0245.jpg",
      "qiitaUrl": "https://qiita.com/tsuka0245",
      "twitterUrl": "https://twitter.com/tsuka0245"
  },
  "title": {
      "ja": "GridMarketを使ったHoudiniレンダリング",
      "en": "GridMarketを使ったHoudiniレンダリング"
  },
  "articleUrl": "https://qiita.com/tsuka0245/items/d59f3bcac82ce5b04a07",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018122202.jpg",
  "creationDate": "2018-12-22",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "Houdini Light Pass Expressions",
      "en": "Houdini Light Pass Expressions"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2018/12/houdini-lpe.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018122402.jpg",
  "creationDate": "2018-12-24",
  "author": {
      "name": "@dragon_1159",
      "twitterIcon": "dragon_1159.jpg",
      "qiitaUrl": "https://qiita.com/dragon_1159",
      "twitterUrl": "https://twitter.com/dragon_1159"
  },
  "title": {
      "ja": "Houdini初心者が必死こいてスキル習得を試みた1年を振り返る",
      "en": "Houdini初心者が必死こいてスキル習得を試みた1年を振り返る"
  },
  "articleUrl": "https://qiita.com/dragon_1159/items/6639545601b9a77322a3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2018122502.jpg",
  "creationDate": "2018-12-25",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "Houdiniでチキンラーメンを作る方法",
      "en": "Houdiniでチキンラーメンを作る方法"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/2269879e46f9915517ad",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2018122502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}









,{
  "thumbnailUrl": "2019120101.jpg",
  "creationDate": "2019-12-01",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "ディニ子をつくる：Houdiniでキャラクターモデリング",
      "en": "ディニ子をつくる：Houdiniでキャラクターモデリング"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/ad15495a702ee957dbe8",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120201.jpg",
  "creationDate": "2019-12-02",
  "author": {
      "name": "@skg17948541",
      "twitterIcon": "skg17948541.jpg",
      "qiitaUrl": "https://qiita.com/skg17948541",
      "twitterUrl": "https://twitter.com/skg17948541"
  },
  "title": {
      "ja": "本を色々な形の本棚に詰め込む",
      "en": "本を色々な形の本棚に詰め込む"
  },
  "articleUrl": "https://qiita.com/skg17948541/items/bd7dff8da0479a5330c8",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120301.jpg",
  "creationDate": "2019-12-03",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "パリピHoudiniロゴアニメーションとPDGでムービー出力",
      "en": "パリピHoudiniロゴアニメーションとPDGでムービー出力"
  },
  "articleUrl": "https://sugi-iggy.blogspot.com/2019/12/houdinipdg.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120401.jpg",
  "creationDate": "2019-12-04",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "HtoAを使ったAss/Alembicの利用方法",
      "en": "HtoAを使ったAss/Alembicの利用方法"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/71a0974092b6e9cb1872",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120501.jpg",
  "creationDate": "2019-12-05",
  "author": {
      "name": "@takavfx",
      "twitterIcon": "takavfx.jpg",
      "qiitaUrl": "https://qiita.com/takavfx",
      "twitterUrl": "https://twitter.com/takavfx"
  },
  "title": {
      "ja": "SideFX Labs Toolの新規のインストール方法、Package機能に関して検証してみる",
      "en": "SideFX Labs Toolの新規のインストール方法、Package機能に関して検証してみる"
  },
  "articleUrl": "https://qiita.com/takavfx/items/d1698b89df6fb1b86f9c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120601.jpg",
  "creationDate": "2019-12-06",
  "author": {
      "name": "@70_cg_art",
      "twitterIcon": "70_cg_art.jpg",
      "qiitaUrl": "https://qiita.com/70_cg_art",
      "twitterUrl": "https://twitter.com/70_cg_art"
  },
  "title": {
      "ja": "Houdiniで始めるPython",
      "en": "Houdiniで始めるPython"
  },
  "articleUrl": "https://qiita.com/70_cg_art/items/46dd9ca06bee4478c495",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120701.jpg",
  "creationDate": "2019-12-07",
  "author": {
      "name": "@yuya_torii",
      "twitterIcon": "yuya_torii.jpg",
      "qiitaUrl": "https://qiita.com/yuya_torii",
      "twitterUrl": "https://twitter.com/yuya_torii"
  },
  "title": {
      "ja": "Wedgeを中心にPDGの話まで",
      "en": "Wedgeを中心にPDGの話まで"
  },
  "articleUrl": "https://qiita.com/yuya_torii/items/2dfab15a4ad433a187b4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120801.jpg",
  "creationDate": "2019-12-08",
  "author": {
      "name": "@d658t",
      "twitterIcon": "d658t.jpg",
      "qiitaUrl": "https://qiita.com/d658t",
      "twitterUrl": "https://twitter.com/d658t"
  },
  "title": {
      "ja": "HDAにヘルプを付ける方法(Pythonスクリプトのおまけ付き)",
      "en": "HDAにヘルプを付ける方法(Pythonスクリプトのおまけ付き)"
  },
  "articleUrl": "https://qiita.com/d658t/items/1737cb4e820b45f28723",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120901.jpg",
  "creationDate": "2019-12-09",
  "author": {
      "name": "@PontaYamazato",
      "twitterIcon": "PontaYamazato.jpg",
      "qiitaUrl": "https://qiita.com/PontaYamazato",
      "twitterUrl": "https://twitter.com/PontaYamazato"
  },
  "title": {
      "ja": "今年のクリスマスカード",
      "en": "今年のクリスマスカード"
  },
  "articleUrl": "https://note.com/pontayamazato/n/n9c6953041ea8",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121001.jpg",
  "creationDate": "2019-12-10",
  "author": {
      "name": "@d658t",
      "twitterIcon": "d658t.jpg",
      "qiitaUrl": "https://qiita.com/d658t",
      "twitterUrl": "https://twitter.com/d658t"
  },
  "title": {
      "ja": "新しいバージョンで追加、更新されたノードを取得、作成する",
      "en": "新しいバージョンで追加、更新されたノードを取得、作成する"
  },
  "articleUrl": "https://qiita.com/d658t/items/33170d0e625d76effcde",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121101.jpg",
  "creationDate": "2019-12-11",
  "author": {
      "name": "@TF_siri",
      "twitterIcon": "TF_siri.jpg",
      "qiitaUrl": "https://qiita.com/TF_siri",
      "twitterUrl": "https://twitter.com/TF_siri"
  },
  "title": {
      "ja": "自己流自動生成方法",
      "en": "自己流自動生成方法"
  },
  "articleUrl": "https://qiita.com/TF_siri/items/14c6a2c87629e4cfe0f3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121201.jpg",
  "creationDate": "2019-12-12",
  "author": {
      "name": "@K240",
      "twitterIcon": "K240.jpg",
      "qiitaUrl": "https://qiita.com/K240",
      "twitterUrl": "https://twitter.com/K240"
  },
  "title": {
      "ja": "HDKでアニメーションをSOPに取り込む",
      "en": "HDKでアニメーションをSOPに取り込む"
  },
  "articleUrl": "https://qiita.com/K240/items/b0de7d3f440da836743e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121301.jpg",
  "creationDate": "2019-12-13",
  "author": {
      "name": "@tanitta",
      "twitterIcon": "tanitta.jpg",
      "qiitaUrl": "https://qiita.com/tanitta",
      "twitterUrl": "https://twitter.com/tanitta"
  },
  "title": {
      "ja": "普段使いで便利なHoudiniのSideFX LabのOperatorピックアップ",
      "en": "普段使いで便利なHoudiniのSideFX LabのOperatorピックアップ"
  },
  "articleUrl": "https://tanitta.hatenablog.com/entry/2019/12/13/153600?_ga=2.7954996.78206489.1576080953-730120998.1564028130",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121401.jpg",
  "creationDate": "2019-12-14",
  "author": {
      "name": "@takavfx",
      "twitterIcon": "takavfx.jpg",
      "qiitaUrl": "https://qiita.com/takavfx",
      "twitterUrl": "https://twitter.com/takavfx"
  },
  "title": {
      "ja": "Houdini を Python 3 でやる!!!",
      "en": "Houdini を Python 3 でやる!!!"
  },
  "articleUrl": "https://qiita.com/takavfx/items/a019427a1062b41fc8d6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121501.jpg",
  "creationDate": "2019-12-15",
  "author": {
      "name": "@m__a__",
      "twitterIcon": "m__a__.jpg",
      "qiitaUrl": "https://qiita.com/m__a__",
      "twitterUrl": "https://twitter.com/m__a__"
  },
  "title": {
      "ja": "ボリュームのポスト処理",
      "en": "ボリュームのポスト処理"
  },
  "articleUrl": "https://qiita.com/m__a__/items/bb6ed9f6dd0e735a2a5b",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121601.jpg",
  "creationDate": "2019-12-16",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "初心者向けチュートリアル動画をリリースした話",
      "en": "初心者向けチュートリアル動画をリリースした話"
  },
  "articleUrl": "https://www.kickbase.net/entry/houdini_basic_tutorial",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121701.jpg",
  "creationDate": "2019-12-17",
  "author": {
      "name": "@tsuka0245",
      "twitterIcon": "tsuka0245.jpg",
      "qiitaUrl": "https://qiita.com/tsuka0245",
      "twitterUrl": "https://twitter.com/tsuka0245"
  },
  "title": {
      "ja": "HDKでオリジナルのVEX関数を作る話",
      "en": "HDKでオリジナルのVEX関数を作る話"
  },
  "articleUrl": "https://qiita.com/tsuka0245/items/cdc28d0a3da0c813f74f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121801.jpg",
  "creationDate": "2019-12-18",
  "author": {
      "name": "@hasegawa_t",
      "twitterIcon": "hasegawa_t.jpg",
      "qiitaUrl": "https://qiita.com/hasegawa_t",
      "twitterUrl": "https://twitter.com/hasegawa_t"
  },
  "title": {
      "ja": "OpenCL SOPでグラフ力学シミュレーション",
      "en": "OpenCL SOPでグラフ力学シミュレーション"
  },
  "articleUrl": "https://qiita.com/hasegawa_t/items/94c4b086fb0b9bd003ce",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121901.jpg",
  "creationDate": "2019-12-19",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "HoudiniでPointCacheを作成・エクスポートしてUnityのVFXgraphに読み込んで使うフローの基礎解説",
      "en": "HoudiniでPointCacheを作成・エクスポートしてUnityのVFXgraphに読み込んで使うフローの基礎解説"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/e356cf4913b48900a0f6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122001.jpg",
  "creationDate": "2019-12-20",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "Houdini18 で追加された LOP ノードを調べてみた",
      "en": "Houdini18 で追加された LOP ノードを調べてみた"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/10_Houdini/11_SOLARIS/90_solaris_lop_node/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122101.jpg",
  "creationDate": "2019-12-21",
  "author": {
      "name": "@harayoki",
      "twitterIcon": "harayoki.jpg",
      "qiitaUrl": "https://qiita.com/harayoki",
      "twitterUrl": "https://twitter.com/harayoki"
  },
  "title": {
      "ja": "Houdini18のGoZ処理の仕組みを追う",
      "en": "Houdini18のGoZ処理の仕組みを追う"
  },
  "articleUrl": "https://qiita.com/harayoki/items/4c2e6aedf96112d55c55",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122201.jpg",
  "creationDate": "2019-12-22",
  "author": {
      "name": "@jhorikawa_err",
      "twitterIcon": "jhorikawa_err.jpg",
      "qiitaUrl": "https://qiita.com/jhorikawa_err",
      "twitterUrl": "https://twitter.com/jhorikawa_err"
  },
  "title": {
      "ja": "Houdiniでポワンカレディスク上のタイリング模様を作る",
      "en": "Houdiniでポワンカレディスク上のタイリング模様を作る"
  },
  "articleUrl": "https://qiita.com/jhorikawa_err/items/24785f6255ccf19296b3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122301.jpg",
  "creationDate": "2019-12-23",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "M@ya の Paint FX っぽいトゥーンアウトライン",
      "en": "M@ya の Paint FX っぽいトゥーンアウトライン"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2019/12/paintfx-outlines-in-houdini.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122401.jpg",
  "creationDate": "2019-12-24",
  "author": {
      "name": "@ijiVFX",
      "twitterIcon": "ijiVFX.jpg",
      "qiitaUrl": "https://qiita.com/ijiVFX",
      "twitterUrl": "https://twitter.com/ijiVFX"
  },
  "title": {
      "ja": "HoudiniのPresetについて",
      "en": "HoudiniのPresetについて"
  },
  "articleUrl": "https://qiita.com/ijiVFX/items/6be3e7850884c652ad9d",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122501.jpg",
  "creationDate": "2019-12-25",
  "author": {
      "name": "@towazumi",
      "twitterIcon": "towazumi.jpg",
      "qiitaUrl": "https://qiita.com/towazumi",
      "twitterUrl": "https://twitter.com/towazumi"
  },
  "title": {
      "ja": "ネットワークエディタにスクリプトショートカットメニューを表示する",
      "en": "ネットワークエディタにスクリプトショートカットメニューを表示する"
  },
  "articleUrl": "https://qiita.com/towazumi/items/3c87dd58376dbf4b4152",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}





,
{
  "thumbnailUrl": "2019120102.jpg",
  "creationDate": "2019-12-01",
  "author": {
      "name": "@sho7noka",
      "twitterIcon": "sho7noka.jpg",
      "qiitaUrl": "https://qiita.com/sho7noka",
      "twitterUrl": "https://twitter.com/sho7noka"
  },
  "title": {
      "ja": "VEX&VOP チートシート",
      "en": "VEX&VOP チートシート"
  },
  "articleUrl": "https://qiita.com/sho7noka/items/df7109f42d8e2cfce503",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120202.jpg",
  "creationDate": "2019-12-02",
  "author": {
      "name": "@MIN0NIUM",
      "twitterIcon": "MIN0NIUM.jpg",
      "qiitaUrl": "https://qiita.com/MIN0NIUM",
      "twitterUrl": "https://twitter.com/MIN0NIUM"
  },
  "title": {
      "ja": "Houdiniでパラメータを作る話",
      "en": "Houdiniでパラメータを作る話"
  },
  "articleUrl": "https://qiita.com/MIN0NIUM/items/e23a5b3b62b344b621f5",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120302.jpg",
  "creationDate": "2019-12-03",
  "author": {
      "name": "@mhpzlry0ftTQG1R",
      "twitterIcon": "mhpzlry0ftTQG1R.jpg",
      "qiitaUrl": "https://qiita.com/mhpzlry0ftTQG1R",
      "twitterUrl": "https://twitter.com/mhpzlry0ftTQG1R"
  },
  "title": {
      "ja": "Pythonでパラメータの値を移す",
      "en": "Pythonでパラメータの値を移す"
  },
  "articleUrl": "https://qiita.com/mhpzlry0ftTQG1R/items/eb8896958cf8d5cc210b",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120402.jpg",
  "creationDate": "2019-12-04",
  "author": {
      "name": "@h_kishimoto",
      "twitterIcon": "h_kishimoto.jpg",
      "qiitaUrl": "https://qiita.com/h_kishimoto",
      "twitterUrl": "https://twitter.com/h_kishimoto"
  },
  "title": {
      "ja": "\"見習い\"なので初級チュートリアルに積極的につまづいていく",
      "en": "\"見習い\"なので初級チュートリアルに積極的につまづいていく"
  },
  "articleUrl": "https://qiita.com/h_kishimoto/items/2004d8e920d9343c1c6a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120502.jpg",
  "creationDate": "2019-12-05",
  "author": {
      "name": "@hirapot",
      "twitterIcon": "hirapot.jpg",
      "qiitaUrl": "https://qiita.com/hirapot",
      "twitterUrl": "https://twitter.com/hirapot"
  },
  "title": {
      "ja": "Calabi Yau 多様体を作ってみよう",
      "en": "Calabi Yau 多様体を作ってみよう"
  },
  "articleUrl": "https://qiita.com/hirapot/items/4a7c467151d856338e5e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120602.jpg",
  "creationDate": "2019-12-06",
  "author": {
      "name": "@MIN0NIUM",
      "twitterIcon": "MIN0NIUM.jpg",
      "qiitaUrl": "https://qiita.com/MIN0NIUM",
      "twitterUrl": "https://twitter.com/MIN0NIUM"
  },
  "title": {
      "ja": "Houdini はじめてのBlock Begin/End",
      "en": "Houdini はじめてのBlock Begin/End"
  },
  "articleUrl": "https://qiita.com/MIN0NIUM/items/e7c94f3b3470dae642f6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120702.jpg",
  "creationDate": "2019-12-07",
  "author": {
      "name": "@takashiFujiyama",
      "twitterIcon": "takashiFujiyama.jpg",
      "qiitaUrl": "https://qiita.com/takashiFujiyama",
      "twitterUrl": "https://twitter.com/takashiFujiyama"
  },
  "title": {
      "ja": "ミスティーク変身エフェクト",
      "en": "ミスティーク変身エフェクト"
  },
  "articleUrl": "https://qiita.com/takashiFujiyama/items/31d881b3b2c0c05ddecb",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120802.jpg",
  "creationDate": "2019-12-08",
  "author": {
      "name": "@aiu_617",
      "twitterIcon": "aiu_617.jpg",
      "qiitaUrl": "https://qiita.com/aiu_617",
      "twitterUrl": "https://twitter.com/aiu_617"
  },
  "title": {
      "ja": "ちょっと躓いた時の対処法",
      "en": "ちょっと躓いた時の対処法"
  },
  "articleUrl": "https://qiita.com/aiu_617/items/1d87fb66947068a33d1b",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019120902.jpg",
  "creationDate": "2019-12-09",
  "author": {
      "name": "@MIN0NIUM",
      "twitterIcon": "MIN0NIUM.jpg",
      "qiitaUrl": "https://qiita.com/MIN0NIUM",
      "twitterUrl": "https://twitter.com/MIN0NIUM"
  },
  "title": {
      "ja": "はじめてのL-System",
      "en": "はじめてのL-System"
  },
  "articleUrl": "https://qiita.com/MIN0NIUM/items/79a5ab492b9eb44f11d4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019120902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121002.jpg",
  "creationDate": "2019-12-10",
  "author": {
      "name": "@yu_kita",
      "twitterIcon": "yu_kita.jpg",
      "qiitaUrl": "https://qiita.com/yu_kita",
      "twitterUrl": "https://twitter.com/yu_kita"
  },
  "title": {
      "ja": "対数螺旋をVEXでつくる",
      "en": "対数螺旋をVEXでつくる"
  },
  "articleUrl": "https://qiita.com/yu_kita/items/17ab5bd1caa5f7bb83e2",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121102.jpg",
  "creationDate": "2019-12-11",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "SOLARISでUSDファイルを開く話",
      "en": "SOLARISでUSDファイルを開く話"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/10_Houdini/11_SOLARIS/01_solaris_open_usd/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121202.jpg",
  "creationDate": "2019-12-12",
  "author": {
      "name": "@d658t",
      "twitterIcon": "d658t.jpg",
      "qiitaUrl": "https://qiita.com/d658t",
      "twitterUrl": "https://twitter.com/d658t"
  },
  "title": {
      "ja": "初心者向けノードサンプル集",
      "en": "初心者向けノードサンプル集"
  },
  "articleUrl": "https://qiita.com/d658t/items/1a44518523f8ffb14cd4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121302.jpg",
  "creationDate": "2019-12-13",
  "author": {
      "name": "@55hertz",
      "twitterIcon": "55hertz.jpg",
      "qiitaUrl": "https://qiita.com/55hertz",
      "twitterUrl": "https://twitter.com/55hertz"
  },
  "title": {
      "ja": "レイアウトの基本とカメラ設定",
      "en": "レイアウトの基本とカメラ設定"
  },
  "articleUrl": "https://qiita.com/55hertz/items/0998e1ae2a3ebf0a401a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121402.jpg",
  "creationDate": "2019-12-14",
  "author": {
      "name": "@egzao1o9_CG",
      "twitterIcon": "egzao1o9_CG.jpg",
      "qiitaUrl": "https://qiita.com/egzao1o9_CG",
      "twitterUrl": "https://twitter.com/egzao1o9_CG"
  },
  "title": {
      "ja": "プロシージャルにメッシュ変形",
      "en": "プロシージャルにメッシュ変形"
  },
  "articleUrl": "https://qiita.com/egzao1o9_CG/items/431eb40f1a9a52a3d924",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121502.jpg",
  "creationDate": "2019-12-15",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "この翻訳で許して (VELLUM CLOTH: TIPS &TRICKS)",
      "en": "この翻訳で許して (VELLUM CLOTH: TIPS &TRICKS)"
  },
  "articleUrl": "https://www.sidefx.com/ja/tutorials/vellum-cloth-tips-tricks/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121602.jpg",
  "creationDate": "2019-12-16",
  "author": {
      "name": "@okada_takuya",
      "twitterIcon": "okada_takuya.jpg",
      "qiitaUrl": "https://qiita.com/okada_takuya",
      "twitterUrl": "https://twitter.com/okada_takuya"
  },
  "title": {
      "ja": "Houdiniで鳥の群れを飛ばそう",
      "en": "Houdiniで鳥の群れを飛ばそう"
  },
  "articleUrl": "https://qiita.com/okada_takuya/items/42ab3fedefbb9b3a4710",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121702.jpg",
  "creationDate": "2019-12-17",
  "author": {
      "name": "@hirapot",
      "twitterIcon": "hirapot.jpg",
      "qiitaUrl": "https://qiita.com/hirapot",
      "twitterUrl": "https://twitter.com/hirapot"
  },
  "title": {
      "ja": "使える！と思ったこと、うっかり忘れていたこと 【役に立つかも？しれない集】",
      "en": "使える！と思ったこと、うっかり忘れていたこと 【役に立つかも？しれない集】"
  },
  "articleUrl": "https://qiita.com/hirapot/items/8dba483922b46920d3aa",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121802.jpg",
  "creationDate": "2019-12-18",
  "author": {
      "name": "@ogrew",
      "twitterIcon": "ogrew.jpg",
      "qiitaUrl": "https://qiita.com/ogrew",
      "twitterUrl": "https://twitter.com/ogrew"
  },
  "title": {
      "ja": "Houdiniに出会って半年くらいでやったこと",
      "en": "Houdiniに出会って半年くらいでやったこと"
  },
  "articleUrl": "https://taiga.hatenadiary.com/entry/2019/12/25/134717",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019121902.jpg",
  "creationDate": "2019-12-19",
  "author": {
      "name": "@sho7noka",
      "twitterIcon": "sho7noka.jpg",
      "qiitaUrl": "https://qiita.com/sho7noka",
      "twitterUrl": "https://twitter.com/sho7noka"
  },
  "title": {
      "ja": "HoudiniでVFXクラウドコンピューティング",
      "en": "HoudiniでVFXクラウドコンピューティング"
  },
  "articleUrl": "https://qiita.com/sho7noka/items/5f9c96b04e41c028cac8",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019121902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122002.jpg",
  "creationDate": "2019-12-20",
  "author": {
      "name": "@TaroOzaki",
      "twitterIcon": "TaroOzaki.jpg",
      "qiitaUrl": "https://qiita.com/TaroOzaki",
      "twitterUrl": "https://twitter.com/TaroOzaki"
  },
  "title": {
      "ja": "【第1版】階段のプロシージャルモデリング : Stairs Procedural Modeling",
      "en": "【第1版】階段のプロシージャルモデリング : Stairs Procedural Modeling"
  },
  "articleUrl": "https://qiita.com/TaroOzaki/items/f249ae4b5e8dc46f16f3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122102.jpg",
  "creationDate": "2019-12-21",
  "author": {
      "name": "@ts_bros",
      "twitterIcon": "ts_bros.jpg",
      "qiitaUrl": "https://qiita.com/ts_bros",
      "twitterUrl": "https://twitter.com/ts_bros"
  },
  "title": {
      "ja": "Scrach for FX RnDTASK",
      "en": "Scrach for FX RnDTASK"
  },
  "articleUrl": "https://qiita.com/ts_bros/items/fd10fa3d94d05d8d82cf",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122202.jpg",
  "creationDate": "2019-12-22",
  "author": {
      "name": "@shin_t_o_",
      "twitterIcon": "shin_t_o_.jpg",
      "qiitaUrl": "https://qiita.com/shin_t_o_",
      "twitterUrl": "https://twitter.com/shin_t_o_"
  },
  "title": {
      "ja": "Houdiniからトイドローン(Tello)を動かしてみる",
      "en": "Houdiniからトイドローン(Tello)を動かしてみる"
  },
  "articleUrl": "https://qiita.com/shin_t_o_/items/511fd74fcdd73b8176f6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122402.jpg",
  "creationDate": "2019-12-24",
  "author": {
      "name": "@ARTsak",
      "twitterIcon": "ARTsak.jpg",
      "qiitaUrl": "https://qiita.com/ARTsak",
      "twitterUrl": "https://twitter.com/ARTsak"
  },
  "title": {
      "ja": "Houdini初学の為に簡単に行きたいと思います+簡易ROCKgenerator",
      "en": "Houdini初学の為に簡単に行きたいと思います+簡易ROCKgenerator"
  },
  "articleUrl": "http://artsak666.hatenablog.com/entry/hadc",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2019122502.jpg",
  "creationDate": "2019-12-25",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "HoudiniでUV展開＆リグ入門",
      "en": "HoudiniでUV展開＆リグ入門"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/e15d53e88e9cc018d18f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2019122502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}

,
{
  "thumbnailUrl": "2020120101.jpg",
  "creationDate": "2020-12-01",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "Houdiniの新しいリギングとアニメーション：KineFX機能まとめ",
      "en": "Houdiniの新しいリギングとアニメーション：KineFX機能まとめ"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/cc4c7c529fed71f03df3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120201.jpg",
  "creationDate": "2020-12-02",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "オーナメントを通してプロシージャルに関する必須事項",
      "en": "オーナメントを通してプロシージャルに関する必須事項"
  },
  "articleUrl": "https://nullnode.wixsite.com/houdinipsalm/post/houdini-advent-calendar-2020-day-2th",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120301.jpg",
  "creationDate": "2020-12-03",
  "author": {
      "name": "@PontaYamazato",
      "twitterIcon": "PontaYamazato.jpg",
      "qiitaUrl": "https://qiita.com/PontaYamazato",
      "twitterUrl": "https://twitter.com/PontaYamazato"
  },
  "title": {
      "ja": "今年のカード",
      "en": "今年のカード"
  },
  "articleUrl": "https://note.com/pontayamazato/n/nafc634230d84",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120401.jpg",
  "creationDate": "2020-12-04",
  "author": {
      "name": "@mizunori",
      "twitterIcon": "mizunori.jpg",
      "qiitaUrl": "https://qiita.com/mizunori",
      "twitterUrl": "https://twitter.com/mizunori"
  },
  "title": {
      "ja": "Point Deformを使って破壊表現をしてみる",
      "en": "Point Deformを使って破壊表現をしてみる"
  },
  "articleUrl": "https://qiita.com/mizunori/items/d58661369e4e3cfc2fff",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120501.jpg",
  "creationDate": "2020-12-05",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "今年作ったHDAのご紹介をします",
      "en": "今年作ったHDAのご紹介をします"
  },
  "articleUrl": "https://www.kickbase.net/entry/my_hda",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120601.jpg",
  "creationDate": "2020-12-06",
  "author": {
      "name": "@TaroOzaki",
      "twitterIcon": "TaroOzaki.jpg",
      "qiitaUrl": "https://qiita.com/TaroOzaki",
      "twitterUrl": "https://twitter.com/TaroOzaki"
  },
  "title": {
      "ja": "ジオメトリからポリライン抽出あれこれ  -Various Methods to Extract Polyline from Geometry-",
      "en": "ジオメトリからポリライン抽出あれこれ  -Various Methods to Extract Polyline from Geometry-"
  },
  "articleUrl": "https://qiita.com/TaroOzaki/items/73d5b3d0d0bc0919828f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120701.jpg",
  "creationDate": "2020-12-07",
  "author": {
      "name": "@jhorikawa_err",
      "twitterIcon": "jhorikawa_err.jpg",
      "qiitaUrl": "https://qiita.com/jhorikawa_err",
      "twitterUrl": "https://twitter.com/jhorikawa_err"
  },
  "title": {
      "ja": "建築＋生物の大学の授業でHoudiniを使った話",
      "en": "建築＋生物の大学の授業でHoudiniを使った話"
  },
  "articleUrl": "https://qiita.com/jhorikawa_err/items/5e97ab9d8386aa47c1eb",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120801.jpg",
  "creationDate": "2020-12-08",
  "author": {
      "name": "@70_cg_art",
      "twitterIcon": "70_cg_art.jpg",
      "qiitaUrl": "https://qiita.com/70_cg_art",
      "twitterUrl": "https://twitter.com/70_cg_art"
  },
  "title": {
      "ja": "Houdiniで始めるGUIツール作成【PySide2】",
      "en": "Houdiniで始めるGUIツール作成【PySide2】"
  },
  "articleUrl": "https://qiita.com/70_cg_art/items/2cf6a4b82b23a0f303ad",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120901.jpg",
  "creationDate": "2020-12-09",
  "author": {
      "name": "@takaf51",
      "twitterIcon": "takaf51.jpg",
      "qiitaUrl": "https://qiita.com/takaf51",
      "twitterUrl": "https://twitter.com/takaf51"
  },
  "title": {
      "ja": "SolarisでRedshiftなどのサードパーティのレンダリングエンジンを使っている時でもHoudini GLで素早くViewに表示させる方法。",
      "en": "SolarisでRedshiftなどのサードパーティのレンダリングエンジンを使っている時でもHoudini GLで素早くViewに表示させる方法。"
  },
  "articleUrl": "https://qiita.com/takaf51/items/f53d84ae0a1e029c440a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121001.jpg",
  "creationDate": "2020-12-10",
  "author": {
      "name": "@towazumi",
      "twitterIcon": "towazumi.jpg",
      "qiitaUrl": "https://qiita.com/towazumi",
      "twitterUrl": "https://twitter.com/towazumi"
  },
  "title": {
      "ja": "Houdini HDKでpmxファイルを読み込むサンプル",
      "en": "Houdini HDKでpmxファイルを読み込むサンプル"
  },
  "articleUrl": "https://qiita.com/towazumi/items/de22b08fdd4330a69481",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121101.jpg",
  "creationDate": "2020-12-11",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "使ってはいけないstamp!",
      "en": "使ってはいけないstamp!"
  },
  "articleUrl": "https://sugi-iggy.blogspot.com/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121201.jpg",
  "creationDate": "2020-12-12",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "SOLARISでUSDアセットを作る",
      "en": "SOLARISでUSDアセットを作る"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/05_DCCTool/10_Houdini/11_SOLARIS/13_create_usdAssets_01/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121301.jpg",
  "creationDate": "2020-12-13",
  "author": {
      "name": "@55hertz",
      "twitterIcon": "55hertz.jpg",
      "qiitaUrl": "https://qiita.com/55hertz",
      "twitterUrl": "https://twitter.com/55hertz"
  },
  "title": {
      "ja": "Solaris,USD,instancerを使った作例(.hip)",
      "en": "Solaris,USD,instancerを使った作例(.hip)"
  },
  "articleUrl": "https://qiita.com/55hertz/items/2c6f5e7cead95ef62064",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121401.jpg",
  "creationDate": "2020-12-14",
  "author": {
      "name": "@talkyren",
      "twitterIcon": "talkyren.jpg",
      "qiitaUrl": "https://qiita.com/talkyren",
      "twitterUrl": "https://twitter.com/talkyren"
  },
  "title": {
      "ja": "HoudiniのVEXを利用したヒガンバナの手続き型生成の一例 | An example of procedural generation of Lycoris radiata using VEX in Houdini",
      "en": "HoudiniのVEXを利用したヒガンバナの手続き型生成の一例 | An example of procedural generation of Lycoris radiata using VEX in Houdini"
  },
  "articleUrl": "https://qiita.com/talkyren/items/4b6219c0ce258e1c9904",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121501.jpg",
  "creationDate": "2020-12-15",
  "author": {
      "name": "@procedural_design",
      "twitterIcon": "procedural_design.jpg",
      "qiitaUrl": "https://qiita.com/procedural_design",
      "twitterUrl": "https://twitter.com/procedural_design"
  },
  "title": {
      "ja": "L-SYSTEM 2020++",
      "en": "L-SYSTEM 2020++"
  },
  "articleUrl": "https://qiita.com/procedural_design/items/a27b38e862bcfcb2f09e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121601.jpg",
  "creationDate": "2020-12-16",
  "author": {
      "name": "@TF_siri",
      "twitterIcon": "TF_siri.jpg",
      "qiitaUrl": "https://qiita.com/TF_siri",
      "twitterUrl": "https://twitter.com/TF_siri"
  },
  "title": {
      "ja": "お茶を飲もう",
      "en": "お茶を飲もう"
  },
  "articleUrl": "https://qiita.com/TF_siri/items/972d723e221a849575bf",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121701.jpg",
  "creationDate": "2020-12-17",
  "author": {
      "name": "@junichinakano",
      "twitterIcon": "junichinakano.jpg",
      "qiitaUrl": "https://qiita.com/junichinakano",
      "twitterUrl": "https://twitter.com/junichinakano"
  },
  "title": {
      "ja": "測地線について",
      "en": "測地線について"
  },
  "articleUrl": "https://qiita.com/junichinakano/items/8617581e12d1ace6f98a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121801.jpg",
  "creationDate": "2020-12-18",
  "author": {
      "name": "@tsuka0245",
      "twitterIcon": "tsuka0245.jpg",
      "qiitaUrl": "https://qiita.com/tsuka0245",
      "twitterUrl": "https://twitter.com/tsuka0245"
  },
  "title": {
      "ja": "DOP Solverをつくる",
      "en": "DOP Solverをつくる"
  },
  "articleUrl": "https://qiita.com/tsuka0245/items/c85ea3f5e678e6b72a4f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121901.jpg",
  "creationDate": "2020-12-19",
  "author": {
      "name": "@dicepastoso",
      "twitterIcon": "dicepastoso.jpg",
      "qiitaUrl": "https://qiita.com/dicepastoso",
      "twitterUrl": "https://twitter.com/dicepastoso"
  },
  "title": {
      "ja": "MOPs(Motion Operator)の簡単なご紹介",
      "en": "MOPs(Motion Operator)の簡単なご紹介"
  },
  "articleUrl": "https://qiita.com/dicepastoso/items/433d5f45c2a85960a038",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122001.jpg",
  "creationDate": "2020-12-20",
  "author": {
      "name": "@egzao1o9_CG",
      "twitterIcon": "egzao1o9_CG.jpg",
      "qiitaUrl": "https://qiita.com/egzao1o9_CG",
      "twitterUrl": "https://twitter.com/egzao1o9_CG"
  },
  "title": {
      "ja": "（]ミズクラゲ（]ミ （]彡 （]ミ （]彡（]ミ",
      "en": "（]ミズクラゲ（]ミ （]彡 （]ミ （]彡（]ミ"
  },
  "articleUrl": "https://qiita.com/egzao1o9_CG/items/34007d1ff59209888733",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122101.jpg",
  "creationDate": "2020-12-21",
  "author": {
      "name": "@tanitta",
      "twitterIcon": "tanitta.jpg",
      "qiitaUrl": "https://qiita.com/tanitta",
      "twitterUrl": "https://twitter.com/tanitta"
  },
  "title": {
      "ja": "HoudiniによるプロシージャルUnityプロジェクト",
      "en": "HoudiniによるプロシージャルUnityプロジェクト"
  },
  "articleUrl": "https://tanitta.hatenablog.com/entry/2020/12/21/230403",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122201.jpg",
  "creationDate": "2020-12-22",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "炎プロップ作成シーン配布＆解説",
      "en": "炎プロップ作成シーン配布＆解説"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/39573c3d0302d2d58f33",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122301.jpg",
  "creationDate": "2020-12-23",
  "author": {
      "name": "@yu_nnnnnnnn",
      "twitterIcon": "yu_nnnnnnnn.jpg",
      "qiitaUrl": "https://qiita.com/yu_nnnnnnnn",
      "twitterUrl": "https://twitter.com/yu_nnnnnnnn"
  },
  "title": {
      "ja": "オーラ系エフェクトのアプローチ",
      "en": "オーラ系エフェクトのアプローチ"
  },
  "articleUrl": "https://wakumoku.com/2020/12/23/%e3%82%aa%e3%83%bc%e3%83%a9%e7%b3%bb%e3%82%a8%e3%83%95%e3%82%a7%e3%82%af%e3%83%88%e3%81%ae%e3%82%a2%e3%83%97%e3%83%ad%e3%83%bc%e3%83%81/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122401.jpg",
  "creationDate": "2020-12-24",
  "author": {
      "name": "@kajitaj63b3",
      "twitterIcon": "kajitaj63b3.jpg",
      "qiitaUrl": "https://qiita.com/kajitaj63b3",
      "twitterUrl": "https://twitter.com/kajitaj63b3"
  },
  "title": {
      "ja": "【Houdini】1ジオメトリーから階層付きFBXを出力するツールの開発",
      "en": "【Houdini】1ジオメトリーから階層付きFBXを出力するツールの開発"
  },
  "articleUrl": "https://qiita.com/kajitaj63b3/items/2aec4406cd87affcef4b",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122501.jpg",
  "creationDate": "2020-12-25",
  "author": {
      "name": "@radio9997",
      "twitterIcon": "radio9997.jpg",
      "qiitaUrl": "https://qiita.com/radio9997",
      "twitterUrl": "https://twitter.com/radio9997"
  },
  "title": {
      "ja": "リアルタイム向けにこんもりした山を作る",
      "en": "リアルタイム向けにこんもりした山を作る"
  },
  "articleUrl": "https://qiita.com/radio9997/items/b614bfb1481f99925ff0",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}




,{
  "thumbnailUrl": "2020120102.jpg",
  "creationDate": "2020-12-01",
  "author": {
      "name": "@mhpzlry0ftTQG1R",
      "twitterIcon": "mhpzlry0ftTQG1R.jpg",
      "qiitaUrl": "https://qiita.com/mhpzlry0ftTQG1R",
      "twitterUrl": "https://twitter.com/mhpzlry0ftTQG1R"
  },
  "title": {
      "ja": "Houdiniでドット絵作成",
      "en": "Houdiniでドット絵作成"
  },
  "articleUrl": "https://qiita.com/mhpzlry0ftTQG1R/items/dcd0d28f07736bd513e1",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120202.jpg",
  "creationDate": "2020-12-02",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "諦めたSOPの事：いろどりを増やせそうなSOPだったから。",
      "en": "諦めたSOPの事：いろどりを増やせそうなSOPだったから。"
  },
  "articleUrl": "https://qiita.com/Alidade/items/7616e6d718182c1d3778",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120302.jpg",
  "creationDate": "2020-12-03",
  "author": {
      "name": "@ijiVFX",
      "twitterIcon": "ijiVFX.jpg",
      "qiitaUrl": "https://qiita.com/ijiVFX",
      "twitterUrl": "https://twitter.com/ijiVFX"
  },
  "title": {
      "ja": "君はお隣さん？一番近い点？それとも座標？",
      "en": "君はお隣さん？一番近い点？それとも座標？"
  },
  "articleUrl": "https://qiita.com/ijiVFX/items/0e36f17ddb690ab615eb",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120402.jpg",
  "creationDate": "2020-12-04",
  "author": {
      "name": "@SaladMix",
      "twitterIcon": "SaladMix.jpg",
      "qiitaUrl": "https://qiita.com/SaladMix",
      "twitterUrl": "https://twitter.com/SaladMix"
  },
  "title": {
      "ja": "HOUDINIでSkin weightのクリーンアップ。",
      "en": "HOUDINIでSkin weightのクリーンアップ。"
  },
  "articleUrl": "https://qiita.com/SaladMix/items/7a9e1aa348a3a3b6b9c4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120502.jpg",
  "creationDate": "2020-12-05",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "LOPのVEXで遊んでみます",
      "en": "LOPのVEXで遊んでみます"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/10_Houdini/11_SOLARIS/09_solaris_vex/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120602.jpg",
  "creationDate": "2020-12-06",
  "author": {
      "name": "@Boxsui",
      "twitterIcon": "Boxsui.jpg",
      "qiitaUrl": "https://qiita.com/Boxsui",
      "twitterUrl": "https://twitter.com/Boxsui"
  },
  "title": {
      "ja": "Houdiniで社寺建築！！！～触って3日の感触と展望～",
      "en": "Houdiniで社寺建築！！！～触って3日の感触と展望～"
  },
  "articleUrl": "https://qiita.com/Boxsui/items/35c68c00a05224d80f2c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120802.jpg",
  "creationDate": "2020-12-08",
  "author": {
      "name": "@kkcg",
      "twitterIcon": "kkcg.jpg",
      "qiitaUrl": "https://qiita.com/kkcg",
      "twitterUrl": "https://twitter.com/kkcg"
  },
  "title": {
      "ja": "おじいさんの亡霊を制作する上でつまずいたところなど",
      "en": "おじいさんの亡霊を制作する上でつまずいたところなど"
  },
  "articleUrl": "https://qiita.com/kkcg/items/23a85d6ff248bfbc88b0",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020120902.jpg",
  "creationDate": "2020-12-09",
  "author": {
      "name": "@pky_blog",
      "twitterIcon": "pky_blog.jpg",
      "qiitaUrl": "https://qiita.com/pky_blog",
      "twitterUrl": "https://twitter.com/pky_blog"
  },
  "title": {
      "ja": "SideFX Labs / Substanceプラグインの基本的なところ",
      "en": "SideFX Labs / Substanceプラグインの基本的なところ"
  },
  "articleUrl": "http://pkyblog.hatenablog.com/entry/2020/12/09/065721",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020120902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121002.jpg",
  "creationDate": "2020-12-10",
  "author": {
      "name": "@ijiVFX",
      "twitterIcon": "ijiVFX.jpg",
      "qiitaUrl": "https://qiita.com/ijiVFX",
      "twitterUrl": "https://twitter.com/ijiVFX"
  },
  "title": {
      "ja": "たまにはWrangleやVOPのRun Overに感謝しても良いと思います！",
      "en": "たまにはWrangleやVOPのRun Overに感謝しても良いと思います！"
  },
  "articleUrl": "https://qiita.com/ijiVFX/items/2d617ea49c8f1bf4cfab",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121102.jpg",
  "creationDate": "2020-12-11",
  "author": {
      "name": "@tI30961587",
      "twitterIcon": "tI30961587.jpg",
      "qiitaUrl": "https://qiita.com/tI30961587",
      "twitterUrl": "https://twitter.com/tI30961587"
  },
  "title": {
      "ja": "simon の Falling Tool を参考に斜方投射します",
      "en": "simon の Falling Tool を参考に斜方投射します"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/900004726423-%E6%96%9C%E6%96%B9%E6%8A%95%E5%B0%84%E3%83%84%E3%83%BC%E3%83%AB",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121202.jpg",
  "creationDate": "2020-12-12",
  "author": {
      "name": "@bechica",
      "twitterIcon": "bechica.jpg",
      "qiitaUrl": "https://qiita.com/bechica",
      "twitterUrl": "https://twitter.com/bechica"
  },
  "title": {
      "ja": "出る順! Houdini Nodes",
      "en": "出る順! Houdini Nodes"
  },
  "articleUrl": "https://qiita.com/bechica/items/4fb7d46d9268154a8233",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121302.jpg",
  "creationDate": "2020-12-13",
  "author": {
      "name": "@sho7noka",
      "twitterIcon": "sho7noka.jpg",
      "qiitaUrl": "https://qiita.com/sho7noka",
      "twitterUrl": "https://twitter.com/sho7noka"
  },
  "title": {
      "ja": "Houdini Engine API Python をさくっと書いてみる",
      "en": "Houdini Engine API Python をさくっと書いてみる"
  },
  "articleUrl": "https://qiita.com/sho7noka/items/f1c3045fcc6b6f8d306c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121402.jpg",
  "creationDate": "2020-12-14",
  "author": {
      "name": "@sho7noka",
      "twitterIcon": "sho7noka.jpg",
      "qiitaUrl": "https://qiita.com/sho7noka",
      "twitterUrl": "https://twitter.com/sho7noka"
  },
  "title": {
      "ja": "Houdini + LiDARを使った3Dスキャンを試す",
      "en": "Houdini + LiDARを使った3Dスキャンを試す"
  },
  "articleUrl": "https://qiita.com/sho7noka/items/5bca51b6cceabc0c399f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121502.jpg",
  "creationDate": "2020-12-15",
  "author": {
      "name": "@pky_blog",
      "twitterIcon": "pky_blog.jpg",
      "qiitaUrl": "https://qiita.com/pky_blog",
      "twitterUrl": "https://twitter.com/pky_blog"
  },
  "title": {
      "ja": "SideFX Labs / Substanceプラグイン応用と実例(hip配布あり)",
      "en": "SideFX Labs / Substanceプラグイン応用と実例(hip配布あり)"
  },
  "articleUrl": "http://pkyblog.hatenablog.com/entry/2020/12/15/122030",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121602.jpg",
  "creationDate": "2020-12-16",
  "author": {
      "name": "@okada_takuya",
      "twitterIcon": "okada_takuya.jpg",
      "qiitaUrl": "https://qiita.com/okada_takuya",
      "twitterUrl": "https://twitter.com/okada_takuya"
  },
  "title": {
      "ja": "Houdini18.5 新ノードを使った作例！～従来の方法と一緒に～",
      "en": "Houdini18.5 新ノードを使った作例！～従来の方法と一緒に～"
  },
  "articleUrl": "https://qiita.com/okada_takuya/items/0243bc0ef38f2761eef3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121702.jpg",
  "creationDate": "2020-12-17",
  "author": {
      "name": "@YoshihiroMiura",
      "twitterIcon": "YoshihiroMiura.jpg",
      "qiitaUrl": "https://qiita.com/YoshihiroMiura",
      "twitterUrl": "https://twitter.com/YoshihiroMiura"
  },
  "title": {
      "ja": "Houdini18.5 RBD Destructionの紹介",
      "en": "Houdini18.5 RBD Destructionの紹介"
  },
  "articleUrl": "https://houdinifx.jp/blog/houdini-18-5%e3%81%a7%e3%81%ae%e3%82%ac%e3%82%a4%e3%83%89%e3%82%b7%e3%83%9f%e3%83%a5%e3%83%ac%e3%83%bc%e3%82%b7%e3%83%a7%e3%83%b3/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121802.jpg",
  "creationDate": "2020-12-18",
  "author": {
      "name": "@Muteriku",
      "twitterIcon": "Muteriku.jpg",
      "qiitaUrl": "https://qiita.com/Muteriku",
      "twitterUrl": "https://twitter.com/Muteriku"
  },
  "title": {
      "ja": "TOPのアトリビュートの扱い方入門",
      "en": "TOPのアトリビュートの扱い方入門"
  },
  "articleUrl": "https://qiita.com/Muteriku/items/809694f64f8ac35f6401",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020121902.jpg",
  "creationDate": "2020-12-19",
  "author": {
      "name": "@yutaokuyam",
      "twitterIcon": "yutaokuyam.jpg",
      "qiitaUrl": "https://qiita.com/yutaokuyam",
      "twitterUrl": "https://twitter.com/yutaokuyam"
  },
  "title": {
      "ja": "Solverを使って、Creative Codingの関数に対応づけてHoudiniで作ってみる",
      "en": "Solverを使って、Creative Codingの関数に対応づけてHoudiniで作ってみる"
  },
  "articleUrl": "https://qiita.com/yutaokuyam/items/c9201effa58f385868aa",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020121902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122002.jpg",
  "creationDate": "2020-12-20",
  "author": {
      "name": "@nk_wip",
      "twitterIcon": "nk_wip.jpg",
      "qiitaUrl": "https://qiita.com/nk_wip",
      "twitterUrl": "https://twitter.com/nk_wip"
  },
  "title": {
      "ja": "Houdiniでアウトプットして楽しもう",
      "en": "Houdiniでアウトプットして楽しもう"
  },
  "articleUrl": "https://qiita.com/nk_wip/items/987eac6c31368b1c88fd",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122102.jpg",
  "creationDate": "2020-12-21",
  "author": {
      "name": "@komakinex",
      "twitterIcon": "komakinex.jpg",
      "qiitaUrl": "https://qiita.com/komakinex",
      "twitterUrl": "https://twitter.com/komakinex"
  },
  "title": {
      "ja": "HOULY Daily Challenge2020で作ったものまとめ Day1～Day10",
      "en": "HOULY Daily Challenge2020で作ったものまとめ Day1～Day10"
  },
  "articleUrl": "https://qiita.com/komakinex/items/e7dd85329661c1517b46",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122202.jpg",
  "creationDate": "2020-12-22",
  "author": {
      "name": "@shin_t_o_",
      "twitterIcon": "shin_t_o_.jpg",
      "qiitaUrl": "https://qiita.com/shin_t_o_",
      "twitterUrl": "https://twitter.com/shin_t_o_"
  },
  "title": {
      "ja": "VEXでCFDに入門してみる",
      "en": "VEXでCFDに入門してみる"
  },
  "articleUrl": "https://qiita.com/shin_t_o_/items/ba5fe7f7bac9a8022db0",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122302.jpg",
  "creationDate": "2020-12-23",
  "author": {
      "name": "@okada_takuya",
      "twitterIcon": "okada_takuya.jpg",
      "qiitaUrl": "https://qiita.com/okada_takuya",
      "twitterUrl": "https://twitter.com/okada_takuya"
  },
  "title": {
      "ja": "Houdiniで街のある景観をつくる！",
      "en": "Houdiniで街のある景観をつくる！"
  },
  "articleUrl": "https://qiita.com/okada_takuya/items/ac2e07d5892b418c4cfa",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122402.jpg",
  "creationDate": "2020-12-24",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "AMD Radeon ProRender 導入",
      "en": "AMD Radeon ProRender 導入"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2020/12/amd-prorender.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2020122502.jpg",
  "creationDate": "2020-12-25",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "KineFX Part2：MotionClipアニメーション入門",
      "en": "KineFX Part2：MotionClipアニメーション入門"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/1ba0c8844c4d51b9878e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2020122502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}







,
{
  "thumbnailUrl": "2021120101.jpg",
  "creationDate": "2021-12-01",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "フェイシャルキャプチャ― in Houdini",
      "en": "フェイシャルキャプチャ― in Houdini"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/271501cbeea78ee705ab",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120201.jpg",
  "creationDate": "2021-12-02",
  "author": {
      "name": "@shop_0761",
      "twitterIcon": "shop_0761.jpg",
      "qiitaUrl": "https://qiita.com/shop_0761",
      "twitterUrl": "https://twitter.com/shop_0761"
  },
  "title": {
      "ja": "SOP~TOPまでのワークフロー的なやつをかきます",
      "en": "SOP~TOPまでのワークフロー的なやつをかきます"
  },
  "articleUrl": "https://shop-0761.hatenablog.com/entry/2021/12/02/120000",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120301.jpg",
  "creationDate": "2021-12-03",
  "author": {
      "name": "@PontaYamazato",
      "twitterIcon": "PontaYamazato.jpg",
      "qiitaUrl": "https://qiita.com/PontaYamazato",
      "twitterUrl": "https://twitter.com/PontaYamazato"
  },
  "title": {
      "ja": "今年のカード",
      "en": "今年のカード"
  },
  "articleUrl": "https://note.com/pontayamazato/n/n9a01614259b6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120401.jpg",
  "creationDate": "2021-12-04",
  "author": {
      "name": "@core_aoi",
      "twitterIcon": "core_aoi.jpg",
      "qiitaUrl": "https://qiita.com/core_aoi",
      "twitterUrl": "https://twitter.com/core_aoi"
  },
  "title": {
      "ja": "実践 Houdini Engine for Unity",
      "en": "実践 Houdini Engine for Unity"
  },
  "articleUrl": "https://note.com/aoi/n/n8fbfd54c349f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120501.jpg",
  "creationDate": "2021-12-05",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "Houdini19 Karma 初見所感・備忘録・Tips",
      "en": "Houdini19 Karma 初見所感・備忘録・Tips"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/3c8fc415c4349d9f2c43",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120601.jpg",
  "creationDate": "2021-12-06",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "複数入力に対しPackするツールを作った話",
      "en": "複数入力に対しPackするツールを作った話"
  },
  "articleUrl": "https://www.kickbase.net/entry/multi_packer",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120701.jpg",
  "creationDate": "2021-12-07",
  "author": {
      "name": "@kurosawa",
      "twitterIcon": "kurosawa.jpg",
      "qiitaUrl": "https://qiita.com/kurosawa",
      "twitterUrl": "https://twitter.com/kurosawa"
  },
  "title": {
      "ja": "Houdini Engine for Unreal Engine ことはじめ",
      "en": "Houdini Engine for Unreal Engine ことはじめ"
  },
  "articleUrl": "https://note.com/thesaurus/n/ne761f1c02fb0",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120801.jpg",
  "creationDate": "2021-12-08",
  "author": {
      "name": "@70_cg_art",
      "twitterIcon": "70_cg_art.jpg",
      "qiitaUrl": "https://qiita.com/70_cg_art",
      "twitterUrl": "https://twitter.com/70_cg_art"
  },
  "title": {
      "ja": "チュートリアルの履修が楽になるフォルダ構成",
      "en": "チュートリアルの履修が楽になるフォルダ構成"
  },
  "articleUrl": "https://qiita.com/70_cg_art/items/9248033d1e542499d297",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120901.jpg",
  "creationDate": "2021-12-09",
  "author": {
      "name": "@daisea3e1203",
      "twitterIcon": "daisea3e1203.jpg",
      "qiitaUrl": "https://qiita.com/daisea3e1203",
      "twitterUrl": "https://twitter.com/daisea3e1203"
  },
  "title": {
      "ja": "Rig PoseノードからHDAへの大量のパラメータ追加を楽に行う",
      "en": "Rig PoseノードからHDAへの大量のパラメータ追加を楽に行う"
  },
  "articleUrl": "https://qiita.com/daisea3e1203/items/1537bb436987b5fd55eb",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121001.jpg",
  "creationDate": "2021-12-10",
  "author": {
      "name": "@tanitta",
      "twitterIcon": "tanitta.jpg",
      "qiitaUrl": "https://qiita.com/tanitta",
      "twitterUrl": "https://twitter.com/tanitta"
  },
  "title": {
      "ja": "HoudiniでPythonの静的型検査をやってみる",
      "en": "HoudiniでPythonの静的型検査をやってみる"
  },
  "articleUrl": "https://tanitta.hatenablog.com/entry/2021/12/10/191729?_ga=2.210698640.442893257.1639126137-730120998.1564028130",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121101.jpg",
  "creationDate": "2021-12-11",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "今年Houdini関係で登壇して公開した資料まとめ",
      "en": "今年Houdini関係で登壇して公開した資料まとめ"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/1b7284c61ad4b2b461f9",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121201.jpg",
  "creationDate": "2021-12-12",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "ComponentBuilderで遊ぼう",
      "en": "ComponentBuilderで遊ぼう"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/05_DCCTool/10_Houdini/11_SOLARIS/16_component_builder/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121301.jpg",
  "creationDate": "2021-12-13",
  "author": {
      "name": "@55hertz",
      "twitterIcon": "55hertz.jpg",
      "qiitaUrl": "https://qiita.com/55hertz",
      "twitterUrl": "https://twitter.com/55hertz"
  },
  "title": {
      "ja": "Mixamo to Cascadeur to Houdini（KineFX）モーション",
      "en": "Mixamo to Cascadeur to Houdini（KineFX）モーション"
  },
  "articleUrl": "https://qiita.com/55hertz/items/167628f6e4df2683f07f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121401.jpg",
  "creationDate": "2021-12-14",
  "author": {
      "name": "@talkyren",
      "twitterIcon": "talkyren.jpg",
      "qiitaUrl": "https://qiita.com/talkyren",
      "twitterUrl": "https://twitter.com/talkyren"
  },
  "title": {
      "ja": "HoudiniのVEXを用いた雪の結晶の生成シミュレーションの一例 | An example of snowflake growth simulation using VEX in Houdini",
      "en": "HoudiniのVEXを用いた雪の結晶の生成シミュレーションの一例 | An example of snowflake growth simulation using VEX in Houdini"
  },
  "articleUrl": "https://qiita.com/talkyren/items/1b806c8d28fa8cbd2ebe",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121501.jpg",
  "creationDate": "2021-12-15",
  "author": {
      "name": "@YuriSerizawa",
      "twitterIcon": "YuriSerizawa.jpg",
      "qiitaUrl": "https://qiita.com/YuriSerizawa",
      "twitterUrl": "https://twitter.com/YuriSerizawa"
  },
  "title": {
      "ja": "[UE4]Houdini EngineにEUWを組み合わせてちょっと使いやすくしてみる",
      "en": "[UE4]Houdini EngineにEUWを組み合わせてちょっと使いやすくしてみる"
  },
  "articleUrl": "https://qiita.com/YuriSerizawa/items/726395ad0968f22a99ef",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121601.jpg",
  "creationDate": "2021-12-16",
  "author": {
      "name": "@TF_siri",
      "twitterIcon": "TF_siri.jpg",
      "qiitaUrl": "https://qiita.com/TF_siri",
      "twitterUrl": "https://twitter.com/TF_siri"
  },
  "title": {
      "ja": "水に濡れて張り付いて透ける布",
      "en": "水に濡れて張り付いて透ける布"
  },
  "articleUrl": "https://qiita.com/TF_siri/items/e203ecfbcb0a772786a4",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121701.jpg",
  "creationDate": "2021-12-17",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "特定の方向からオイラー角を求める",
      "en": "特定の方向からオイラー角を求める"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/55be3f432783fc979b16",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121801.jpg",
  "creationDate": "2021-12-18",
  "author": {
      "name": "@yohanashima",
      "twitterIcon": "yohanashima.jpg",
      "qiitaUrl": "https://qiita.com/yohanashima",
      "twitterUrl": "https://twitter.com/yohanashima"
  },
  "title": {
      "ja": "Geometry ShaderをSOPで再現してみる",
      "en": "Geometry ShaderをSOPで再現してみる"
  },
  "articleUrl": "https://heyyocg.com/geometry-shader-kind-houdini-sop/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121901.jpg",
  "creationDate": "2021-12-19",
  "author": {
      "name": "@TrsNium",
      "twitterIcon": "TrsNium.jpg",
      "qiitaUrl": "https://qiita.com/TrsNium",
      "twitterUrl": "https://twitter.com/TrsNium"
  },
  "title": {
      "ja": "HoudiniでWireにディテールを与える",
      "en": "HoudiniでWireにディテールを与える"
  },
  "articleUrl": "https://qiita.com/TrsNium/items/729f57764007e7360e68",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122001.jpg",
  "creationDate": "2021-12-20",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "ぶっ刺しオブジェクトをブレンドする",
      "en": "ぶっ刺しオブジェクトをブレンドする"
  },
  "articleUrl": "https://sugi-iggy.blogspot.com/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122101.jpg",
  "creationDate": "2021-12-21",
  "author": {
      "name": "@yu_nnnnnnnn",
      "twitterIcon": "yu_nnnnnnnn.jpg",
      "qiitaUrl": "https://qiita.com/yu_nnnnnnnn",
      "twitterUrl": "https://twitter.com/yu_nnnnnnnn"
  },
  "title": {
      "ja": "TextureSheetsの解説と検証していきます",
      "en": "TextureSheetsの解説と検証していきます"
  },
  "articleUrl": "https://wakumoku.com/2021/12/19/texture-sheets%e3%82%92%e6%a4%9c%e8%a8%bc%e3%81%97%e3%81%a6%e3%81%bf%e3%82%8b/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122201.jpg",
  "creationDate": "2021-12-22",
  "author": {
      "name": "@Satsuki-Sensei",
      "twitterIcon": "Satsuki-Sensei.jpg",
      "qiitaUrl": "https://qiita.com/Satsuki-Sensei",
      "twitterUrl": "https://twitter.com/Satsuki-Sensei"
  },
  "title": {
      "ja": "Pixel Wrangleを発見しました",
      "en": "Pixel Wrangleを発見しました"
  },
  "articleUrl": "https://qiita.com/Satsuki-Sensei/items/29fc51b364e7deee546a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122301.jpg",
  "creationDate": "2021-12-23",
  "author": {
      "name": "@taichi-i",
      "twitterIcon": "taichi-i.jpg",
      "qiitaUrl": "https://qiita.com/taichi-i",
      "twitterUrl": "https://twitter.com/taichi-i"
  },
  "title": {
      "ja": "Python State Info Panel について初歩的な確認",
      "en": "Python State Info Panel について初歩的な確認"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/4411665478041",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122401.jpg",
  "creationDate": "2021-12-24",
  "author": {
      "name": "@ts_bros",
      "twitterIcon": "ts_bros.jpg",
      "qiitaUrl": "https://qiita.com/ts_bros",
      "twitterUrl": "https://twitter.com/ts_bros"
  },
  "title": {
      "ja": "vegetation modeling&tree_rigの紹介",
      "en": "vegetation modeling&tree_rigの紹介"
  },
  "articleUrl": "https://msjbinc.blogspot.com/2021/12/startup-vegetation-modeling-tree-rig.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122501.jpg",
  "creationDate": "2021-12-25",
  "author": {
      "name": "@procedural_design",
      "twitterIcon": "procedural_design.jpg",
      "qiitaUrl": "https://qiita.com/procedural_design",
      "twitterUrl": "https://twitter.com/procedural_design"
  },
  "title": {
      "ja": "Procedural Hard Surface ModelingのためのWorley noiseの実装",
      "en": "Procedural Hard Surface ModelingのためのWorley noiseの実装"
  },
  "articleUrl": "https://qiita.com/procedural_design/items/d7689f0074c4a9cb5927",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}






,{
  "thumbnailUrl": "2021120102.jpg",
  "creationDate": "2021-12-01",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "簡単なプロシージャル電柱",
      "en": "簡単なプロシージャル電柱"
  },
  "articleUrl": "https://nullnode.wixsite.com/houdinipsalm/post/houdini-advent-calendar-2021-day-1st",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120202.jpg",
  "creationDate": "2021-12-02",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "InlineUSDの使い方",
      "en": "InlineUSDの使い方"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/10_Houdini/11_SOLARIS/15_inline_usd/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120302.jpg",
  "creationDate": "2021-12-03",
  "author": {
      "name": "@kei_iketani",
      "twitterIcon": "kei_iketani.jpg",
      "qiitaUrl": "https://qiita.com/kei_iketani",
      "twitterUrl": "https://twitter.com/kei_iketani"
  },
  "title": {
      "ja": "Houdini ApprenticeからMayaにオブジェクトを読み込む裏ワザ！（修正済み）",
      "en": "Houdini ApprenticeからMayaにオブジェクトを読み込む裏ワザ！（修正済み）"
  },
  "articleUrl": "https://note.com/johnkparkh13/n/n841b189ac521",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120402.jpg",
  "creationDate": "2021-12-04",
  "author": {
      "name": "@ijiVFX",
      "twitterIcon": "ijiVFX.jpg",
      "qiitaUrl": "https://qiita.com/ijiVFX",
      "twitterUrl": "https://twitter.com/ijiVFX"
  },
  "title": {
      "ja": "爆発で硬い地面がえぐれた様な跡を作るよ",
      "en": "爆発で硬い地面がえぐれた様な跡を作るよ"
  },
  "articleUrl": "https://qiita.com/ijiVFX/items/66c29070c23a2f99d38b",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120502.jpg",
  "creationDate": "2021-12-05",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "「枠内」な (バグ) レポートの書き方",
      "en": "「枠内」な (バグ) レポートの書き方"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2021/12/how-to-write-on-target-bug-report.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120602.jpg",
  "creationDate": "2021-12-06",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "LayoutAssetGalleryとLayout",
      "en": "LayoutAssetGalleryとLayout"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/10_Houdini/11_SOLARIS/17_layout_asset_gallery/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120702.jpg",
  "creationDate": "2021-12-07",
  "author": {
      "name": "@d-gfx",
      "twitterIcon": "d-gfx.jpg",
      "qiitaUrl": "https://qiita.com/d-gfx",
      "twitterUrl": "https://twitter.com/d-gfx"
  },
  "title": {
      "ja": "SDFについて（その１：基礎および可視化方法について）",
      "en": "SDFについて（その１：基礎および可視化方法について）"
  },
  "articleUrl": "https://dlanggraphics.blogspot.com/2021/12/houdini-apprentice-advent-calendar-2021-01.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120802.jpg",
  "creationDate": "2021-12-08",
  "author": {
      "name": "@d-gfx",
      "twitterIcon": "d-gfx.jpg",
      "qiitaUrl": "https://qiita.com/d-gfx",
      "twitterUrl": "https://twitter.com/d-gfx"
  },
  "title": {
      "ja": "SDFについて（その２：xyzdist の利用）",
      "en": "SDFについて（その２：xyzdist の利用）"
  },
  "articleUrl": "https://dlanggraphics.blogspot.com/2021/12/houdini-apprentice-advent-calendar-2021-02.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021120902.jpg",
  "creationDate": "2021-12-09",
  "author": {
      "name": "@d-gfx",
      "twitterIcon": "d-gfx.jpg",
      "qiitaUrl": "https://qiita.com/d-gfx",
      "twitterUrl": "https://twitter.com/d-gfx"
  },
  "title": {
      "ja": "SDFについて（その３：応用例）",
      "en": "SDFについて（その３：応用例）"
  },
  "articleUrl": "https://dlanggraphics.blogspot.com/2021/12/houdini-apprentice-advent-calendar-2021-03.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021120902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121002.jpg",
  "creationDate": "2021-12-10",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "Match Size を最初のフレームだけ適用",
      "en": "Match Size を最初のフレームだけ適用"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2021/12/match-size-only-on-first-frame.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121102.jpg",
  "creationDate": "2021-12-11",
  "author": {
      "name": "@Borndigital_Yoshida",
      "twitterIcon": "Borndigital_Yoshida.jpg",
      "qiitaUrl": "https://qiita.com/Borndigital_Yoshida",
      "twitterUrl": "https://twitter.com/Borndigital_Yoshida"
  },
  "title": {
      "ja": "Houdini19で簡単にOCIO（ミニマム設定）を設定する",
      "en": "Houdini19で簡単にOCIO（ミニマム設定）を設定する"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/4412128745753",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121202.jpg",
  "creationDate": "2021-12-12",
  "author": {
      "name": "@kkcg",
      "twitterIcon": "kkcg.jpg",
      "qiitaUrl": "https://qiita.com/kkcg",
      "twitterUrl": "https://twitter.com/kkcg"
  },
  "title": {
      "ja": "ぶら下げたこんにゃくを顔面にぶつける in Houdini",
      "en": "ぶら下げたこんにゃくを顔面にぶつける in Houdini"
  },
  "articleUrl": "https://kk-cg.net/?p=82",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121302.jpg",
  "creationDate": "2021-12-13",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "ナイトライフにちなむ布地をプレゼントします",
      "en": "ナイトライフにちなむ布地をプレゼントします"
  },
  "articleUrl": "https://qiita.com/Alidade/items/72bccf2bba38e017d33c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121402.jpg",
  "creationDate": "2021-12-14",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "MaterialXで遊ぶ",
      "en": "MaterialXで遊ぶ"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/d4459493248b147f4ea6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121502.jpg",
  "creationDate": "2021-12-15",
  "author": {
      "name": "@Borndigital_Yoshida",
      "twitterIcon": "Borndigital_Yoshida.jpg",
      "qiitaUrl": "https://qiita.com/Borndigital_Yoshida",
      "twitterUrl": "https://twitter.com/Borndigital_Yoshida"
  },
  "title": {
      "ja": "Houdini19のビューポートでPyroのMotionVectorやNormalを確認する",
      "en": "Houdini19のビューポートでPyroのMotionVectorやNormalを確認する"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/4412125577369",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121602.jpg",
  "creationDate": "2021-12-16",
  "author": {
      "name": "@okada_takuya",
      "twitterIcon": "okada_takuya.jpg",
      "qiitaUrl": "https://qiita.com/okada_takuya",
      "twitterUrl": "https://twitter.com/okada_takuya"
  },
  "title": {
      "ja": "Houdini 19.0 版 バリエーションコピー　~Merge Packedの使用~",
      "en": "Houdini 19.0 版 バリエーションコピー　~Merge Packedの使用~"
  },
  "articleUrl": "https://qiita.com/okada_takuya/items/aca23e14209d4cedd574",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121702.jpg",
  "creationDate": "2021-12-17",
  "author": {
      "name": "@shige_ktgw",
      "twitterIcon": "shige_ktgw.jpg",
      "qiitaUrl": "https://qiita.com/shige_ktgw",
      "twitterUrl": "https://twitter.com/shige_ktgw"
  },
  "title": {
      "ja": "VOPを使ってVolume Deform",
      "en": "VOPを使ってVolume Deform"
  },
  "articleUrl": "http://nomoreretake.net/2021/12/17/houdinivop_volume-deformer/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121802.jpg",
  "creationDate": "2021-12-18",
  "author": {
      "name": "@indyzone",
      "twitterIcon": "indyzone.jpg",
      "qiitaUrl": "https://qiita.com/indyzone",
      "twitterUrl": "https://twitter.com/indyzone"
  },
  "title": {
      "ja": "Gas Project Non Divergentについて",
      "en": "Gas Project Non Divergentについて"
  },
  "articleUrl": "https://bit.ly/3sb9PA1",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021121902.jpg",
  "creationDate": "2021-12-19",
  "author": {
      "name": "@bechica",
      "twitterIcon": "bechica.jpg",
      "qiitaUrl": "https://qiita.com/bechica",
      "twitterUrl": "https://twitter.com/bechica"
  },
  "title": {
      "ja": "これから Houdini を始めるあなたへ",
      "en": "これから Houdini を始めるあなたへ"
  },
  "articleUrl": "https://qiita.com/bechica/items/62dda8ddd99db482bee1",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021121902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122002.jpg",
  "creationDate": "2021-12-20",
  "author": {
      "name": "@ryuji_shirai",
      "twitterIcon": "ryuji_shirai.jpg",
      "qiitaUrl": "https://qiita.com/ryuji_shirai",
      "twitterUrl": "https://twitter.com/ryuji_shirai"
  },
  "title": {
      "ja": "MatrixのアレをHoudiniで作ってみた",
      "en": "MatrixのアレをHoudiniで作ってみた"
  },
  "articleUrl": "https://qiita.com/ryuji_shirai/items/9ee0f26968bdef66ea22",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122102.jpg",
  "creationDate": "2021-12-21",
  "author": {
      "name": "@Bosshi",
      "twitterIcon": "Bosshi.jpg",
      "qiitaUrl": "https://qiita.com/Bosshi",
      "twitterUrl": "https://twitter.com/Bosshi"
  },
  "title": {
      "ja": "Houdiniでバリエーション作成！",
      "en": "Houdiniでバリエーション作成！"
  },
  "articleUrl": "https://qiita.com/Bosshi/items/08f1d62024fa39bd319f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122202.jpg",
  "creationDate": "2021-12-22",
  "author": {
      "name": "@shin_t_o_",
      "twitterIcon": "shin_t_o_.jpg",
      "qiitaUrl": "https://qiita.com/shin_t_o_",
      "twitterUrl": "https://twitter.com/shin_t_o_"
  },
  "title": {
      "ja": "Houdiniのattributeをデータベースにして都市データを扱ってみる(1. 実装編)",
      "en": "Houdiniのattributeをデータベースにして都市データを扱ってみる(1. 実装編)"
  },
  "articleUrl": "https://qiita.com/shin_t_o_/items/c10341115efb3f35cdb0",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122302.jpg",
  "creationDate": "2021-12-23",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "Event Scriptを利用してWrangleのRun Overを表示する",
      "en": "Event Scriptを利用してWrangleのRun Overを表示する"
  },
  "articleUrl": "https://www.kickbase.net/entry/houdini_event_script",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122402.jpg",
  "creationDate": "2021-12-24",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "なぜ USD を使うのか? なぜ Solaris を使うのか?",
      "en": "なぜ USD を使うのか? なぜ Solaris を使うのか?"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2021/12/why-use-usd-why-use-solaris.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2021122502.jpg",
  "creationDate": "2021-12-25",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "TouchDesignerからHoudiniへKinectの情報を持っていきたい",
      "en": "TouchDesignerからHoudiniへKinectの情報を持っていきたい"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/3cbb20131a3cf490bda7",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2021122502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}







,
{
  "thumbnailUrl": "2022120101.jpg",
  "creationDate": "2022-12-01",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "Houdini x Unity : VAT関連Tips & 備忘録",
      "en": "Houdini x Unity : VAT関連Tips & 備忘録"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/4469ec6ccce3c53f4d37",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120201.jpg",
  "creationDate": "2022-12-02",
  "author": {
      "name": "@PontaYamazato",
      "twitterIcon": "PontaYamazato.jpg",
      "qiitaUrl": "https://qiita.com/PontaYamazato",
      "twitterUrl": "https://twitter.com/PontaYamazato"
  },
  "title": {
      "ja": "「音の絵」について",
      "en": "「音の絵」について"
  },
  "articleUrl": "https://note.com/pontayamazato/n/ncfe782b60d62",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120301.jpg",
  "creationDate": "2022-12-03",
  "author": {
      "name": "@sasaki_0222",
      "twitterIcon": "sasaki_0222.jpg",
      "qiitaUrl": "https://qiita.com/sasaki_0222",
      "twitterUrl": "https://twitter.com/sasaki_0222"
  },
  "title": {
      "ja": "Multi-directional Contribution Maps の書き出し設定について",
      "en": "Multi-directional Contribution Maps の書き出し設定について"
  },
  "articleUrl": "https://qiita.com/sasaki_0222/items/96ee2df29f0abc8f05d3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120401.jpg",
  "creationDate": "2022-12-04",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "HDK: Houdini Development Kit入門",
      "en": "HDK: Houdini Development Kit入門"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/14cb1804ba426d7b287f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120501.jpg",
  "creationDate": "2022-12-05",
  "author": {
      "name": "@takavfx",
      "twitterIcon": "takavfx.jpg",
      "qiitaUrl": "https://qiita.com/takavfx",
      "twitterUrl": "https://twitter.com/takavfx"
  },
  "title": {
      "ja": "Houdini を Python 3 でやる!!! Part.2",
      "en": "Houdini を Python 3 でやる!!! Part.2"
  },
  "articleUrl": "https://qiita.com/takavfx/items/13e1059408d9ecf06a34",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120601.jpg",
  "creationDate": "2022-12-06",
  "author": {
      "name": "@sugiggy",
      "twitterIcon": "sugiggy.jpg",
      "qiitaUrl": "https://qiita.com/sugiggy",
      "twitterUrl": "https://twitter.com/sugiggy"
  },
  "title": {
      "ja": "ダイナミックオプティマイズサブディビジョン(長っ)",
      "en": "ダイナミックオプティマイズサブディビジョン(長っ)"
  },
  "articleUrl": "http://sugi-iggy.blogspot.com/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120701.jpg",
  "creationDate": "2022-12-07",
  "author": {
      "name": "@70_cg_art",
      "twitterIcon": "70_cg_art.jpg",
      "qiitaUrl": "https://qiita.com/70_cg_art",
      "twitterUrl": "https://twitter.com/70_cg_art"
  },
  "title": {
      "ja": "Edge Slideを作る【モデリングツール】",
      "en": "Edge Slideを作る【モデリングツール】"
  },
  "articleUrl": "https://qiita.com/70_cg_art/items/86343868180afa0b942a",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120801.jpg",
  "creationDate": "2022-12-08",
  "author": {
      "name": "@shop_0761",
      "twitterIcon": "shop_0761.jpg",
      "qiitaUrl": "https://qiita.com/shop_0761",
      "twitterUrl": "https://twitter.com/shop_0761"
  },
  "title": {
      "ja": "[Houdini] 気合でリボンを結ぶ [Vellum Brush]",
      "en": "[Houdini] 気合でリボンを結ぶ [Vellum Brush]"
  },
  "articleUrl": "https://shop-0761.hatenablog.com/entry/2022/12/08/120000",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120901.jpg",
  "creationDate": "2022-12-09",
  "author": {
      "name": "@Borndigital_Yoshida",
      "twitterIcon": "Borndigital_Yoshida.jpg",
      "qiitaUrl": "https://qiita.com/Borndigital_Yoshida",
      "twitterUrl": "https://twitter.com/Borndigital_Yoshida"
  },
  "title": {
      "ja": "SolarisでMaterialXファイルを保存して、再利用する",
      "en": "SolarisでMaterialXファイルを保存して、再利用する"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/13156119863705",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121001.jpg",
  "creationDate": "2022-12-10",
  "author": {
      "name": "@_yaitasakana",
      "twitterIcon": "_yaitasakana.jpg",
      "qiitaUrl": "https://qiita.com/_yaitasakana",
      "twitterUrl": "https://twitter.com/_yaitasakana"
  },
  "title": {
      "ja": "HoduiniのjobをDeadlineに投げてみるお話",
      "en": "HoduiniのjobをDeadlineに投げてみるお話"
  },
  "articleUrl": "https://qiita.com/_yaitasakana/items/bc4aefe9d68ccd54b0a9",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121101.jpg",
  "creationDate": "2022-12-11",
  "author": {
      "name": "@fereria",
      "twitterIcon": "fereria.jpg",
      "qiitaUrl": "https://qiita.com/fereria",
      "twitterUrl": "https://twitter.com/fereria"
  },
  "title": {
      "ja": "SOLARISの sopimportを攻略する",
      "en": "SOLARISの sopimportを攻略する"
  },
  "articleUrl": "https://fereria.github.io/reincarnation_tech/05_DCCTool/10_Houdini/11_SOLARIS/20_sopimport/",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121201.jpg",
  "creationDate": "2022-12-12",
  "author": {
      "name": "@procedural_design",
      "twitterIcon": "procedural_design.jpg",
      "qiitaUrl": "https://qiita.com/procedural_design",
      "twitterUrl": "https://twitter.com/procedural_design"
  },
  "title": {
      "ja": "Houdini 19.5で追加されたTangent Field SOPについて",
      "en": "Houdini 19.5で追加されたTangent Field SOPについて"
  },
  "articleUrl": "https://qiita.com/procedural_design/items/31884002da0a353393dc",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121301.jpg",
  "creationDate": "2022-12-13",
  "author": {
      "name": "@55hertz",
      "twitterIcon": "55hertz.jpg",
      "qiitaUrl": "https://qiita.com/55hertz",
      "twitterUrl": "https://twitter.com/55hertz"
  },
  "title": {
      "ja": "Solaris Karma Physical Lens shaderを試してみた",
      "en": "Solaris Karma Physical Lens shaderを試してみた"
  },
  "articleUrl": "https://qiita.com/55hertz/items/1a665c899a8cc1afff2f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121401.jpg",
  "creationDate": "2022-12-14",
  "author": {
      "name": "@TF_siri",
      "twitterIcon": "TF_siri.jpg",
      "qiitaUrl": "https://qiita.com/TF_siri",
      "twitterUrl": "https://twitter.com/TF_siri"
  },
  "title": {
      "ja": "intersect関数で色々しようの話。",
      "en": "intersect関数で色々しようの話。"
  },
  "articleUrl": "https://qiita.com/TF_siri/items/582b095d8deec2fdeb0d",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121501.jpg",
  "creationDate": "2022-12-15",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "CGWORLD 2022 クリエイティブカンファレンス登壇内容の振り返り",
      "en": "CGWORLD 2022 クリエイティブカンファレンス登壇内容の振り返り"
  },
  "articleUrl": "https://kickbase.net/entry/cgwcc2022",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121601.jpg",
  "creationDate": "2022-12-16",
  "author": {
      "name": "@TrsNium",
      "twitterIcon": "TrsNium.jpg",
      "qiitaUrl": "https://qiita.com/TrsNium",
      "twitterUrl": "https://twitter.com/TrsNium"
  },
  "title": {
      "ja": "フルプロシージャル社寺建設",
      "en": "フルプロシージャル社寺建設"
  },
  "articleUrl": "https://qiita.com/TrsNium/items/bd77659b8b2fb47b4463",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121601,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121701.jpg",
  "creationDate": "2022-12-17",
  "author": {
      "name": "@minami110",
      "twitterIcon": "minami110.jpg",
      "qiitaUrl": "https://qiita.com/minami110",
      "twitterUrl": "https://twitter.com/minami110"
  },
  "title": {
      "ja": "KineFX で Procedual Rigging をつくる",
      "en": "KineFX で Procedual Rigging をつくる"
  },
  "articleUrl": "https://scrapbox.io/hounotes/KineFX_%E3%81%A7_Procedual_Rigging_%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121701,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121801.jpg",
  "creationDate": "2022-12-18",
  "author": {
      "name": "@d658t",
      "twitterIcon": "d658t.jpg",
      "qiitaUrl": "https://qiita.com/d658t",
      "twitterUrl": "https://twitter.com/d658t"
  },
  "title": {
      "ja": "HDA作成ガイドライン",
      "en": "HDA作成ガイドライン"
  },
  "articleUrl": "https://qiita.com/d658t/items/a9f785d741037021e6ee",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121801,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121901.jpg",
  "creationDate": "2022-12-19",
  "author": {
      "name": "@jhorikawa_err",
      "twitterIcon": "jhorikawa_err.jpg",
      "qiitaUrl": "https://qiita.com/jhorikawa_err",
      "twitterUrl": "https://twitter.com/jhorikawa_err"
  },
  "title": {
      "ja": "Houdiniでピクセルアートを作る（Ordered Dithering利用編）",
      "en": "Houdiniでピクセルアートを作る（Ordered Dithering利用編）"
  },
  "articleUrl": "https://qiita.com/jhorikawa_err/items/a88c448d40de6f764b28",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121901,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122001.jpg",
  "creationDate": "2022-12-20",
  "author": {
      "name": "@m__a__",
      "twitterIcon": "m__a__.jpg",
      "qiitaUrl": "https://qiita.com/m__a__",
      "twitterUrl": "https://twitter.com/m__a__"
  },
  "title": {
      "ja": "カスタム座標とカスタムフィールドとポイントからフィールド直読み",
      "en": "カスタム座標とカスタムフィールドとポイントからフィールド直読み"
  },
  "articleUrl": "https://qiita.com/m__a__/items/cd3ccf5b2423f9d227f1",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122001,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122101.jpg",
  "creationDate": "2022-12-21",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "画像をトレースする",
      "en": "画像をトレースする"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/ad3bbc32fc3c7d71739d",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122101,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122201.jpg",
  "creationDate": "2022-12-22",
  "author": {
      "name": "@AokTky_dori",
      "twitterIcon": "AokTky_dori.jpg",
      "qiitaUrl": "https://qiita.com/AokTky_dori",
      "twitterUrl": "https://twitter.com/AokTky_dori"
  },
  "title": {
      "ja": "CarveSOPをAttributeで制御したい。",
      "en": "CarveSOPをAttributeで制御したい。"
  },
  "articleUrl": "https://qiita.com/AokTky_dori/items/f8b6eb88ea87aa04e584",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122201,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122301.jpg",
  "creationDate": "2022-12-23",
  "author": {
      "name": "@tanitta",
      "twitterIcon": "tanitta.jpg",
      "qiitaUrl": "https://qiita.com/tanitta",
      "twitterUrl": "https://twitter.com/tanitta"
  },
  "title": {
      "ja": "HoudiniでBlenderのblend形式のファイルを読み込む（？）HDAについて",
      "en": "HoudiniでBlenderのblend形式のファイルを読み込む（？）HDAについて"
  },
  "articleUrl": "https://tanitta.hatenablog.com/entry/2022/12/25/230219?_ga=2.50517931.349575752.1671976797-730120998.1564028130",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122301,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122401.jpg",
  "creationDate": "2022-12-24",
  "author": {
      "name": "@RyanZhang",
      "twitterIcon": "RyanZhang.jpg",
      "qiitaUrl": "https://qiita.com/RyanZhang",
      "twitterUrl": "https://twitter.com/RyanZhang"
  },
  "title": {
      "ja": "初プロシージャルモデリング制作の考え方とtipsのまとめ",
      "en": "初プロシージャルモデリング制作の考え方とtipsのまとめ"
  },
  "articleUrl": "https://guncys.notion.site/tips-82036e589af84e5cb5797a39406508e2",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122401,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122501.jpg",
  "creationDate": "2022-12-25",
  "author": {
      "name": "@ijiVFX",
      "twitterIcon": "ijiVFX.jpg",
      "qiitaUrl": "https://qiita.com/ijiVFX",
      "twitterUrl": "https://twitter.com/ijiVFX"
  },
  "title": {
      "ja": "勾配(Gradient)アレコレ",
      "en": "勾配(Gradient)アレコレ"
  },
  "articleUrl": "https://qiita.com/ijiVFX/items/6f3d3aeea57dab481ebf",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122501,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}



,{
  "thumbnailUrl": "2022120102.jpg",
  "creationDate": "2022-12-01",
  "author": {
      "name": "@Shampagne",
      "twitterIcon": "Shampagne.jpg",
      "qiitaUrl": "https://qiita.com/Shampagne",
      "twitterUrl": "https://twitter.com/Shampagne"
  },
  "title": {
      "ja": "[Houdini] Parameterの変更箇所だけを一発で表示するツール",
      "en": "[Houdini] Parameterの変更箇所だけを一発で表示するツール"
  },
  "articleUrl": "https://qiita.com/Shampagne/items/84abbd57769910c9a855",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120202.jpg",
  "creationDate": "2022-12-02",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "TraceSOPでキラキラした金のまつぼっくりを作ろう",
      "en": "TraceSOPでキラキラした金のまつぼっくりを作ろう"
  },
  "articleUrl": "https://nullnode.wixsite.com/houdinipsalm/post/tracesop%E3%81%A7%E3%82%AD%E3%83%A9%E3%82%AD%E3%83%A9%E3%81%97%E3%81%9F%E9%87%91%E3%81%AE%E3%81%BE%E3%81%A4%E3%81%BC%E3%81%A3%E3%81%8F%E3%82%8A%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120302.jpg",
  "creationDate": "2022-12-03",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "Houdiniでプラレール自動生成",
      "en": "Houdiniでプラレール自動生成"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/b22c45fe5b0ae0277224",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120402.jpg",
  "creationDate": "2022-12-04",
  "author": {
      "name": "@futabarei",
      "twitterIcon": "futabarei.jpg",
      "qiitaUrl": "https://qiita.com/futabarei",
      "twitterUrl": "https://twitter.com/futabarei"
  },
  "title": {
      "ja": "VRChatで使うアバターをHoudini (kineFX)でセットアップする",
      "en": "VRChatで使うアバターをHoudini (kineFX)でセットアップする"
  },
  "articleUrl": "https://note.com/futafusa/n/n483c20da7398",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120502.jpg",
  "creationDate": "2022-12-05",
  "author": {
      "name": "@Harry21934944",
      "twitterIcon": "Harry21934944.jpg",
      "qiitaUrl": "https://qiita.com/Harry21934944",
      "twitterUrl": "https://twitter.com/Harry21934944"
  },
  "title": {
      "ja": "POPで作成したParticleのうち何割かを消したいと言われたときの対処方法",
      "en": "POPで作成したParticleのうち何割かを消したいと言われたときの対処方法"
  },
  "articleUrl": "https://qiita.com/Harry21934944/items/db5b2fd3de115c2ea108",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120602.jpg",
  "creationDate": "2022-12-06",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "金のまつぼっくりを利用してまつぼっくりのリース部分を作る",
      "en": "金のまつぼっくりを利用してまつぼっくりのリース部分を作る"
  },
  "articleUrl": "https://nullnode.wixsite.com/houdinipsalm/post/%E3%81%BE%E3%81%A4%E3%81%BC%E3%81%A3%E3%81%8F%E3%82%8A%E3%81%AE%E3%83%AA%E3%83%BC%E3%82%B9%E9%83%A8%E5%88%86%E3%82%92%E4%BD%9C%E3%82%8B",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120702.jpg",
  "creationDate": "2022-12-07",
  "author": {
      "name": "@kit2cuz",
      "twitterIcon": "kit2cuz.jpg",
      "qiitaUrl": "https://qiita.com/kit2cuz",
      "twitterUrl": "https://twitter.com/kit2cuz"
  },
  "title": {
      "ja": "エッジに対してWrangleする",
      "en": "エッジに対してWrangleする"
  },
  "articleUrl": "https://qiita.com/kit2cuz/items/fadcfa40322c3017bf4f",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120802.jpg",
  "creationDate": "2022-12-08",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "部屋と詰Houdiniと私",
      "en": "部屋と詰Houdiniと私"
  },
  "articleUrl": "https://kickbase.net/entry/tsume_houdini",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022120902.jpg",
  "creationDate": "2022-12-09",
  "author": {
      "name": "@Borndigital_Yoshida",
      "twitterIcon": "Borndigital_Yoshida.jpg",
      "qiitaUrl": "https://qiita.com/Borndigital_Yoshida",
      "twitterUrl": "https://twitter.com/Borndigital_Yoshida"
  },
  "title": {
      "ja": "アニメーション付きUSDを出力する",
      "en": "アニメーション付きUSDを出力する"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/13308533851929",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022120902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121002.jpg",
  "creationDate": "2022-12-10",
  "author": {
      "name": "@tI30961587",
      "twitterIcon": "tI30961587.jpg",
      "qiitaUrl": "https://qiita.com/tI30961587",
      "twitterUrl": "https://twitter.com/tI30961587"
  },
  "title": {
      "ja": "ドット積を使ってラバートイに雪を積もらせる",
      "en": "ドット積を使ってラバートイに雪を積もらせる"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/13244244318105",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121102.jpg",
  "creationDate": "2022-12-11",
  "author": {
      "name": "@Alidade",
      "twitterIcon": "Alidade.jpg",
      "qiitaUrl": "https://qiita.com/Alidade",
      "twitterUrl": "https://twitter.com/Alidade"
  },
  "title": {
      "ja": "SOP（ノード）のアイコンを作ろう計画",
      "en": "SOP（ノード）のアイコンを作ろう計画"
  },
  "articleUrl": "https://qiita.com/Alidade/items/d8e30e59b69cd09c5c7c",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121202.jpg",
  "creationDate": "2022-12-12",
  "author": {
      "name": "@Harry21934944",
      "twitterIcon": "Harry21934944.jpg",
      "qiitaUrl": "https://qiita.com/Harry21934944",
      "twitterUrl": "https://twitter.com/Harry21934944"
  },
  "title": {
      "ja": "キャラクターの足が地面に接したときに自動でPointを作成してEmitterを作る",
      "en": "キャラクターの足が地面に接したときに自動でPointを作成してEmitterを作る"
  },
  "articleUrl": "https://qiita.com/Harry21934944/items/66d5cf593abcbbefd6f7",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121302.jpg",
  "creationDate": "2022-12-13",
  "author": {
      "name": "@Harry21934944",
      "twitterIcon": "Harry21934944.jpg",
      "qiitaUrl": "https://qiita.com/Harry21934944",
      "twitterUrl": "https://twitter.com/Harry21934944"
  },
  "title": {
      "ja": "PyroのシミュレーションでCamera外のシミュレーションを消してレゾを節約する",
      "en": "PyroのシミュレーションでCamera外のシミュレーションを消してレゾを節約する"
  },
  "articleUrl": "https://qiita.com/Harry21934944/items/9635f04cbf356790a757",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121402.jpg",
  "creationDate": "2022-12-14",
  "author": {
      "name": "@kickbase",
      "twitterIcon": "kickbase.jpg",
      "qiitaUrl": "https://qiita.com/kickbase",
      "twitterUrl": "https://twitter.com/kickbase"
  },
  "title": {
      "ja": "部屋と詰Houdini",
      "en": "部屋と詰Houdini"
  },
  "articleUrl": "https://kickbase.net/entry/tsume_houdini2",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121502.jpg",
  "creationDate": "2022-12-15",
  "author": {
      "name": "@indyzone",
      "twitterIcon": "indyzone.jpg",
      "qiitaUrl": "https://qiita.com/indyzone",
      "twitterUrl": "https://twitter.com/indyzone"
  },
  "title": {
      "ja": "Houdini Python Viewer State イベントハンドラーの基本とマウスイベントを扱う",
      "en": "Houdini Python Viewer State イベントハンドラーの基本とマウスイベントを扱う"
  },
  "articleUrl": "https://bit.ly/3j3Iqx8",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121602.jpg",
  "creationDate": "2022-12-16",
  "author": {
      "name": "@kurosawa",
      "twitterIcon": "kurosawa.jpg",
      "qiitaUrl": "https://qiita.com/kurosawa",
      "twitterUrl": "https://twitter.com/kurosawa"
  },
  "title": {
      "ja": "Unreal Engine向けFBX出力の話",
      "en": "Unreal Engine向けFBX出力の話"
  },
  "articleUrl": "https://note.com/thesaurus/n/nbf8040889c66",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121602,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121702.jpg",
  "creationDate": "2022-12-17",
  "author": {
      "name": "@tI30961587",
      "twitterIcon": "tI30961587.jpg",
      "qiitaUrl": "https://qiita.com/tI30961587",
      "twitterUrl": "https://twitter.com/tI30961587"
  },
  "title": {
      "ja": "ノードを使うかコードで書くか問題",
      "en": "ノードを使うかコードで書くか問題"
  },
  "articleUrl": "https://support.borndigital.co.jp/hc/ja/articles/13567469651353",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121702,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121802.jpg",
  "creationDate": "2022-12-18",
  "author": {
      "name": "@Lethe_movie",
      "twitterIcon": "Lethe_movie.jpg",
      "qiitaUrl": "https://qiita.com/Lethe_movie",
      "twitterUrl": "https://twitter.com/Lethe_movie"
  },
  "title": {
      "ja": "目指せ回転マスター！Quaternion系VEX関数まとめ",
      "en": "目指せ回転マスター！Quaternion系VEX関数まとめ"
  },
  "articleUrl": "https://qiita.com/Lethe_movie/items/36d3317032eba041cb0e",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121802,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022121902.jpg",
  "creationDate": "2022-12-19",
  "author": {
      "name": "@egzao1o9_CG",
      "twitterIcon": "egzao1o9_CG.jpg",
      "qiitaUrl": "https://qiita.com/egzao1o9_CG",
      "twitterUrl": "https://twitter.com/egzao1o9_CG"
  },
  "title": {
      "ja": "岩のマテリアル",
      "en": "岩のマテリアル"
  },
  "articleUrl": "https://qiita.com/egzao1o9_CG/items/4e9b3c850821b647c303",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022121902,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122002.jpg",
  "creationDate": "2022-12-20",
  "author": {
      "name": "@Muteriku",
      "twitterIcon": "Muteriku.jpg",
      "qiitaUrl": "https://qiita.com/Muteriku",
      "twitterUrl": "https://twitter.com/Muteriku"
  },
  "title": {
      "ja": "Pivot Painter の解説",
      "en": "Pivot Painter の解説"
  },
  "articleUrl": "https://qiita.com/Muteriku/items/857e02ac746b091a73f3",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122002,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122102.jpg",
  "creationDate": "2022-12-21",
  "author": {
      "name": "@osouzai",
      "twitterIcon": "osouzai.jpg",
      "qiitaUrl": "https://qiita.com/osouzai",
      "twitterUrl": "https://twitter.com/osouzai"
  },
  "title": {
      "ja": "MOPsであそぼう",
      "en": "MOPsであそぼう"
  },
  "articleUrl": "https://qiita.com/osouzai/items/5c002e17877ff67b34f6",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122102,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122202.jpg",
  "creationDate": "2022-12-22",
  "author": {
      "name": "@shin_t_o_",
      "twitterIcon": "shin_t_o_.jpg",
      "qiitaUrl": "https://qiita.com/shin_t_o_",
      "twitterUrl": "https://twitter.com/shin_t_o_"
  },
  "title": {
      "ja": "このattribute、どこで定義したんだっけ…をpythonで探す",
      "en": "このattribute、どこで定義したんだっけ…をpythonで探す"
  },
  "articleUrl": "https://qiita.com/shin_t_o_/items/c7b4eeac532b52876bc2",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122202,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122302.jpg",
  "creationDate": "2022-12-23",
  "author": {
      "name": "@ts_bros",
      "twitterIcon": "ts_bros.jpg",
      "qiitaUrl": "https://qiita.com/ts_bros",
      "twitterUrl": "https://twitter.com/ts_bros"
  },
  "title": {
      "ja": "Minutes of Grooming with Houdini",
      "en": "Minutes of Grooming with Houdini"
  },
  "articleUrl": "https://msjbinc.blogspot.com/2022/12/we-are-groom-generaters.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122302,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122402.jpg",
  "creationDate": "2022-12-24",
  "author": {
      "name": "@ikatnek",
      "twitterIcon": "ikatnek.jpg",
      "qiitaUrl": "https://qiita.com/ikatnek",
      "twitterUrl": "https://twitter.com/ikatnek"
  },
  "title": {
      "ja": "日本語ドキュメントをローカルで動かす",
      "en": "日本語ドキュメントをローカルで動かす"
  },
  "articleUrl": "https://ikatnek.blogspot.com/2022/12/hhelp2022.html",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122402,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
},
{
  "thumbnailUrl": "2022122502.jpg",
  "creationDate": "2022-12-25",
  "author": {
      "name": "@jyouryuusui",
      "twitterIcon": "jyouryuusui.jpg",
      "qiitaUrl": "https://qiita.com/jyouryuusui",
      "twitterUrl": "https://twitter.com/jyouryuusui"
  },
  "title": {
      "ja": "KineFX Part3：SecondaryMotion",
      "en": "KineFX Part3：SecondaryMotion"
  },
  "articleUrl": "https://qiita.com/jyouryuusui/items/9573a9268eba839a0ff7",
  "categories": "Houdini",
  "tags": "SOP Python",
  "articleId": 2022122502,
  "summary": {
      "ja": "ダミー",
      "en": "Dummy"
  }
}






  
]
}